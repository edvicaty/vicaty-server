{"version":3,"sources":["services/auth.js","context.js","components/Documentation.js","components/LayoutApp.js","pages/Signup.js","pages/Login.js","pages/Home.js","services/backend.js","components/LoadingModal.js","components/Profile/CreateProjectFormModal.js","components/Profile/UpdateProjectFormModal.js","components/Profile/DuplicateProjectFormModal.js","components/Profile/DeleteProjectFormModal.js","components/Profile/ProjectsHeader.js","components/Profile/ProjectsBody.js","pages/Profile.js","components/Projects/CreateModelFormModal.js","components/Projects/UpdateModelFormModal.js","components/Projects/DeleteModelFormModal.js","components/Projects/ModelsHeader.js","components/Projects/ModelsBody.js","pages/Project.js","services/api.js","components/Models/CreateElementFormModal.js","components/Models/ElementsHeader.js","components/Models/DataCreateFormModal.js","components/Models/DataDeleteFormModal.js","components/Models/ElementDeleteFormModal.js","components/Models/DataUpdateFormModal.js","components/Models/ElementsBody.js","pages/Model.js","router.js","serviceWorker.js","index.js"],"names":["baseURL","authService","axios","create","withCredentials","interceptors","response","use","error","signup","a","username","email","password","post","user","login","userData","data","getCurrentUser","get","logoutP","Context","createContext","OurProvider","children","useState","setuser","loginUser","useEffect","getSession","Provider","value","logout","Title","Typography","TabPane","Tabs","Documentation","helpModalState","handleHelpModal","title","FileTextOutlined","width","visible","onOk","onCancel","style","background","id","level","href","margin","src","Item","defaultActiveKey","tab","key","backgroundColor","height","border","Header","Layout","Content","Footer","LayoutApp","useContext","setHelpModalState","className","marginBottom","overflow","theme","position","right","mode","to","SendOutlined","color","marginLeft","rotate","onClick","FileOutlined","ApartmentOutlined","toUpperCase","LogoutOutlined","LoginOutlined","UserAddOutlined","wordBreak","textAlign","bottom","paddingBottom","Signup","history","Form","useForm","form","openNotificationWithIcon","type","notification","message","description","values","push","layout","onFinish","label","name","rules","required","Password","marginTop","borderRadius","block","htmlType","contentStyle","fontSize","lineHeight","Text","Home","top","HeartOutlined","autoplay","effect","FieldTimeOutlined","CodeOutlined","padding","userService","viewProjects","projects","createProject","projectName","newProject","deleteProject","projectId","console","log","delete","createModel","createdModelName","newModel","viewProject","project","editProject","put","duplicateProject","viewModel","modelId","model","editModel","deleteCreatedModel","LoadingModal","loadingModal","handleLoadingModalFalse","okButtonProps","hidden","cancelButtonProps","size","CreateProjectFormModal","modalState","handleModal","UpdateProjectFormModal","updateModalState","handleUpdateModal","updateForm","onFinishUpdate","projectToUpdate","initialValue","DuplicateProjectFormModal","projectToDuplicate","duplicationModalState","handleDuplicationModal","duplicateForm","onFinishDuplication","DeleteProjectFormModal","projectDeleteModal","handleDeleteProject","deleteProjectConfirmed","Panel","Collapse","ProjectsHeader","header","_id","ProjectsBody","setProjectToUpdateF","setProjectToDuplicateF","setProjectF","gutter","map","xs","sm","md","lg","AppstoreOutlined","bordered","resetFields","created_at","slice","updated_at","Profile","setProjects","fetchedProjects","setFetchedProjects","setModalState","setProjectDeleteModal","setUpdateModalState","projectToDelete","setProjectToDelete","setProjectToUpdate","setDuplicationModalState","setProjectToDuplicate","setLoadingModal","handleLoadingModalTrue","getProjects","CreateModelFormModal","UpdateModelFormModal","modelUpdateModal","handleModelUpdateModal","updateModelForm","modelToUpdate","modelName","DeleteModelFormModal","modelDeleteModal","handleDeleteModal","deleteModelConfirmed","ModelsHeader","props","separator","match","params","fontWeight","ModelsBody","setModelToUpdateF","setModelF","createdModels","BlockOutlined","borderTop","Project","setProject","fetchedProject","setFetchedProject","setModelDeleteModal","modelToDelete","setModelToDelete","setModelUpdateModal","setModelToUpdate","getProject","createElement","elementName","userId","updatedModel","deleteElement","addSingle","updatedElement","deleteSingleData","dataId","updateSingle","CreateElementFormModal","ElementsHeader","DataCreateFormModal","dataCreationModal","handleDataCreationModal","dataForm","onFinishData","DataDeleteFormModal","deleteModalState","handleDeleteElementModal","deleteWithConfirmation","ElementDeleteFormModal","elementDeleteModal","handleElementDeletionModal","elementToDelete","confirmDeleteElement","DataUpdateFormModal","dataUpdateModal","handleDataUpdateModal","dataValue","updateDataForm","onFinishUpdateData","ElementsBody","updateElementModal","deleteElementModal","setElementNameF","setElementToDeleteF","elements","element","currentElement","Object","entries","BorderOutlined","replace","entry","Model","setModel","fetchedModel","setFetchedModel","setDataCreationModal","setElementName","setDeleteModalState","valueId","setValueId","setDataUpdateModal","setDataValue","setElementToDelete","setElementDeleteModal","elementNameN","valueIdN","getModel","router","component","path","exact","Login","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"2VACIA,EAAU,6BAETA,EAAU,oCAGf,IAAMC,EAAcC,IAAMC,OAAO,CAC/BH,UACAI,iBAAiB,IAGnBH,EAAYI,aAAaC,SAASC,KAChC,SAACD,GACC,OAAOA,KAET,SAACE,GACC,OAAOA,KAIJ,IAAMC,EAAM,uCAAG,mCAAAC,EAAA,6DAASC,EAAT,EAASA,SAAUC,EAAnB,EAAmBA,MAAOC,EAA1B,EAA0BA,SAA1B,SACDZ,EAAYa,KAAK,UAAW,CAC7CH,WACAE,WACAD,UAJkB,cACdG,EADc,yBAMbA,GANa,2CAAH,sDASNC,EAAK,uCAAG,WAAOC,GAAP,iBAAAP,EAAA,sEACUT,EAAYa,KAAK,SAAUG,GADrC,uBACLF,EADK,EACXG,KADW,kBAEZH,GAFY,2CAAH,sDAKLI,EAAc,uCAAG,8BAAAT,EAAA,sEACCT,EAAYmB,IAAI,gBADjB,uBACdL,EADc,EACpBG,KADoB,kBAErBH,GAFqB,2CAAH,qDAKdM,EAAO,uCAAG,sBAAAX,EAAA,sEACfT,EAAYmB,IAAI,WADD,2CAAH,qDCpCPE,EAAUC,0BAER,SAASC,EAAT,GAAoC,IAAbC,EAAY,EAAZA,SAAY,EACxBC,mBAAS,MADe,mBACzCX,EADyC,KACnCY,EADmC,KAahD,SAASC,EAAUb,GACjBY,EAAQZ,GAMV,OAjBAc,qBAAU,WAAM,4CACd,8BAAAnB,EAAA,sEACyBS,IADzB,iBAEE,QADQJ,EADV,EACUA,YACR,IAAIA,OAAJ,EAAIA,EAAMJ,WACRiB,EAAUb,GAHd,4CADc,uBAAC,WAAD,wBAOde,KACC,IAUD,kBAACR,EAAQS,SAAT,CACEC,MAAO,CACLjB,OACAa,YACAK,OATN,WACEN,EAAQ,SAULF,G,0DC5BCS,EAAUC,IAAVD,MACAE,EAAYC,IAAZD,QAuiBOE,EAriBO,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,eAAgBC,EAAsB,EAAtBA,gBACvC,OACE,kBAAC,IAAD,CACEC,MACE,oCACE,kBAACC,EAAA,EAAD,MADF,yBAIFC,MAAO,IACPC,QAASL,EACTM,KAAML,EACNM,SAAUN,EACVO,MAAO,CACLC,WAAY,mDAEd,kBAACd,EAAD,CAAOe,GAAG,UAAUC,MAAO,GACzB,kBAACR,EAAA,EAAD,MADF,aAKA,4BACE,4BACE,uBAAGS,KAAK,YAAR,YAEF,4BACE,uBAAGA,KAAK,cAAR,2DAIF,4BACE,uBAAGA,KAAK,YAAR,oCAEF,6BACA,4BACE,uBAAGA,KAAK,YAAR,aAEF,4BACE,uBAAGA,KAAK,UAAR,WAEF,4BACE,uBAAGA,KAAK,YAAR,aAEF,4BACE,uBAAGA,KAAK,SAAR,SAEF,6BACA,4BACE,uBAAGA,KAAK,aAAR,qBAEF,4BACE,uBAAGA,KAAK,QAAR,cAEF,6BACA,8BAEF,6BACE,6BAEA,kBAACjB,EAAD,CAAOe,GAAG,UAAUC,MAAO,GAA3B,WAGA,2BACE,4CADF,uDAEU,wCAEV,+MAKA,4BACE,4BACE,4CADF,uBACgD,IAC9C,2CAEF,4BACE,0CADF,uBAC8C,IAC5C,6CAEF,4BACE,4CADF,wBACgD,0CAGlD,kBAAC,IAAD,CACEH,MAAO,CAAEK,OAAQ,WAAYT,MAAO,QACpCU,IAAI,wBAEN,6BACA,6BACA,6BACA,6BACA,6BACA,kBAACnB,EAAD,CAAOe,GAAG,YAAYC,MAAO,GAA7B,0DAIA,2EAEE,uDAFF,4CAIE,6EAJF,iBAME,wDANF,kCAOE,qDAEF,6BACA,6BACA,6BACA,6BACA,6BACA,kBAAChB,EAAD,CAAOe,GAAG,UAAUC,MAAO,GAA3B,mCAGA,kFACuD,IACrD,uCAFF,yBAE4C,yCAF5C,8BAGwB,+CAHxB,gDAI2B,+CAJ3B,4BAKU,kDALV,KAOA,6BAEA,kBAAC,IAAD,KACE,kBAAC,IAASI,KAAV,gDAC0C,2CAE1C,kBAAC,IAASA,KAAV,gCAC0B,0CAD1B,oCAEiB,wCAFjB,kBAEsD,IACpD,+CAHF,UAGqC,gDAA8B,KAEnE,kBAAC,IAASA,KAAV,YACM,+CADN,gDAEa,2CAFb,uBAIA,kBAAC,IAASA,KAAV,aACO,gDADP,qBACuD,IACrD,2CAFF,iBAGgB,yCAHhB,qBAMF,6BACA,0EAC+C,IAC7C,oDAFF,uFAKA,kBAAC,IAAD,CACEP,MAAO,CAAEK,OAAQ,SAAUT,MAAO,QAClCU,IAAI,wBAEN,6BACA,6BACA,mHAEkB,gDAFlB,aAGY,mDAHZ,0BAKA,yEAC6C,0CAD7C,4HAG0D,IACxD,+CAJF,wBAMA,2EAEE,uDAFF,4CAIE,6EAJF,iBAME,wDANF,kCAOE,kDAEF,kBAACnB,EAAD,CAAOe,GAAG,UAAUC,MAAO,GAA3B,YAGA,yJAIA,+MAKA,iEACA,4BACE,4BACE,mDADF,mDAIA,4BACE,oEADF,sCAIA,4BACE,iDADF,gFAKF,2OAKA,2BACE,gDADF,yKAKA,kBAAChB,EAAD,CAAOe,GAAG,QAAQC,MAAO,GAAzB,UAGA,uFACA,wMAKA,kBAAC,IAAD,CACEH,MAAO,CAAEK,OAAQ,SAAUT,MAAO,QAClCU,IAAI,wBAEN,+DACA,4BACE,4BACE,iDADF,mDAIA,4BACE,wDADF,mDAIA,4BACE,oEADF,qCAIA,4BACE,+CADF,gFAKF,qOAKA,2BACE,gDADF,uKAKA,kBAACnB,EAAD,CAAOe,GAAG,UAAUC,MAAO,GAA3B,YAGA,gKAKA,iEACA,4BACE,4BACE,oDADF,gJAGyC,IACvC,kFAEF,6BACA,4BACE,oEADF,uCAKF,mGACwE,IACtE,yCAFF,QAE6B,0CAF7B,uIAOA,kBAAChB,EAAD,CAAOe,GAAG,OAAOC,MAAO,GAAxB,QAGA,yFACA,0IAIA,8DACA,4BACE,4BACE,4CADF,iEAKA,4BACE,+CADF,gFAKF,mGACwE,IACtE,iDAFF,QAEqC,0CAFrC,sHAMA,kBAAChB,EAAD,CAAOe,GAAG,WAAWC,MAAO,GAA5B,oBAGA,sDAC0B,gDAD1B,4CAEkC,sDAElC,wDAC4B,gDAD5B,yDAIA,kCACM,2DADN,qDAIA,mCACO,qDADP,yCAIA,kBAAChB,EAAD,CAAOe,GAAG,MAAMC,MAAO,GAAvB,aAGA,wCACY,uCADZ,sCAGA,kCACM,6CADN,oHAGY,iDAHZ,wBAKA,kCACM,8CADN,+DAKA,kBAAC,IAAD,CAAMK,iBAAiB,KACrB,kBAACnB,EAAD,CAASoB,IAAI,WAAWC,IAAI,KAC1B,kBAACvB,EAAD,CAAOgB,MAAO,GAAd,oBACA,2BACE,kDADF,iDAIA,2BACE,mDADF,QAGA,2BACE,kDACC,2BAEH,wBACEH,MAAO,CACLW,gBAAiB,UACjBC,OAAQ,MACRC,OAAQ,UAGZ,kBAAC1B,EAAD,CAAOgB,MAAO,GAAd,eACA,2BACE,kDADF,6DAIA,2BACE,mDADF,QAGA,2BACE,kDACC,2BAEH,wBACEH,MAAO,CACLW,gBAAiB,UACjBC,OAAQ,MACRC,OAAQ,WAId,kBAACxB,EAAD,CAASoB,IAAI,SAASC,IAAI,KACxB,kBAACvB,EAAD,CAAOgB,MAAO,GAAd,aACA,2BACE,kDADF,gEAIA,2BACE,mDADF,QAGA,2BACE,kDACC,2BAEH,wBACEH,MAAO,CACLW,gBAAiB,UACjBC,OAAQ,MACRC,OAAQ,UAGZ,kBAAC1B,EAAD,CAAOgB,MAAO,GAAd,8BACA,2BACE,kDADF,kEAIA,2BACE,mDADF,QAGA,2BACE,kDACC,2BAEH,wBACEH,MAAO,CACLW,gBAAiB,UACjBC,OAAQ,MACRC,OAAQ,WAId,kBAACxB,EAAD,CAASoB,IAAI,WAAWC,IAAI,KAC1B,kBAACvB,EAAD,CAAOgB,MAAO,GAAd,eACA,2BACE,kDADF,mFAIA,2BACE,mDADF,QAGA,2BACE,kDACC,2BAEH,wBACEH,MAAO,CACLW,gBAAiB,UACjBC,OAAQ,MACRC,OAAQ,UAGZ,kBAAC1B,EAAD,CAAOgB,MAAO,GAAd,kBACA,2BACE,kDADF,kEAIA,2BACE,mDADF,QAGA,2BACE,kDAEE,mEAGJ,wBACEH,MAAO,CACLW,gBAAiB,UACjBC,OAAQ,MACRC,OAAQ,UAGZ,kBAAC1B,EAAD,CAAOgB,MAAO,GAAd,kBACA,2BACE,kDADF,gFAIA,2BACE,mDADF,QAGA,2BACE,kDACC,2BAEH,wBACEH,MAAO,CACLW,gBAAiB,UACjBC,OAAQ,MACRC,OAAQ,WAId,kBAACxB,EAAD,CAASoB,IAAI,OAAOC,IAAI,KACtB,kBAACvB,EAAD,CAAOgB,MAAO,GAAd,YACA,2BACE,kDADF,mFAIA,2BACE,mDADF,QAGA,2BACE,kDACC,uDAEH,wBACEH,MAAO,CACLW,gBAAiB,UACjBC,OAAQ,MACRC,OAAQ,UAGZ,kBAAC1B,EAAD,CAAOgB,MAAO,GAAd,eACA,2BACE,kDADF,+FAIA,2BACE,mDADF,QAGA,2BACE,kDACC,2DAEH,wBACEH,MAAO,CACLW,gBAAiB,UACjBC,OAAQ,MACRC,OAAQ,UAGZ,kBAAC1B,EAAD,CAAOgB,MAAO,GAAd,eACA,2BACE,kDADF,+FAIA,2BACE,mDADF,QAGA,2BACE,kDACC,2BAEH,wBACEH,MAAO,CACLW,gBAAiB,UACjBC,OAAQ,MACRC,OAAQ,eCphBhBC,EAA4BC,IAA5BD,OAAQE,EAAoBD,IAApBC,QAASC,EAAWF,IAAXE,OA0FVC,EAzFG,SAAC,GAAkB,IAAhBxC,EAAe,EAAfA,SAAe,EACTyC,qBAAW5C,GAA5BP,EAD0B,EAC1BA,KAAMkB,EADoB,EACpBA,OADoB,EAEUP,oBAAS,GAFnB,mBAE3Ba,EAF2B,KAEX4B,EAFW,KAIlC,SAAS3B,IACP2B,GAAmB5B,GALa,4CAOlC,sBAAA7B,EAAA,sEACQW,IADR,OAEEY,IAFF,4CAPkC,sBAYlC,OACE,kBAAC,IAAD,CACEmC,UAAU,SACVrB,MAAO,CACLsB,aAAc,OACdC,SAAU,SAEZ,kBAAC,EAAD,CACE/B,eAAgBA,EAChBC,gBAAiBA,IAEnB,kBAACqB,EAAD,KACE,kBAAC,IAAD,CACEU,MAAM,QACNxB,MAAO,CAAEJ,MAAO,QAAS6B,SAAU,WAAYC,MAAO,KACtDC,KAAK,cACL,kBAAC,IAAKpB,KAAN,CAAWG,IAAI,KACb,kBAAC,IAAD,CAAMkB,GAAG,KACP,kBAACC,EAAA,EAAD,CACE7B,MAAO,CAAE8B,MAAO,UAAWC,WAAY,OACvCC,OAAO,OAHX,SAQF,kBAAC,IAAKzB,KAAN,CAAW0B,QAASxC,EAAiBiB,IAAI,KACvC,kBAACwB,EAAA,EAAD,MADF,iBAKClE,EACC,oCACE,kBAAC,IAAKuC,KAAN,CAAWG,IAAI,KACb,kBAAC,IAAD,CAAMkB,GAAG,YACP,kBAACO,EAAA,EAAD,MACCnE,EAAKJ,SAASwE,cAFjB,gBAKF,kBAAC,IAAK7B,KAAN,CAAW0B,QAlDW,2CAkDSvB,IAAI,KACjC,kBAAC2B,EAAA,EAAD,MADF,WAMF,oCACE,kBAAC,IAAK9B,KAAN,CAAWG,IAAI,KACb,kBAAC,IAAD,CAAMkB,GAAG,UACP,kBAACU,EAAA,EAAD,MADF,WAIF,kBAAC,IAAK/B,KAAN,CAAWG,IAAI,KACb,kBAAC,IAAD,CAAMkB,GAAG,WACP,kBAACW,EAAA,EAAD,MADF,eAQV,kBAACvB,EAAD,CAAShB,MAAO,CAAEwC,UAAW,cAAgB9D,GAC7C,kBAACuC,EAAD,CACEjB,MAAO,CACLyC,UAAW,SACX9B,gBAAiB,QACjBmB,MAAO,QACPlB,OAAQ,OACRa,SAAU,QACViB,OAAQ,IACRC,cAAe,OACf/C,MAAO,UATX,0B,mCCjFET,EAAUC,IAAVD,MAqEOyD,EAnEA,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAAc,EACfC,IAAKC,UAAbC,EADuB,oBAEtBhF,EAASmD,qBAAW5C,GAApBP,KACFiF,EAA2B,SAACC,GAChCC,IAAaD,GAAM,CACjBE,QAAS,QACTC,YAAa,6BANa,4CAU9B,WAAwBC,GAAxB,SAAA3F,EAAA,sEACqBD,EAAO4F,GAD5B,cAEYnF,KAGR0E,EAAQU,KAAK,UAFbN,EAAyB,WAH7B,4CAV8B,sBAmB9B,OAAQjF,EA4CN,kBAAC,IAAD,CAAU4D,GAAG,aA3Cb,kBAAC,IAAD,CACE5B,MAAO,CAAEK,OAAQ,aACjBmD,OAAO,WACPR,KAAMA,EACNS,SAxB0B,6CAyB1B,kBAAC,EAAD,CAAOtD,MAAO,GACZ,kBAACoC,EAAA,EAAD,MADF,mBAIA,kBAAC,IAAKhC,KAAN,CACEmD,MAAM,YACNC,KAAK,WACLC,MAAO,CAAC,CAAEC,UAAU,EAAMT,QAAS,kCACnC,kBAAC,IAAD,OAEF,kBAAC,IAAK7C,KAAN,CACEmD,MAAM,SACNC,KAAK,QACLC,MAAO,CAAC,CAAEC,UAAU,EAAMT,QAAS,kCACnC,kBAAC,IAAD,OAEF,kBAAC,IAAK7C,KAAN,CACEmD,MAAM,WACNC,KAAK,WACLC,MAAO,CAAC,CAAEC,UAAU,EAAMT,QAAS,iCACnC,kBAAC,IAAMU,SAAP,OAGF,kBAAC,IAAKvD,KAAN,KACE,kBAAC,IAAD,CACEP,MAAO,CACL+D,UAAW,OACXpD,gBAAiB,UACjBmB,MAAO,QACPkC,aAAc,QAEhBC,OAAK,EACLC,SAAS,UARX,aClDA/E,EAAUC,IAAVD,MAgEOyD,EA9DA,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAAc,EACfC,IAAKC,UAAbC,EADuB,sBAEF7B,qBAAW5C,GAA/BP,EAFsB,EAEtBA,KAAMa,EAFgB,EAEhBA,UACRoE,EAA2B,SAACC,GAChCC,IAAaD,GAAM,CACjBE,QAAS,QACTC,YAAa,gCANa,4CAU9B,WAAwBC,GAAxB,eAAA3F,EAAA,sEACqBM,EAAMqF,GAD3B,QACQtF,EADR,SAKIa,EAAUb,GACV6E,EAAQU,KAAK,aAHbN,EAAyB,WAH7B,4CAV8B,sBAoB9B,OAAQjF,EAsCN,kBAAC,IAAD,CAAU4D,GAAG,aArCb,kBAAC,IAAD,CACE5B,MAAO,CAAEK,OAAQ,aACjBmD,OAAO,WACPR,KAAMA,EACNS,SAzB0B,6CA0B1B,kBAAC,EAAD,CAAOtD,MAAO,GACZ,kBAACmC,EAAA,EAAD,MADF,UAGA,kBAAC,IAAK/B,KAAN,CACEmD,MAAM,YACNC,KAAK,WACLC,MAAO,CAAC,CAAEC,UAAU,EAAMT,QAAS,kCACnC,kBAAC,IAAD,OAEF,kBAAC,IAAK7C,KAAN,CACE2C,KAAK,WACLQ,MAAM,WACNC,KAAK,WACLC,MAAO,CAAC,CAAEC,UAAU,EAAMT,QAAS,iCACnC,kBAAC,IAAMU,SAAP,OAGF,kBAAC,IAAKvD,KAAN,KACE,kBAAC,IAAD,CACEP,MAAO,CACL+D,UAAW,OACXpD,gBAAiB,UACjBmB,MAAO,QACPkC,aAAc,QAEhBC,OAAK,EACLC,SAAS,UARX,Y,sCC1CFC,GAAe,CACnBvD,OAAQ,QACRwD,SAAU,OACVtC,MAAO,OACPuC,WAAY,QACZ5B,UAAW,SACXxC,WAAY,kDAENd,GAAgBC,IAAhBD,MAAOmF,GAASlF,IAATkF,KA6LAC,GA5LF,WACX,OACE,gCACE,yBAAKvE,MAAO,CAAEwC,UAAW,WACvB,kBAAC,GAAD,CAAOxC,MAAO,CAAEoE,SAAU,OAAQ/D,OAAQ,iBAAmBF,MAAO,GAApE,SACS,IACP,0BACEH,MAAO,CACLoE,SAAU,SACVtC,MAAO,WACPL,SAAU,WACVC,MAAO,OACP8C,IAAK,SANT,cAQe,IACb,kBAAC3C,EAAA,EAAD,CACE7B,MAAO,CAAE8B,MAAO,UAAWC,WAAY,OACvCC,OAAO,SAIb,6BACA,6BACA,6BACA,kBAACsC,GAAD,CAAMtE,MAAO,CAAE8B,MAAO,OAAQsC,SAAU,WAAxC,4BAC2B,kBAACK,EAAA,EAAD,OAE3B,kBAAC,IAAD,CAAUzE,MAAO,CAAE+D,UAAW,QAAUW,UAAQ,EAACC,OAAO,QACtD,6BACE,wBAAI3E,MAAOmE,IACT,kBAAChC,EAAA,EAAD,CAAmBnC,MAAO,CAAE8B,MAAO,WADrC,yBAKF,6BACE,wBAAI9B,MAAOmE,IACT,kBAACS,GAAA,EAAD,CAAmB5E,MAAO,CAAE8B,MAAO,WADrC,8BAKF,6BACE,wBAAI9B,MAAOmE,IACT,kBAACU,GAAA,EAAD,CAAc7E,MAAO,CAAE8B,MAAO,WADhC,kCAKF,6BACE,wBAAI9B,MAAOmE,IACR,IADH,kBAEiB,kBAACM,EAAA,EAAD,CAAeR,OAAK,EAACjE,MAAO,CAAE8B,MAAO,cAK1D,yBAAK9B,MAAO,CAAE8E,QAAS,SACrB,kBAAC,GAAD,CACE9E,MAAO,CACLoE,SAAU,SACVL,UAAW,QAEb5D,MAAO,GACP,kBAACgC,EAAA,EAAD,MANF,eAMoC,IAClC,0BACEnC,MAAO,CACLoE,SAAU,SACVtC,MAAO,aAHX,gBAQF,6BACA,6BACA,6BACA,kBAAC,GAAD,CACE9B,MAAO,CACLoE,SAAU,OACVtC,MAAO,WAET3B,MAAO,GALT,uDAMuD,KAEvD,kBAAC,GAAD,CACEH,MAAO,CACLoE,SAAU,OACVtC,MAAO,WAET3B,MAAO,GALT,yDAMyD,KAEzD,kBAAC,IAAD,CACEH,MAAO,CAAEK,OAAQ,WAAYT,MAAO,QACpCU,IAAI,wBAEN,kBAAC,GAAD,CACEN,MAAO,CACLoE,SAAU,SACVL,UAAW,QAEb5D,MAAO,GACP,kBAACyE,GAAA,EAAD,MANF,8BAMmD,IACjD,0BACE5E,MAAO,CACLoE,SAAU,SACVtC,MAAO,aAHX,+BAQF,6BACA,6BACA,6BACA,kBAAC,GAAD,CACE9B,MAAO,CACLoE,SAAU,OACVtC,MAAO,WAET3B,MAAO,GALT,sDAMsD,KAEtD,kBAAC,GAAD,CACEH,MAAO,CACLoE,SAAU,OACVtC,MAAO,WAET3B,MAAO,GALT,4DAM4D,KAE5D,kBAAC,IAAD,CACEH,MAAO,CAAEK,OAAQ,WAAYT,MAAO,QACpCU,IAAI,6BAEN,kBAAC,GAAD,CACEN,MAAO,CACLoE,SAAU,SACVL,UAAW,QAEb5D,MAAO,GACP,kBAAC0E,GAAA,EAAD,MANF,sCAMsD,IACpD,0BACE7E,MAAO,CACLoE,SAAU,SACVtC,MAAO,aAHX,uCAQF,6BACA,6BACA,6BAEA,kBAAC,GAAD,CACE9B,MAAO,CACLoE,SAAU,OACVtC,MAAO,WAET3B,MAAO,GALT,mEAMmE,KAEnE,kBAAC,GAAD,CACEH,MAAO,CACLoE,SAAU,OACVtC,MAAO,WAET3B,MAAO,GALT,4BAM4B,KAE5B,6BACA,6BACA,6BACA,kBAAC,GAAD,CACEH,MAAO,CACLoE,SAAU,SACVtC,MAAO,WAET3B,MAAO,GACP,kBAAC,IAAD,CAAMyB,GAAG,UAAU5B,MAAO,CAAE8B,MAAO,YACjC,kBAACS,EAAA,EAAD,MADF,eAIF,6BACA,6BACA,iCCxMNtF,GAAU,6BAETA,GAAU,oCAGf,IAAM8H,GAAc5H,IAAMC,OAAO,CAC/BH,WACAI,iBAAiB,IAEnB0H,GAAYzH,aAAaC,SAASC,KAChC,SAACD,GACC,OAAOA,KAET,SAACE,GACC,OAAOA,KAIJ,IAAMuH,GAAY,uCAAG,4BAAArH,EAAA,sEACHoH,GAAY1G,IAAI,KADb,cACpB4G,EADoB,yBAEnBA,GAFmB,2CAAH,qDAIZC,GAAa,uCAAG,+BAAAvH,EAAA,6DAASwH,EAAT,EAASA,YAAT,SACFJ,GAAYhH,KAAK,IAAK,CAC7CoH,gBAFyB,cACrBC,EADqB,yBAIpBA,GAJoB,2CAAH,sDAMbC,GAAa,uCAAG,WAAOC,GAAP,eAAA3H,EAAA,6DAC3B4H,QAAQC,IAAR,SAAsBF,GADK,SAELP,GAAYU,OAAZ,mBAA+BH,IAF1B,cAErBlC,EAFqB,OAG3BmC,QAAQC,IAAR,YAAyBpC,GAHE,kBAIpBA,GAJoB,2CAAH,sDAMbsC,GAAW,uCAAG,WAAOC,EAAkBL,EAAWjC,GAApC,eAAA1F,EAAA,sEACFoH,GAAYhH,KAAZ,iBAA2BuH,GAAa,CAC7DK,mBACAtC,gBAHuB,cACnBuC,EADmB,yBAKlBA,GALkB,2CAAH,0DAQXC,GAAW,uCAAG,WAAOP,GAAP,eAAA3H,EAAA,sEACHoH,GAAY1G,IAAZ,mBAA4BiH,IADzB,cACnBQ,EADmB,yBAElBA,GAFkB,2CAAH,sDAKXC,GAAW,uCAAG,WAAOT,EAAWH,GAAlB,eAAAxH,EAAA,sEACHoH,GAAYiB,IAAZ,mBAA4BV,GAAa,CAC7DH,gBAFuB,cACnBW,EADmB,yBAIlBA,GAJkB,2CAAH,wDAOXG,GAAgB,uCAAG,WAAOX,EAAWH,GAAlB,eAAAxH,EAAA,sEACRoH,GAAYhH,KAAZ,4BAAsCuH,GAAa,CACvEH,gBAF4B,cACxBW,EADwB,yBAIvBA,GAJuB,2CAAH,wDAOhBI,GAAS,uCAAG,WAAOC,GAAP,eAAAxI,EAAA,sEACHoH,GAAY1G,IAAZ,iBAA0B8H,IADvB,cACjBC,EADiB,yBAEhBA,GAFgB,2CAAH,sDAKTC,GAAS,uCAAG,WAAOF,EAASR,EAAkBtC,GAAlC,eAAA1F,EAAA,sEACHoH,GAAYiB,IAAZ,iBAA0BG,GAAW,CACvDR,mBACAtC,gBAHqB,cACjB+C,EADiB,yBAKhBA,GALgB,2CAAH,0DAOTE,GAAkB,uCAAG,WAAOH,GAAP,eAAAxI,EAAA,sEACVoH,GAAYU,OAAZ,iBAA6BU,IADnB,cAC1B/C,EAD0B,yBAEzBA,GAFyB,2CAAH,sD,UC1DhBmD,GAdM,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,aAAcC,EAA8B,EAA9BA,wBACpC,OACE,kBAAC,IAAD,CACE/G,MAAM,yBACNG,QAAS2G,EACT1G,KAAM2G,EACN1G,SAAU0G,EACVC,cAAe,CAAEC,QAAQ,GACzBC,kBAAmB,CAAED,QAAQ,IAC7B,kBAAC,KAAD,CAAME,KAAK,YCgCFC,GAxCgB,SAAC,GAMzB,IALLC,EAKI,EALJA,WACAC,EAII,EAJJA,YACAhE,EAGI,EAHJA,KACAS,EAEI,EAFJA,SACA+C,EACI,EADJA,aAEA,OACE,kBAAC,IAAD,CACE9G,MAAM,4BACNG,QAASkH,EACTjH,KAAMkH,EACNjH,SAAUiH,GACV,kBAAC,IAAD,CAAMxD,OAAO,WAAWR,KAAMA,EAAMS,SAAUA,GAC5C,kBAAC,IAAKlD,KAAN,CACEmD,MAAM,sBACNC,KAAK,cACLC,MAAO,CAAC,CAAEC,UAAU,EAAMT,QAAS,0BACnC,kBAAC,IAAD,OAGF,kBAAC,IAAK7C,KAAN,KACE,kBAAC,IAAD,CACEP,MAAO,CACL+D,UAAW,OACXpD,gBAAiB,UACjBmB,MAAO,QACPkC,aAAc,QAEhBC,OAAK,EACLC,SAAS,UARX,UAWCsC,EAAe,uCAAyC,OCSpDS,GA1CgB,SAAC,GAOzB,IANLC,EAMI,EANJA,iBACAC,EAKI,EALJA,kBACAC,EAII,EAJJA,WACAC,EAGI,EAHJA,eACAC,EAEI,EAFJA,gBACAd,EACI,EADJA,aAEA,OACE,kBAAC,IAAD,CACE9G,MAAM,+BACNG,QAASqH,EACTpH,KAAMqH,EACNpH,SAAUoH,GACV,kBAAC,IAAD,CAAM3D,OAAO,WAAWR,KAAMoE,EAAY3D,SAAU4D,GAClD,kBAAC,IAAK9G,KAAN,CACEgH,aAAcD,EAAgBnC,YAC9BzB,MAAM,sBACNC,KAAK,cACLC,MAAO,CAAC,CAAEC,UAAU,EAAMT,QAAS,iCACnC,kBAAC,IAAD,OAGF,kBAAC,IAAK7C,KAAN,KACE,kBAAC,IAAD,CACEP,MAAO,CACL+D,UAAW,OACXpD,gBAAiB,UACjBmB,MAAO,QACPkC,aAAc,QAEhBC,OAAK,EACLC,SAAS,UARX,UAWCsC,EAAe,uCAAyC,OCUpDgB,GA7CmB,SAAC,GAO5B,IANLC,EAMI,EANJA,mBACAC,EAKI,EALJA,sBACAC,EAII,EAJJA,uBACAC,EAGI,EAHJA,cACAC,EAEI,EAFJA,oBACArB,EACI,EADJA,aAEA,OACE,kBAAC,IAAD,CACE9G,MAAK,iCAA4B+H,EAAmBtC,aACpDtF,QAAS6H,EACT5H,KAAM6H,EACN5H,SAAU4H,GACV,kBAAC,IAAD,CACEnE,OAAO,WACPR,KAAM4E,EACNnE,SAAUoE,GACV,kBAAC,IAAKtH,KAAN,CACEgH,aAAcE,EAAmBtC,YACjCzB,MAAM,mBACNC,KAAK,cACLC,MAAO,CAAC,CAAEC,UAAU,EAAMT,QAAS,iCACnC,kBAAC,IAAD,OAGF,kBAAC,IAAK7C,KAAN,KACE,kBAAC,IAAD,CACEP,MAAO,CACL+D,UAAW,OACXpD,gBAAiB,UACjBmB,MAAO,QACPkC,aAAc,QAEhBC,OAAK,EACLC,SAAS,UARX,aAWCsC,EAAe,uCAAyC,OCTpDsB,GA7BgB,SAAC,GAKzB,IAJLC,EAII,EAJJA,mBACAC,EAGI,EAHJA,oBACAC,EAEI,EAFJA,uBACAzB,EACI,EADJA,aAEA,OACE,kBAAC,IAAD,CACE9G,MAAM,gDACNG,QAASkI,EACTjI,KAAMkI,EACNjI,SAAUiI,GACV,kBAAC,IAAD,CACEhI,MAAO,CACLK,OAAQ,SACRM,gBAAiB,MACjBmB,MAAO,SAETmC,OAAK,EACLhC,QAAS,WACPgG,MARJ,UAYCzB,EAAe,uCAAyC,K,UCvBvDrH,GAAUC,IAAVD,MACA+I,GAAUC,KAAVD,MA+DOE,GA9DQ,SAAC,GAA2B,IAAzBpK,EAAwB,EAAxBA,KAAMgJ,EAAkB,EAAlBA,YAC9B,OACE,yBACEhH,MAAO,CACLJ,MAAO,QACPK,WAAY,iDACZ6E,QAAS,YACThD,MAAO,QACPkC,aAAc,QAEhB,kBAAC,GAAD,CAAOhE,MAAO,CAAE8B,MAAO,SAAW3B,MAAO,GACvC,kBAACgC,EAAA,EAAD,MADF,qBAGA,kBAAC,GAAD,CAAOnC,MAAO,CAAE8B,MAAO,SAAW3B,MAAO,GAAzC,4BAGA,kBAAC,KAAD,CACEH,MAAO,CACLsB,aAAc,SAEhB,kBAAC4G,GAAD,CAAOG,OAAO,oBAAoB3H,IAAI,KACpC,2BACE,6CADF,IAC8B1C,EAAKsK,OAIvC,kBAAC,KAAD,CACEtI,MAAO,CACLC,WAAY,iDACZqB,aAAc,SAEhB,kBAAC4G,GAAD,CAAOG,OAAO,0CAA0C3H,IAAI,KAC1D,2BACE,2CAAyB,IAD3B,iDAIA,2BACE,kDADF,SAGA,2BACE,kDADF,8BAMJ,wBAAIV,MAAO,CAAE8B,MAAO,UAApB,4GAKA,kBAAC,IAAD,CACE9B,MAAO,CACLK,OAAQ,SACRyB,MAAO,WAETG,QAAS+E,GALX,gC,sCCnDEkB,GAAUC,KAAVD,MA2HOK,GAzHM,SAAC,GAUf,IATLtD,EASI,EATJA,SACAmC,EAQI,EARJA,WACAoB,EAOI,EAPJA,oBACArB,EAMI,EANJA,kBACAS,EAKI,EALJA,cACAa,EAII,EAJJA,uBACAd,EAGI,EAHJA,uBACAe,EAEI,EAFJA,YACAV,EACI,EADJA,oBAEA,OACE,yBAAKhI,MAAO,CAAEK,OAAQ,SACpB,kBAAC,KAAD,CAAKsI,OAAQ,CAAC,GAAI,KAAlB,OACG1D,QADH,IACGA,OADH,EACGA,EAAU2D,KAAI,SAAC9C,GACd,OACE,kBAAC,KAAD,CAAKpF,IAAKoF,EAAQwC,IAAKO,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACjD,kBAAC,KAAD,CACEtJ,MACE,oCACE,kBAACuJ,GAAA,EAAD,MADF,QAEGnD,EAAQX,aAGb+D,UAAU,GACV,kBAAC,IAAD,CACElJ,MAAO,CACLK,OAAQ,SACRM,gBAAiB,QACjBmB,MAAO,WAETG,QAAO,sBAAE,sBAAAtE,EAAA,sEACDyJ,EAAW+B,cADV,uBAEDX,EAAoB1C,EAAQX,YAAaW,EAAQwC,KAFhD,OAGPnB,IAHO,2CAKTlD,OAAK,GAXP,yBAcA,kBAAC,IAAD,CACEjE,MAAO,CACLK,OAAQ,SACRM,gBAAiB,QACjBmB,MAAO,WAETG,QAAO,sBAAE,sBAAAtE,EAAA,sEACDiK,EAAcuB,cADb,uBAEDV,EACJ3C,EAAQX,YACRW,EAAQwC,KAJH,OAMPX,IANO,2CAQT1D,OAAK,GAdP,qBAkBA,2BACE,+CADF,IACgC6B,EAAQwC,KAExC,2BACE,kDAAgC,IAC/BxC,EAAQsD,WAAWC,MAAM,EAAG,KAE/B,2BACE,iDAA+B,IAC9BvD,EAAQwD,WAAWD,MAAM,EAAG,KAE/B,kBAAC,KAAD,CACErJ,MAAO,CACLC,WACE,iDACFqB,aAAc,SAEhB,kBAAC,GAAD,CAAO+G,OAAO,gCAAgC3H,IAAI,KAChD,2BACE,2CAAyB,IAD3B,iDAGGoF,EAAQwC,KAEX,2BACE,kDADF,SAGA,2BACE,kDADF,8BAKJ,kBAAC,IAAD,CACEtI,MAAO,CACLK,OAAQ,SACRM,gBAAiB,UACjBmB,MAAO,SAETmC,OAAK,GACL,kBAAC,IAAD,CAAMrC,GAAE,mBAAckE,EAAQX,YAAtB,YAAqCW,EAAQwC,MAArD,kBAIF,kBAAC,IAAD,CACEtI,MAAO,CACLK,OAAQ,SACRM,gBAAiB,MACjBmB,MAAO,SAETmC,OAAK,EACLhC,QAAS,WACPyG,EAAY5C,EAAQwC,KACpBN,MATJ,kBCgFDuB,GAvKC,WAAO,IACbvL,EAASmD,qBAAW5C,GAApBP,KADY,EAEYW,mBAAS,MAFrB,mBAEbsG,EAFa,KAEHuE,EAFG,OAG0B7K,oBAAS,GAHnC,mBAGb8K,EAHa,KAGIC,EAHJ,OAIL5G,IAAKC,UAAbC,EAJa,sBAKCF,IAAKC,UAAnBqE,EALa,sBAMItE,IAAKC,UAAtB6E,EANa,sBAOgBjJ,oBAAS,GAPzB,mBAOboI,EAPa,KAOD4C,EAPC,OAQgChL,oBAAS,GARzC,mBAQboJ,EARa,KAQO6B,EARP,OAS4BjL,oBAAS,GATrC,mBASbuI,EATa,KASK2C,EATL,OAU0BlL,mBAAS,MAVnC,mBAUbmL,EAVa,KAUIC,EAVJ,OAW0BpL,mBAAS,QAXnC,mBAWb2I,EAXa,KAWI0C,EAXJ,OAYsCrL,oBAAS,GAZ/C,mBAYb+I,EAZa,KAYUuC,EAZV,OAagCtL,mBAAS,QAbzC,mBAab8I,EAba,KAaOyC,EAbP,OAcoBvL,oBAAS,GAd7B,mBAcb6H,EAda,KAcC2D,GAdD,mDAgCpB,WAAwB7G,GAAxB,SAAA3F,EAAA,sEACQyM,KADR,uBAGQlF,GAAc5B,GAHtB,uBAIQmD,KAJR,OAMEiD,GAAmB,GACnB1G,EAAKmG,cACLnC,KARF,4CAhCoB,sBA2CpB,SAASA,KACP2C,GAAe5C,GAIjB,SAASiB,KACP4B,GAAuB7B,GAjDL,8CAsDpB,sBAAApK,EAAA,sEACQyM,KADR,uBAGQ/E,GAAcyE,GAHtB,uBAIQrD,KAJR,OAMEiD,GAAmB,GACnB1B,KAPF,4CAtDoB,sBAqEpB,SAASb,KACP0C,GAAqB3C,GACrBE,EAAW+B,cAvEO,8CAyEpB,WAA8B7F,GAA9B,SAAA3F,EAAA,sEACQyM,KADR,uBAGQrE,GAAYuB,EAAgBhC,UAAWhC,EAAO6B,aAHtD,uBAIQsB,KAJR,OAMEW,EAAW+B,cACXhC,KACAuC,GAAmB,GARrB,4CAzEoB,sBAyFpB,SAAS/B,KACPsC,GAA0BvC,GAC1BE,EAAcuB,cA3FI,8CA8FpB,WAAmC7F,GAAnC,SAAA3F,EAAA,sEACQyM,KADR,uBAGQnE,GAAiBwB,EAAmBnC,UAAWhC,EAAO6B,aAH9D,uBAIQsB,KAJR,OAMEmB,EAAcuB,cACdxB,KACA+B,GAAmB,GARrB,4CA9FoB,+BAyGLU,KAzGK,8EAyGpB,sBAAAzM,EAAA,sEACQwM,IAAgB,GADxB,4CAzGoB,+BA4GL1D,KA5GK,8EA4GpB,sBAAA9I,EAAA,sEACQwM,IAAgB,GADxB,4CA5GoB,sBAgHpB,OA/FArL,qBAAU,YACS,uCAAG,8BAAAnB,EAAA,sEACZyM,KADY,uBAGKpF,KAHL,uBAGV7G,EAHU,EAGVA,KACRqL,EAAYrL,GAJM,SAKZsI,KALY,QAOM,IAApBgD,GACFC,GAAmB,GARH,4CAAH,qDAWjBW,KACC,CAACZ,IAkFGzL,EACL,6BACE,gCACE,kBAAC,GAAD,CACEwI,aAAcA,EACdC,wBAAyBA,KAE3B,kBAAC,GAAD,CACEM,WAAYA,EACZC,YAAaA,GACbhE,KAAMA,EACNS,SA3HY,6CA4HZ+C,aAAcA,IAEhB,kBAAC,GAAD,CACEU,iBAAkBA,EAClBC,kBAAmBA,GACnBC,WAAYA,EACZC,eAlIY,6CAmIZC,gBAAiBA,EACjBd,aAAcA,IAEhB,kBAAC,GAAD,CACEiB,mBAAoBA,EACpBC,sBAAuBA,EACvBC,uBAAwBA,GACxBC,cAAeA,EACfC,oBA3IY,6CA4IZrB,aAAcA,IAEhB,kBAAC,GAAD,CACEuB,mBAAoBA,EACpBC,oBAAqBA,GACrBC,uBAjJY,4CAkJZzB,aAAcA,IAEhB,kBAAC,GAAD,CAAgBxI,KAAMA,EAAMgJ,YAAaA,KACzC,kBAAC,GAAD,CACE/B,SAAUA,EACVmC,WAAYA,EACZoB,oBAtFR,SAA6BrD,EAAaG,GACxC0E,EAAmB,CAAE7E,YAAaA,EAAaG,UAAWA,KAsFpD6B,kBAAmBA,GACnBS,cAAeA,EACfa,uBAtER,SAAgCtD,EAAaG,GAC3C4E,EAAsB,CAAE/E,YAAaA,EAAaG,UAAWA,KAsEvDqC,uBAAwBA,GACxBe,YA1GR,SAAqBpD,GACnByE,EAAmBzE,IA0Gb0C,oBAAqBA,OAK3B,kBAAC,IAAD,CAAUpG,GAAG,OC/HF0I,GAnDc,SAAC,GAMvB,IALLvD,EAKI,EALJA,WACAC,EAII,EAJJA,YACAhE,EAGI,EAHJA,KACAS,EAEI,EAFJA,SACA+C,EACI,EADJA,aAEA,OACE,kBAAC,IAAD,CACE9G,MAAM,mBACNG,QAASkH,EACTjH,KAAMkH,EACNjH,SAAUiH,GACV,kBAAC,IAAD,CAAMxD,OAAO,WAAWR,KAAMA,EAAMS,SAAUA,GAC5C,kBAAC,IAAKlD,KAAN,CACEmD,MAAM,aACNC,KAAK,mBACLC,MAAO,CAAC,CAAEC,UAAU,EAAMT,QAAS,6BACnC,kBAAC,IAAD,OAEF,kBAAC,IAAK7C,KAAN,CACEmD,MAAM,6BACNC,KAAK,cACLC,MAAO,CACL,CACEC,UAAU,EACVT,QAAS,6CAGb,kBAAC,IAAD,OAGF,kBAAC,IAAK7C,KAAN,KACE,kBAAC,IAAD,CACEP,MAAO,CACL+D,UAAW,OACXpD,gBAAiB,UACjBmB,MAAO,QACPkC,aAAc,QAEhBC,OAAK,EACLC,SAAS,UARX,UAWCsC,EAAe,uCAAyC,OCUpD+D,GAtDc,SAAC,GAOvB,IANLC,EAMI,EANJA,iBACAC,EAKI,EALJA,uBACAC,EAII,EAJJA,gBACArD,EAGI,EAHJA,eACAsD,EAEI,EAFJA,cACAnE,EACI,EADJA,aAEA,OACE,kBAAC,IAAD,CACE9G,MAAM,eACNG,QAAS2K,EACT1K,KAAM2K,EACN1K,SAAU0K,GACV,kBAAC,IAAD,CAAMjH,OAAO,WAAWR,KAAM0H,EAAiBjH,SAAU4D,GACvD,kBAAC,IAAK9G,KAAN,CACEgH,aAAcoD,EAAcC,UAC5BlH,MAAM,aACNC,KAAK,YACLC,MAAO,CAAC,CAAEC,UAAU,EAAMT,QAAS,+BACnC,kBAAC,IAAD,OAEF,kBAAC,IAAK7C,KAAN,CACEgH,aAAcoD,EAActH,YAC5BK,MAAM,oBACNC,KAAK,cACLC,MAAO,CACL,CACEC,UAAU,EACVT,QAAS,sCAGb,kBAAC,IAAD,OAGF,kBAAC,IAAK7C,KAAN,KACE,kBAAC,IAAD,CACEP,MAAO,CACL+D,UAAW,OACXpD,gBAAiB,UACjBmB,MAAO,QACPkC,aAAc,QAEhBC,OAAK,EACLC,SAAS,UARX,UAWCsC,EAAe,uCAAyC,OClBpDqE,GA7Bc,SAAC,GAKvB,IAJLC,EAII,EAJJA,iBACAC,EAGI,EAHJA,kBACAC,EAEI,EAFJA,qBACAxE,EACI,EADJA,aAEA,OACE,kBAAC,IAAD,CACE9G,MAAM,8CACNG,QAASiL,EACThL,KAAMiL,EACNhL,SAAUgL,GACV,kBAAC,IAAD,CACE/K,MAAO,CACLK,OAAQ,SACRM,gBAAiB,MACjBmB,MAAO,SAETmC,OAAK,EACLhC,QAAS,WACP+I,MARJ,UAYCxE,EAAe,uCAAyC,K,UCvBvDrH,GAAUC,IAAVD,MACA+I,GAAUC,KAAVD,MA2EO+C,GA1EM,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,MAAOlE,EAAkB,EAAlBA,YAC7B,OACE,yBACEhH,MAAO,CACLJ,MAAO,QACPkF,QAAS,YACT7E,WAAY,iDACZ6B,MAAO,UAET,kBAAC,KAAD,CAAY9B,MAAO,CAAEyB,SAAU,WAAYiB,OAAQ,QAAUyI,UAAU,IACrE,kBAAC,KAAW5K,KAAZ,KACE,kBAAC,IAAD,CAAMP,MAAO,CAAE8B,MAAO,SAAWF,GAAG,YAClC,kBAACO,EAAA,EAAD,CAAmBnC,MAAO,CAAE8B,MAAO,WADrC,cAIF,0BAAM9B,MAAO,CAAE8B,MAAO,UAAtB,WACA,kBAAC,KAAWvB,KAAZ,KACE,kBAAC,IAAD,CACEP,MAAO,CAAE8B,MAAO,SAChBF,GAAE,mBAAcsJ,EAAME,MAAMC,OAAOlG,YAAjC,YAAgD+F,EAAME,MAAMC,OAAO/F,YACrE,kBAAC2D,GAAA,EAAD,CAAkBjJ,MAAO,CAAE8B,MAAO,WAHpC,IAKGoJ,EAAME,MAAMC,OAAOlG,eAI1B,kBAAC,GAAD,CAAOnF,MAAO,CAAE8B,MAAO,SAAW3B,MAAO,GACvC,kBAAC8I,GAAA,EAAD,MADF,IACwBiC,EAAME,MAAMC,OAAOlG,aAE3C,kBAAC,GAAD,CAAOnF,MAAO,CAAE8B,MAAO,SAAW3B,MAAO,GAAzC,eACe+K,EAAME,MAAMC,OAAO/F,WAGlC,wBAAItF,MAAO,CAAE8B,MAAO,UAApB,kCAEE,0BAAM9B,MAAO,CAAEoE,SAAU,SAAUkH,WAAY,SAA/C,UACC,KAHH,uBAKGJ,EAAME,MAAMC,OAAOlG,YALtB,8CAQA,kBAAC,IAAD,CACEnF,MAAO,CACLK,OAAQ,SACRM,gBAAiB,QACjBmB,MAAO,WAETG,QAAS+E,EACT/C,OAAK,GAPP,qBAUA,kBAAC,KAAD,CACEjE,MAAO,CACLC,WAAY,iDACZqB,aAAc,SAEhB,kBAAC,GAAD,CAAO+G,OAAO,qCAAqC3H,IAAI,KACrD,2BACE,2CAAyB,IAD3B,iDAGGwK,EAAME,MAAMC,OAAO/F,WAEtB,2BACE,kDADF,SAGA,2BACE,kDADF,gC,UCnEF4C,GAAUC,KAAVD,MAsHOqD,GArHI,SAAC,GASb,IARLzF,EAQI,EARJA,QACA4E,EAOI,EAPJA,gBACAc,EAMI,EANJA,kBACAf,EAKI,EALJA,uBACAS,EAII,EAJJA,MACA1E,EAGI,EAHJA,aACAiF,EAEI,EAFJA,UACAV,EACI,EADJA,kBAEA,OACE,yBAAK/K,MAAO,CAAEK,OAAQ,SACpB,kBAAC,KAAD,CAAKsI,OAAQ,CAAC,GAAI,KACf7C,EAAQ,GAAG4F,cAAc9C,KAAI,SAACxC,GAC7B,OACE,kBAAC,KAAD,CAAK1F,IAAK0F,EAAMkC,IAAKO,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAC/C,kBAAC,KAAD,CACEtI,IAAK0F,EAAMkC,IACX5I,MACE,oCACE,kBAACiM,GAAA,EAAD,MADF,IAGGvF,EAAMT,kBAGXuD,UAAU,EACVlJ,MAAO,CACLsB,aAAc,OACdsK,UAAW,sBAEb,2BACE,sDADF,IACuCxF,EAAM/C,aAE7C,kBAAC,IAAD,CACErD,MAAO,CACLK,OAAQ,SACRM,gBAAiB,QACjBmB,MAAO,UACPlC,MAAO,QAETqC,QAAO,sBAAE,sBAAAtE,EAAA,sEACD+M,EAAgBvB,cADf,uBAEDqC,EACJpF,EAAMT,iBACNS,EAAMkC,IACNlC,EAAM/C,aALD,OAOPoH,IAPO,2CASTxG,OAAK,GAhBP,uCAmBA,2BACE,6CADF,IAC8BmC,EAAMkC,KAEpC,2BACE,kDAAgC,IAC/BlC,EAAMgD,WAAWC,MAAM,EAAG,KAE7B,2BACE,iDADF,IACkCjD,EAAMkD,WAAWD,MAAM,EAAG,KAE5D,kBAAC,KAAD,CACErJ,MAAO,CACLC,WACE,iDACFqB,aAAc,SAEhB,kBAAC,GAAD,CAAO+G,OAAO,+BAA+B3H,IAAI,KAC/C,2BACE,2CAAyB,IAD3B,sDAGG0F,EAAMkC,KAET,2BACE,kDADF,SAGA,2BACE,kDADF,8BAKJ,kBAAC,IAAD,CACEtI,MAAO,CACLJ,MAAO,OACPS,OAAQ,SACRM,gBAAiB,UACjBmB,MAAO,UAET,kBAAC,IAAD,CACEF,GAAE,iBAAYwE,EAAMT,iBAAlB,YAAsCS,EAAMkC,IAA5C,YAAmD4C,EAAME,MAAMC,OAAOlG,YAAtE,YAAqF+F,EAAME,MAAMC,OAAO/F,YAD5G,gBAKF,kBAAC,IAAD,CACEtF,MAAO,CACLJ,MAAO,OACPS,OAAQ,SACRM,gBAAiB,MACjBmB,MAAO,SAETG,QAAS,WACPwJ,EAAUrF,EAAMkC,KAChByC,MATJ,UAaCvE,EAAe,uCAAyC,WCkD1DqF,GAjJC,SAACX,GAAW,IAClBlN,EAASmD,qBAAW5C,GAApBP,KADiB,EAEKW,mBAAS,MAFd,mBAElBmH,EAFkB,KAETgG,EAFS,OAGVhJ,IAAKC,UAAbC,EAHkB,sBAICF,IAAKC,UAAxB2H,EAJkB,sBAKmB/L,oBAAS,GAL5B,mBAKlBoN,EALkB,KAKFC,EALE,OAMWrN,oBAAS,GANpB,mBAMlBoI,EANkB,KAMN4C,EANM,OAOuBhL,oBAAS,GAPhC,mBAOlBmM,EAPkB,KAOAmB,EAPA,OAQiBtN,mBAAS,MAR1B,mBAQlBuN,EARkB,KAQHC,EARG,OASuBxN,oBAAS,GAThC,mBASlB6L,EATkB,KASA4B,EATA,OAUiBzN,oBAAS,GAV1B,mBAUlBgM,EAVkB,KAUH0B,EAVG,OAWe1N,oBAAS,GAXxB,mBAWlB6H,EAXkB,KAWJ2D,EAXI,iDA4BzB,+BAAAxM,EAAA,6DAA0BgI,EAA1B,EAA0BA,iBAAkBtC,EAA5C,EAA4CA,YAA5C,SACQ+G,IADR,uBAEQ1E,GACJC,EACAuF,EAAME,MAAMC,OAAO/F,UACnBjC,GALJ,uBAOQoD,KAPR,OAQEuF,GAAkB,GAClBhF,IATF,4CA5ByB,sBAwCzB,SAASA,IACP2C,GAAe5C,GAIjB,SAASgE,IACPkB,GAAqBnB,GA9CE,4CAmDzB,sBAAAnN,EAAA,sEACQyM,IADR,uBAEQ9D,GAAmB4F,GAF3B,uBAGQzF,KAHR,OAIEuF,GAAkB,GAClBjB,IALF,4CAnDyB,sBAmEzB,SAASN,IACP2B,GAAqB5B,GACrBE,EAAgBvB,cArEO,4CAuEzB,WAA8B7F,GAA9B,SAAA3F,EAAA,sEACQyM,IADR,uBAEQ/D,GACJsE,EAAcxE,QACd7C,EAAOsH,UACPtH,EAAOD,aALX,uBAOQoD,KAPR,OASEiE,EAAgBvB,cAChBsB,IACAuB,GAAkB,GAXpB,4CAvEyB,+BAsFV5B,IAtFU,2EAsFzB,sBAAAzM,EAAA,sEACQwM,GAAgB,GADxB,4CAtFyB,+BAyFV1D,KAzFU,8EAyFzB,sBAAA9I,EAAA,sEACQwM,GAAgB,GADxB,4CAzFyB,sBA6FzB,OA/EArL,qBAAU,YACQ,uCAAG,8BAAAnB,EAAA,sEACXyM,IADW,uBAEMvE,GAAYqF,EAAME,MAAMC,OAAO/F,WAFrC,uBAETnH,EAFS,EAETA,KACR2N,EAAW3N,GAHM,SAIXsI,KAJW,QAKM,IAAnBsF,GACFC,GAAkB,GANH,4CAAH,qDAShBM,KACC,CAACP,IAoEG/N,EACL8H,EACE,6BACE,gCACE,kBAAC,GAAD,CACEU,aAAcA,EACdC,wBAAyBA,KAE3B,kBAAC,GAAD,CACEM,WAAYA,EACZC,YAAaA,EACbhE,KAAMA,EACNS,SAzGe,4CA0Gf+C,aAAcA,IAEhB,kBAAC,GAAD,CACEgE,iBAAkBA,EAClBC,uBAAwBA,EACxBC,gBAAiBA,EACjBrD,eAhHe,4CAiHfsD,cAAeA,EACfnE,aAAcA,IAEhB,kBAAC,GAAD,CACEsE,iBAAkBA,EAClBC,kBAAmBA,EACnBC,qBAvHe,2CAwHfxE,aAAcA,IAEhB,kBAAC,GAAD,CAAc0E,MAAOA,EAAOlE,YAAaA,IACzC,kBAAC,GAAD,CACElB,QAASA,EACT4E,gBAAiBA,EACjBc,kBAlEV,SAA2BZ,EAAWzE,EAAS9C,GAC7CgJ,EAAiB,CACfzB,UAAWA,EACXzE,QAASA,EACT9C,YAAaA,KA+DPoH,uBAAwBA,EACxBS,MAAOA,EACP1E,aAAcA,EACdiF,UAlFV,SAAmBtF,GACjBgG,EAAiBhG,IAkFT4E,kBAAmBA,MAKzB,uBAAG/K,MAAO,CAAEyC,UAAW,SAAU2B,SAAU,SAA3C,cACa,kBAAC,KAAD,CAAMyC,KAAK,UAAW,KAIrC,kBAAC,IAAD,CAAUjF,GAAG,OC9Jb3E,GAAU,6BAETA,GAAU,wCAGf,IAAM8H,GAAc5H,IAAMC,OAAO,CAC/BH,WACAI,iBAAiB,IAEnB0H,GAAYzH,aAAaC,SAASC,KAChC,SAACD,GACC,OAAOA,KAET,SAACE,GACC,OAAOA,KAIJ,IAAM8O,GAAa,uCAAG,WAAOC,EAAarG,EAASsG,GAA7B,eAAA9O,EAAA,sEACAoH,GAAYhH,KAAZ,0BAAoCoI,GAAW,CACxEsG,SACAD,gBAHyB,cACrBE,EADqB,yBAKpBA,GALoB,2CAAH,0DAObC,GAAa,uCAAG,WAAOH,EAAarG,EAASsG,GAA7B,eAAA9O,EAAA,sEACAoH,GAAYhH,KAAZ,0BACNoI,EADM,YACKqG,GAC9B,CACEC,WAJuB,cACrBC,EADqB,yBAOpBA,GAPoB,2CAAH,0DAUbE,GAAS,uCAAG,aAAiBzG,EAASqG,EAAaC,GAAvC,iBAAA9O,EAAA,6DAASQ,EAAT,EAASA,KAAT,SACM4G,GAAYhH,KAAZ,6BACLoI,EADK,YACMqG,GACjC,CACEC,SACAxN,MAAOd,IALY,cACjB0O,EADiB,yBAQhBA,GARgB,2CAAH,4DAWTC,GAAgB,uCAAG,WAC9B3G,EACAqG,EACAO,EACAN,GAJ8B,eAAA9O,EAAA,sEAMDoH,GAAYhH,KAAZ,gCACFoI,EADE,YACSqG,EADT,YACwBO,GACnD,CACEN,WAT0B,cAMxBI,EANwB,yBAYvBA,GAZuB,2CAAH,4DAyBhBG,GAAY,uCAAG,WAC1B7G,EACAqG,EACAO,EAH0B,EAK1BN,GAL0B,iBAAA9O,EAAA,6DAIlBsB,EAJkB,EAIxBd,KAJwB,SAOG4G,GAAYiB,IAAZ,gCACFG,EADE,YACSqG,EADT,YACwBO,GACnD,CACEN,SACAxN,UAXsB,cAOpB4N,EAPoB,yBAcnBA,GAdmB,2CAAH,8DC5BVI,GAxCgB,SAAC,GAMzB,IALLlG,EAKI,EALJA,WACAC,EAII,EAJJA,YACAhE,EAGI,EAHJA,KACAS,EAEI,EAFJA,SACA+C,EACI,EADJA,aAEA,OACE,kBAAC,IAAD,CACE9G,MAAM,qBACNG,QAASkH,EACTjH,KAAMkH,EACNjH,SAAUiH,GACV,kBAAC,IAAD,CAAMxD,OAAO,WAAWR,KAAMA,EAAMS,SAAUA,GAC5C,kBAAC,IAAKlD,KAAN,CACEmD,MAAM,eACNC,KAAK,cACLC,MAAO,CAAC,CAAEC,UAAU,EAAMT,QAAS,+BACnC,kBAAC,IAAD,OAGF,kBAAC,IAAK7C,KAAN,KACE,kBAAC,IAAD,CACEP,MAAO,CACL+D,UAAW,OACXpD,gBAAiB,UACjBmB,MAAO,QACPkC,aAAc,QAEhBC,OAAK,EACLC,SAAS,UARX,UAWCsC,EAAe,uCAAyC,OC7B3DrH,GAAUC,IAAVD,MACA+I,GAAUC,KAAVD,MAkGOgF,GAhGQ,SAAC,GAA4B,IAA1BhC,EAAyB,EAAzBA,MAAOlE,EAAkB,EAAlBA,YAC/B,OACE,yBACEhH,MAAO,CACLJ,MAAO,QACPkF,QAAS,YAET7E,WAAY,iDACZ6B,MAAO,UAET,kBAAC,KAAD,CAAY9B,MAAO,CAAEyB,SAAU,WAAYiB,OAAQ,QAAUyI,UAAU,IACrE,kBAAC,KAAW5K,KAAZ,KACE,kBAAC,IAAD,CAAMP,MAAO,CAAE8B,MAAO,SAAWF,GAAG,YAClC,kBAACO,EAAA,EAAD,CAAmBnC,MAAO,CAAE8B,MAAO,WADrC,cAIF,0BAAM9B,MAAO,CAAE8B,MAAO,UAAtB,WACA,kBAAC,KAAWvB,KAAZ,KACE,kBAAC,IAAD,CACEP,MAAO,CAAE8B,MAAO,SAChBF,GAAE,mBAAcsJ,EAAME,MAAMC,OAAOlG,YAAjC,YAAgD+F,EAAME,MAAMC,OAAO/F,YACrE,kBAAC2D,GAAA,EAAD,CAAkBjJ,MAAO,CAAE8B,MAAO,WAHpC,IAKGoJ,EAAME,MAAMC,OAAOlG,cAGxB,0BAAMnF,MAAO,CAAE8B,MAAO,UAAtB,WACA,kBAAC,KAAWvB,KAAZ,KACE,kBAACoL,GAAA,EAAD,CAAe3L,MAAO,CAAE8B,MAAO,WAC/B,0BAAM9B,MAAO,CAAE8B,MAAO,UAAtB,IAEGoJ,EAAME,MAAMC,OAAOT,aAI1B,kBAAC,GAAD,CAAO5K,MAAO,CAAE8B,MAAO,SAAW3B,MAAO,GACvC,kBAACwL,GAAA,EAAD,MADF,IACqBT,EAAME,MAAMC,OAAOT,WAExC,kBAAC,GAAD,CAAO5K,MAAO,CAAE8B,MAAO,SAAW3B,MAAO,GAAzC,aACa+K,EAAME,MAAMC,OAAOlF,SAGhC,wBAAInG,MAAO,CAAE8B,MAAO,UAApB,kCAEE,0BAAM9B,MAAO,CAAEoE,SAAU,SAAUkH,WAAY,SAA/C,YAFF,8BAG+BJ,EAAME,MAAMC,OAAOT,UAHlD,4CAMA,kBAAC,IAAD,CACE5K,MAAO,CACLK,OAAQ,SACRM,gBAAiB,QACjBmB,MAAO,WAETG,QAAS+E,EACT/C,OAAK,GAPP,uBAUA,kBAAC,KAAD,CACEjE,MAAO,CACLC,WAAY,iDACZqB,aAAc,SAEhB,kBAAC,GAAD,CAAO+G,OAAO,gBAAgB3H,IAAI,KAChC,kBAAC,GAAD,CAAOP,MAAO,GAAd,cACA,2BACE,2CAAyB,IAD3B,sDAGG+K,EAAME,MAAMC,OAAOlF,SAEtB,2BACE,kDADF,SAGA,2BACE,kDADF,4BAGA,6BACA,kBAAC,GAAD,CAAOhG,MAAO,GAAd,mBACA,2BACE,2CAAyB,IAD3B,wDAGG+K,EAAME,MAAMC,OAAOlF,SAEtB,2BACE,kDADF,SAGA,2BACE,kDADF,wECjDKgH,GA7Ca,SAAC,GAMtB,IALLC,EAKI,EALJA,kBACAC,EAII,EAJJA,wBACAC,EAGI,EAHJA,SACAC,EAEI,EAFJA,aACA/G,EACI,EADJA,aAEA,OACE,kBAAC,IAAD,CACE9G,MAAM,WACNG,QAASuN,EACTtN,KAAMuN,EACNtN,SAAUsN,GACV,kBAAC,IAAD,CAAM7J,OAAO,WAAWR,KAAMsK,EAAU7J,SAAU8J,GAChD,kBAAC,IAAKhN,KAAN,CACEmD,MAAM,aACNC,KAAK,OACLC,MAAO,CACL,CACEC,UAAU,EACVT,QAAS,uBAGb,kBAAC,IAAD,OAGF,kBAAC,IAAK7C,KAAN,KACE,kBAAC,IAAD,CACEP,MAAO,CACL+D,UAAW,OACXpD,gBAAiB,UACjBmB,MAAO,QACPkC,aAAc,QAEhBE,SAAS,SACTD,OAAK,GARP,YAWCuC,EAAe,uCAAyC,OCtC3DrH,GAAUC,IAAVD,MA+BOqO,GA7Ba,SAAC,GAKtB,IAJLC,EAII,EAJJA,iBACAC,EAGI,EAHJA,yBACAC,EAEI,EAFJA,uBACAnH,EACI,EADJA,aAEA,OACE,kBAAC,IAAD,CACE9G,MAAM,cACNG,QAAS4N,EACT3N,KAAM4N,EACN3N,SAAU2N,GACV,kBAAC,GAAD,CAAOvN,MAAO,GAAd,+CACA,kBAAC,IAAD,CACEH,MAAO,CACL+D,UAAW,OACXpD,gBAAiB,MACjBmB,MAAO,QACPkC,aAAc,QAEhB/B,QAAS0L,EACT1J,OAAK,GARP,UAWCuC,EAAe,uCAAyC,KC1BvDrH,GAAUC,IAAVD,MAkCOyO,GAhCgB,SAAC,GAMzB,IALLC,EAKI,EALJA,mBACAC,EAII,EAJJA,2BACAC,EAGI,EAHJA,gBACAC,EAEI,EAFJA,qBACAxH,EACI,EADJA,aAEA,OACE,kBAAC,IAAD,CACE9G,MAAM,iBACNG,QAASgO,EACT/N,KAAMgO,EACN/N,SAAU+N,GACV,kBAAC,GAAD,CAAO3N,MAAO,GAAd,iDACiD4N,EADjD,OAGA,kBAAC,IAAD,CACE/N,MAAO,CACL+D,UAAW,OACXpD,gBAAiB,MACjBmB,MAAO,QACPkC,aAAc,QAEhB/B,QAAS+L,EACT/J,OAAK,GARP,UAWCuC,EAAe,uCAAyC,KC7BvDrH,GAAUC,IAAVD,MA8DO8O,GA5Da,SAAC,GAOtB,IANLC,EAMI,EANJA,gBACAC,EAKI,EALJA,sBACAC,EAII,EAJJA,UACAC,EAGI,EAHJA,eACAC,EAEI,EAFJA,mBACA9H,EACI,EADJA,aAEA,OACE,kBAAC,IAAD,CACE9G,MAAM,cACNG,QAASqO,EACTpO,KAAMqO,EACNpO,SAAUoO,GACV,kBAAC,GAAD,CAAOhO,MAAO,GAAd,iBAEE,0BACEH,MAAO,CACLoE,SAAU,SACVtC,MAAO,UACPC,WAAY,SAEbqM,IAGL,kBAAC,IAAD,CACE5K,OAAO,WACPR,KAAMqL,EACN5K,SAAU6K,GACV,kBAAC,IAAK/N,KAAN,CACEmD,MAAM,mBACNC,KAAK,OACLC,MAAO,CACL,CACEC,UAAU,EACVT,QAAS,uBAGb,kBAAC,IAAD,OAGF,kBAAC,IAAK7C,KAAN,KACE,kBAAC,IAAD,CACEP,MAAO,CACL+D,UAAW,OACXpD,gBAAiB,UACjBmB,MAAO,QACPkC,aAAc,QAEhBE,SAAS,SACTD,OAAK,GARP,UAWCuC,EAAe,uCAAyC,O,UCvD3DrH,GAAUC,IAAVD,MACA+I,GAAUC,KAAVD,MAuNOqG,GAtNM,SAAC,GAUf,IATLnI,EASI,EATJA,MACA8E,EAQI,EARJA,MACAsD,EAOI,EAPJA,mBACAL,EAMI,EANJA,sBACAM,EAKI,EALJA,mBACApB,EAII,EAJJA,wBACAqB,EAGI,EAHJA,gBACAC,EAEI,EAFJA,oBACAb,EACI,EADJA,2BAEA,OACE,kBAAC,KAAD,CAAKnF,OAAQ,CAAC,GAAI,KACfvC,EAAM,GAAGwI,SAAShG,KAAI,SAACiG,GACtB,IAAIC,EAAiBC,OAAOC,QAAQH,GAAS,GAAG,GAChD,OACE,kBAAC,KAAD,CACEnO,IAAKqO,OAAOC,QAAQH,GAAS,GAAG,GAChChG,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,EACJhJ,MAAO,CAAEJ,MAAO,SAChB,kBAAC,KAAD,CACEF,MACE,oCACE,kBAACuP,GAAA,EAAD,MADF,sBAEuBF,OAAOC,QAAQH,GAAS,GAAG,IAGpD3F,UAAU,GACV,kBAAC,KAAD,CACElJ,MAAO,CACLC,WAAY,iDACZqB,aAAc,SAEhB,kBAAC,GAAD,CAAO+G,OAAO,iCAAiC3H,IAAI,KACjD,6BACA,kBAAC,GAAD,CAAOP,MAAO,GAAd,gBACA,2BACE,2CAAyB,IAD3B,2DAGG+K,EAAME,MAAMC,OAAOlF,QAHtB,IAIG4I,OAAOC,QAAQH,GAAS,GAAG,GAAGK,QAAQ,KAAM,QAE/C,2BACE,kDADF,SAGA,2BACE,kDADF,4BAGA,6BACA,kBAAC,GAAD,CAAO/O,MAAO,GAAd,mBACA,2BACE,2CAAyB,IAD3B,wDAGG+K,EAAME,MAAMC,OAAOlF,QAHtB,IAIG4I,OAAOC,QAAQH,GAAS,GAAG,GAAGK,QAAQ,KAAM,QAE/C,2BACE,kDADF,SAGA,2BACE,kDADF,4BAGA,6BACA,kBAAC,GAAD,CAAO/O,MAAO,GAAd,YACA,2BACE,2CAAyB,IAD3B,2DAGG+K,EAAME,MAAMC,OAAOlF,QAHtB,IAIG4I,OAAOC,QAAQH,GAAS,GAAG,GAAGK,QAAQ,KAAM,QAE/C,2BACE,kDADF,SAGA,2BACE,kDADF,0DAMJ,kBAAC,IAAD,CACElP,MAAO,CAAEW,gBAAiB,UAAWmB,MAAO,SAC5CG,QAAS,WACPoL,IACAqB,EAAgBK,OAAOC,QAAQH,GAAS,GAAG,MAJ/C,YAQA,kBAAC,IAAD,CACE7O,MAAO,CACLW,gBAAiB,MACjBmB,MAAO,QACPR,aAAc,QAEhBW,QAAS,WACP0M,EAAoBI,OAAOC,QAAQH,GAAS,GAAG,IAC/Cf,MARJ,kBAYA,kBAAC,KAAD,KACE,kBAAC,GAAD,CACEzF,OACE,oCACE,kBAAC1I,EAAA,EAAD,MADF,kBAKFe,IAAI,KACHqO,OAAOC,QAAQH,GAAS,GAAG,GAAG1Q,KAAKyK,KAAI,SAACuG,GACvC,OACE,kBAAC,KAAD,CACEzP,MACE,kBAAC,GAAD,CAAOS,MAAO,GACZ,kBAACR,EAAA,EAAD,MADF,aACiCwP,EAAMjP,IAGzCgJ,UAAU,EACVlJ,MAAO,CACLJ,MAAO,OACPgM,UAAW,qBAEblL,IAAKyO,EAAMjP,IACX,kBAAC,KAAD,CACEF,MAAO,CACLC,WACE,iDACFqB,aAAc,SAEhB,kBAAC,GAAD,CAAO+G,OAAO,8BAA8B3H,IAAI,KAC9C,6BACA,kBAAC,GAAD,CAAOP,MAAO,GAAd,gBACA,2BACE,2CAAyB,IAD3B,8DAGG+K,EAAME,MAAMC,OAAOlF,QAHtB,IAIG4I,OAAOC,QAAQH,GAAS,GAAG,GAAGK,QAC7B,KACA,OANJ,IAQIC,EAAMjP,IAEV,2BACE,kDADF,SAGA,2BACE,kDADF,4BAIA,6BACA,kBAAC,GAAD,CAAOC,MAAO,GAAd,eACA,2BACE,2CAAyB,IAD3B,8DAGG+K,EAAME,MAAMC,OAAOlF,QAHtB,IAIG4I,OAAOC,QAAQH,GAAS,GAAG,GAAGK,QAC7B,KACA,OANJ,IAQIC,EAAMjP,IAEV,2BACE,kDADF,QAGA,2BACE,kDADF,0DAMJ,kBAAC,GAAD,CAAOC,MAAO,GAAd,eAAqC,IACrC,+BAAKgP,EAAMlQ,MAAX,KACA,kBAAC,IAAD,CACEe,MAAO,CACLK,OAAQ,SACRM,gBAAiB,UACjBmB,MAAO,SAETG,QAAS,WACPuM,EACEM,EACAK,EAAMjP,GACNiP,EAAMlQ,OAERkP,MAZJ,UAgBA,kBAAC,IAAD,CACEnO,MAAO,CACLK,OAAQ,SACRM,gBAAiB,MACjBmB,MAAO,SAETG,QAAO,sBAAE,sBAAAtE,EAAA,sDACP8Q,EAAmBK,EAAgBK,EAAMjP,IADlC,4CANX,uBC8DTkP,GA3OD,SAAClE,GAAW,IAChBlN,EAASmD,qBAAW5C,GAApBP,KADe,EAEGW,mBAAS,MAFZ,mBAEhByH,EAFgB,KAETiJ,EAFS,OAGRvM,IAAKC,UAAbC,EAHgB,sBAIJF,IAAKC,UAAjBuK,EAJgB,sBAKExK,IAAKC,UAAvBsL,EALgB,sBAMiB1P,oBAAS,GAN1B,mBAMhB2Q,EANgB,KAMFC,EANE,OAOa5Q,oBAAS,GAPtB,mBAOhBoI,EAPgB,KAOJ4C,EAPI,OAQ2BhL,oBAAS,GARpC,mBAQhByO,EARgB,KAQGoC,EARH,OASe7Q,mBAAS,MATxB,mBAShB6N,EATgB,KASHiD,EATG,OAUyB9Q,oBAAS,GAVlC,mBAUhB8O,EAVgB,KAUEiC,EAVF,OAWO/Q,mBAAS,MAXhB,mBAWhBgR,EAXgB,KAWPC,EAXO,OAYuBjR,oBAAS,GAZhC,mBAYhBuP,EAZgB,KAYC2B,EAZD,OAaWlR,mBAAS,MAbpB,mBAahByP,EAbgB,KAaL0B,EAbK,OAciBnR,oBAAS,GAd1B,oBAchB6H,GAdgB,MAcF2D,GAdE,SAgBuBxL,mBAAS,MAhBhC,qBAgBhBoP,GAhBgB,MAgBCgC,GAhBD,SAiB6BpR,oBAAS,GAjBtC,qBAiBhBkP,GAjBgB,MAiBImC,GAjBJ,MAoBjB/M,GAA2B,SAACC,GAChCC,IAAaD,GAAM,CACjBE,QAAS,QACTC,YACE,8EAxBiB,8CA4CvB,6BAAA1F,EAAA,6DAA0B6O,EAA1B,EAA0BA,YAA1B,SACQpC,KADR,uBAGwBmC,GACpBC,EACAtB,EAAME,MAAMC,OAAOlF,QACnBnI,EAAKsK,KANT,iBAQenK,KARf,iCASUsI,KATV,OAWIxD,GAAyB,WAX7B,yCAaUwD,KAbV,QAeIzD,EAAKmG,cACLoG,GAAgB,GAChBvI,KAjBJ,6CA5CuB,sBAiEvB,SAASA,KACP2C,GAAe5C,GACf/D,EAAKmG,cAKP,SAAS2E,KACPkC,IAAuBnC,IAzEF,8CAgFvB,sBAAAlQ,EAAA,sEACQyM,KADR,uBAEQuC,GAAcoB,GAAiB7C,EAAME,MAAMC,OAAOlF,QAASnI,EAAKsK,KAFxE,uBAGQ7B,KAHR,OAIE8I,GAAgB,GAChBzB,KALF,4CAhFuB,sBAwFvB,SAAST,KACPmC,GAAsBpC,GACtBE,EAASnE,cA1FY,8CA4FvB,WAA4BlK,GAA5B,SAAAtB,EAAA,sEACQyM,KADR,uBAGQwC,GAAU3N,EAAOiM,EAAME,MAAMC,OAAOlF,QAASqG,EAAaxO,EAAKsK,KAHvE,uBAIQ7B,KAJR,OAME8I,GAAgB,GAChBjC,EAASnE,cACTkE,KARF,4CA5FuB,oEAwGvB,WAAkC4C,EAAcC,GAAhD,SAAAvS,EAAA,sEACQ8R,EAAeQ,GADvB,uBAEQL,EAAWM,GAFnB,OAGExC,KAHF,4CAxGuB,oEA8GvB,WAA+BuC,GAA/B,SAAAtS,EAAA,sDACE8R,EAAeQ,GADjB,4CA9GuB,sBAkHvB,SAASvC,KACPgC,GAAqBjC,GACrBzK,EAAKmG,cApHgB,8CAsHvB,sBAAAxL,EAAA,sEACQyM,KADR,uBAEQ0C,GACJ5B,EAAME,MAAMC,OAAOlF,QACnBqG,EACAmD,EACA3R,EAAKsK,KANT,uBAQQ7B,KARR,OASE8I,GAAgB,GAChBvM,EAAKmG,cAELuE,KAZF,4CAtHuB,oEAsIvB,WAAkCuC,EAAcC,EAAU9B,GAA1D,SAAAzQ,EAAA,sEACQ8R,EAAeQ,GADvB,uBAEQL,EAAWM,GAFnB,uBAGQJ,EAAa1B,GAHrB,4CAtIuB,sBA2IvB,SAASD,KACP0B,GAAoB3B,GACpBG,EAAelF,cA7IM,8CA+IvB,WAAkClK,GAAlC,SAAAtB,EAAA,sEACQyM,KADR,uBAEQ4C,GACJ9B,EAAME,MAAMC,OAAOlF,QACnBqG,EACAmD,EACA1Q,EACAjB,EAAKsK,KAPT,uBASQ7B,KATR,OAUE8I,GAAgB,GAChBpB,KAXF,4CA/IuB,+BA8JR/D,KA9JQ,8EA8JvB,sBAAAzM,EAAA,sEACQwM,IAAgB,GADxB,4CA9JuB,+BAiKR1D,KAjKQ,8EAiKvB,sBAAA9I,EAAA,sEACQwM,IAAgB,GADxB,4CAjKuB,sBAqKvB,OAzIArL,qBAAU,YACM,uCAAG,8BAAAnB,EAAA,sEACTyM,KADS,uBAGQlE,GAAUgF,EAAME,MAAMC,OAAOlF,SAHrC,uBAGPhI,EAHO,EAGPA,KACRkR,EAAS,CAAClR,IAJK,SAKTsI,KALS,QAOM,IAAjB6I,GACFC,GAAgB,GARH,4CAAH,qDAWdY,KACC,CAACb,IA4HGtR,EACLoI,EACE,6BACE,gCACE,kBAAC,GAAD,CACEI,aAAcA,GACdC,wBAAyBA,KAE3B,kBAAC,GAAD,CACEM,WAAYA,EACZC,YAAaA,GACbhE,KAAMA,EACNS,SAjLa,6CAkLb+C,aAAcA,KAGhB,kBAAC,GAAD,CACEqH,mBAAoBA,GACpBC,2BAA4BA,GAC5BC,gBAAiBA,GACjBC,qBAzLa,4CA0LbxH,aAAcA,KAEhB,kBAAC,GAAD,CACE4G,kBAAmBA,EACnBC,wBAAyBA,GACzBC,SAAUA,EACVC,aAhMa,6CAiMb/G,aAAcA,KAEhB,kBAAC,GAAD,CACEiH,iBAAkBA,EAClBC,yBAA0BA,GAC1BC,uBAtMa,4CAuMbnH,aAAcA,KAEhB,kBAAC,GAAD,CACE0H,gBAAiBA,EACjBC,sBAAuBA,GACvBC,UAAWA,EACXC,eAAgBA,EAChBC,mBA9Ma,6CA+Mb9H,aAAcA,KAEhB,kBAAC,GAAD,CAAgB0E,MAAOA,EAAOlE,YAAaA,KAC3C,yBAAKhH,MAAO,CAAEK,OAAQ,SACpB,kBAAC,GAAD,CACE+F,MAAOA,EACP8E,MAAOA,EACPsD,mBAtNW,iDAuNXL,sBAAuBA,GACvBM,mBAxNW,+CAyNXpB,wBAAyBA,GACzBqB,gBA1NW,6CA2NXC,oBA/IZ,SAA6BnC,GAC3BuD,GAAmBvD,IA+ITsB,2BAA4BA,QAMpC,uBAAG9N,MAAO,CAAEyC,UAAW,SAAU2B,SAAU,SAA3C,cACa,kBAAC,KAAD,CAAMyC,KAAK,UAAW,KAIrC,kBAAC,IAAD,CAAUjF,GAAG,OC/NFwO,GApBA,WACb,OACE,kBAAC,IAAD,KACE,kBAAC,EAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,UAAW9L,GAAM+L,KAAK,IAAIC,OAAK,IACtC,kBAAC,IAAD,CAAOF,UAAWG,EAAOF,KAAK,WAC9B,kBAAC,IAAD,CAAOD,UAAWzN,EAAQ0N,KAAK,YAC/B,kBAAC,IAAD,CAAOD,UAAW9G,GAAS+G,KAAK,aAChC,kBAAC,IAAD,CAAOD,UAAWxE,GAASyE,KAAK,qCAChC,kBAAC,IAAD,CACED,UAAWjB,GACXkB,KAAK,2DCVGG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASxF,MACvB,2D,OCVNyF,IAASC,OAEP,kBAACrS,EAAD,KACE,kBAAC,GAAD,OAGFsS,SAASC,eAAe,SDqHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAA9T,GACL8H,QAAQ9H,MAAMA,EAAM2F,c","file":"static/js/main.2f619dcd.chunk.js","sourcesContent":["import axios from \"axios\";\nlet baseURL = \"http://localhost:3000/auth\";\nprocess.env.NODE_ENV === \"production\"\n  ? (baseURL = \"https://vicaty.herokuapp.com/auth\")\n  : (baseURL = \"http://localhost:3000/auth\");\n\nconst authService = axios.create({\n  baseURL,\n  withCredentials: true,\n});\n\nauthService.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  (error) => {\n    return error;\n  }\n);\n\nexport const signup = async ({ username, email, password }) => {\n  const user = await authService.post(\"/signup\", {\n    username,\n    password,\n    email,\n  });\n  return user;\n};\n\nexport const login = async (userData) => {\n  const { data: user } = await authService.post(\"/login\", userData);\n  return user;\n};\n\nexport const getCurrentUser = async () => {\n  const { data: user } = await authService.get(\"/currentuser\");\n  return user;\n};\n\nexport const logoutP = async () => {\n  await authService.get(\"/logout\");\n};\n\nexport const updatePhoto = async (image) => {\n  await authService.put(\"/photo\", { image });\n};\n","import React, { createContext, useState, useEffect } from \"react\";\nimport { getCurrentUser } from \"./services/auth\";\n\nexport const Context = createContext();\n\nexport default function OurProvider({ children }) {\n  const [user, setuser] = useState(null);\n\n  useEffect(() => {\n    async function getSession() {\n      const { user } = await getCurrentUser();\n      if (user?.username) {\n        loginUser(user);\n      }\n    }\n    getSession();\n  }, []);\n\n  function loginUser(user) {\n    setuser(user);\n  }\n  function logout() {\n    setuser(null);\n  }\n\n  return (\n    <Context.Provider\n      value={{\n        user,\n        loginUser,\n        logout,\n      }}>\n      {children}\n    </Context.Provider>\n  );\n}\n","import React from \"react\";\nimport { FileTextOutlined } from \"@ant-design/icons\";\nimport { Modal, Timeline, Image, Typography, Tabs } from \"antd\";\n\nconst { Title } = Typography;\nconst { TabPane } = Tabs;\n\nconst Documentation = ({ helpModalState, handleHelpModal }) => {\n  return (\n    <Modal\n      title={\n        <>\n          <FileTextOutlined /> Vicaty Documentation\n        </>\n      }\n      width={800}\n      visible={helpModalState}\n      onOk={handleHelpModal}\n      onCancel={handleHelpModal}\n      style={{\n        background: \"linear-gradient(90deg, white 0%, #364d79 220%)\",\n      }}>\n      <Title id=\"general\" level={1}>\n        <FileTextOutlined />\n        {` `}\n        Index\n      </Title>\n      <ul>\n        <li>\n          <a href=\"#general\">General</a>\n        </li>\n        <li>\n          <a href=\"#duplicate\">\n            Using existing Project's Schemas to create new Project\n          </a>\n        </li>\n        <li>\n          <a href=\"#storing\">Storing Data. Practical example</a>\n        </li>\n        <br />\n        <li>\n          <a href=\"#Project\">Projects</a>\n        </li>\n        <li>\n          <a href=\"#Model\">Models</a>\n        </li>\n        <li>\n          <a href=\"#Element\">Elements</a>\n        </li>\n        <li>\n          <a href=\"#Data\">Data</a>\n        </li>\n        <br />\n        <li>\n          <a href=\"#APIToken\">API userID token</a>\n        </li>\n        <li>\n          <a href=\"#API\">Using API</a>\n        </li>\n        <br />\n        <br />\n      </ul>\n      <div>\n        <hr />\n\n        <Title id=\"general\" level={1}>\n          General\n        </Title>\n        <p>\n          <strong>Projects</strong> are the most general level of organization\n          of your <strong>API</strong>\n        </p>\n        <p>\n          Before creating a project, it's recommended that you plan with care\n          the structure of your whole API. Start creating a small diagram on\n          paper or with your favorite diagrams app.\n        </p>\n        <ul>\n          <li>\n            <strong>Projects</strong> can contain several{\" \"}\n            <strong>Models</strong>\n          </li>\n          <li>\n            <strong>Models</strong> can contain several{\" \"}\n            <strong>Elements</strong>\n          </li>\n          <li>\n            <strong>Elements</strong> can contain several <strong>Data</strong>\n          </li>\n        </ul>\n        <Image\n          style={{ margin: \"30px 10%\", width: \"100%\" }}\n          src=\"/docImgs/tree1d.png\"\n        />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <Title id=\"duplicate\" level={1}>\n          Using existing Project's Schemas to create new Project\n        </Title>\n\n        <p>\n          To accomplish this is as easy as to click the\n          <strong> Duplicate Project </strong>button to create a new Menu, with\n          a whole\n          <strong> new ID and new customized API endpoints </strong>, but with\n          the\n          <strong> same existing data </strong>and structure from the original\n          <strong> Project Schema </strong>\n        </p>\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <Title id=\"storing\" level={1}>\n          Storing Data. Practical example\n        </Title>\n        <p>\n          Lets say you have a Restaurant, and want to build an{\" \"}\n          <strong>API</strong> that will store your <strong>Menus</strong>, so\n          you decide to build a <strong>Menu Schema</strong> on the first level\n          of organization. So your <strong>Menu Schema</strong> it's equivalent\n          to your <strong>Project Schema</strong>.\n        </p>\n        <br />\n\n        <Timeline>\n          <Timeline.Item>\n            The first thing you do is create a Menu <strong>Schema</strong>\n          </Timeline.Item>\n          <Timeline.Item>\n            Then you'll decide what <strong>Models</strong> can a Menu have.\n            Let's say each <strong>Menu</strong> will contain a{\" \"}\n            <strong>Lunch Model</strong> and a <strong>Dinner Model</strong>{\" \"}\n          </Timeline.Item>\n          <Timeline.Item>\n            The <strong>Lunch Model</strong> will have many dishes, each Dish\n            will be an <strong>Element</strong> of the Lunch Model\n          </Timeline.Item>\n          <Timeline.Item>\n            Each <strong>Dish Element</strong> will have several{\" \"}\n            <strong> Data, </strong>\n            including the <strong>Price</strong> and description\n          </Timeline.Item>\n        </Timeline>\n        <br />\n        <p>\n          So, you do the same for the Dinner model and{\" \"}\n          <strong>Congratulations!</strong> You have created a Menu Schema that\n          will look like this (click for larger detail):\n        </p>\n        <Image\n          style={{ margin: \"30px 0\", width: \"100%\" }}\n          src=\"/docImgs/tree2d.png\"\n        />\n        <br />\n        <br />\n        <p>\n          Now that you have created your first Menu, you can access and modify\n          your data within<strong> Vicaty app </strong>\n          or via the<strong> API endpoints </strong> provided by the page.\n        </p>\n        <p>\n          But maybe you don't want to have one single<strong> Menu </strong>,\n          instead you want to have a wide variety of Different Menus with\n          several dishes each. To accomplish this is, you need to{\" \"}\n          <strong> Duplicate </strong>the existing project\n        </p>\n        <p>\n          To accomplish this is as easy as to click the\n          <strong> Duplicate Project </strong>button to create a new Menu, with\n          a whole\n          <strong> new ID and new customized API endpoints </strong>, but with\n          the\n          <strong> same existing data </strong>and structure from the original\n          <strong> Menu Schema </strong>\n        </p>\n        <Title id=\"Project\" level={1}>\n          Projects\n        </Title>\n        <p>\n          Projects are the most general level of organization of your API and\n          the first thing you create when starting using Vicaty.\n        </p>\n        <p>\n          Before creating a project, it's recommended that you plan with care\n          the structure of your whole API. Start creating a small diagram on\n          paper or with your favorite diagrams app.\n        </p>\n        <p>Each project will have on its own:</p>\n        <ul>\n          <li>\n            <strong>A Project name:</strong> It's recommended to keep it short\n            and concise.\n          </li>\n          <li>\n            <strong>Creation and last updated dates:</strong> For keeping track\n            of your project\n          </li>\n          <li>\n            <strong>A Project Id:</strong> This Id will be used for making\n            requests to your API from an external site\n          </li>\n        </ul>\n        <p>\n          For convenience, you will be able to see directly the API endpoint to\n          fetch each project below each project's description. This URL will\n          have already added the corresponding Project's Id at the end of it.\n        </p>\n        <p>\n          <strong>For security</strong>, you can only modify or delete projects\n          from Vicaty's dashboard because there is too much nested data in them\n          (no external modifications with API endpoints allowed)\n        </p>\n        <Title id=\"Model\" level={1}>\n          Models\n        </Title>\n        <p>Models are the second level of organization of your API.</p>\n        <p>\n          You can make your Project with the complexity that you need, for\n          instance, only have projects with models attached to it, with no\n          elements and no nested data. Like this:\n        </p>\n        <Image\n          style={{ margin: \"30px 0\", width: \"100%\" }}\n          src=\"/docImgs/tree3d.png\"\n        />\n        <p>Each Model will have on its own:</p>\n        <ul>\n          <li>\n            <strong>A Model name:</strong> It's recommended to keep it short and\n            concise.\n          </li>\n          <li>\n            <strong>A Model description:</strong> It's recommended to keep it\n            short and concise.\n          </li>\n          <li>\n            <strong>Creation and last updated dates:</strong> For keeping track\n            of your Model.\n          </li>\n          <li>\n            <strong>A Model Id:</strong> This Id will be used for making\n            requests to your API from an external site\n          </li>\n        </ul>\n        <p>\n          For convenience, you will be able to see directly the API endpoint to\n          fetch each Model below each Model's description. This URL will have\n          already added the corresponding Model's Id at the end of it.\n        </p>\n        <p>\n          <strong>For security</strong>, you can only modify or delete Models\n          from Vicaty's dashboard because there is too much nested data in them\n          (no external modifications with API endpoints allowed)\n        </p>\n        <Title id=\"Element\" level={1}>\n          Elements\n        </Title>\n        <p>\n          Elements are third level of organization of your API and can be\n          deleted with the corresponding API endpoints from external sites.\n        </p>\n\n        <p>Each Element will have on its own:</p>\n        <ul>\n          <li>\n            <strong>An Element name:</strong> It's recommended to keep it short\n            and concise. This name will be used for making requests to your API\n            from an external site. Because of this{\" \"}\n            <strong>Element's names must be unique for each model</strong>\n          </li>\n          <br />\n          <li>\n            <strong>Creation and last updated dates:</strong> For keeping track\n            of your Element\n          </li>\n        </ul>\n        <p>\n          For convenience, you will be able to see directly the API endpoint to{\" \"}\n          <strong>fetch</strong> and <strong>delete</strong> each Element below\n          each Element's description. This URL will have already added the\n          corresponding Element's name at the end of it.\n        </p>\n\n        <Title id=\"Data\" level={1}>\n          Data\n        </Title>\n        <p>Data is the most nested level of organization of your API.</p>\n        <p>\n          You will be able to create, delete and modify Data from external sites\n          with the corresponding API endpoint.\n        </p>\n        <p>Each Data will have on its own:</p>\n        <ul>\n          <li>\n            <strong>Data Id:</strong> Used for making requests with the\n            corresponding API endpoint\n          </li>\n\n          <li>\n            <strong>Data value:</strong> This Id will be used for making\n            requests to your API from an external site\n          </li>\n        </ul>\n        <p>\n          For convenience, you will be able to see directly the API endpoint to{\" \"}\n          <strong>fetch, delete</strong> and <strong>modify</strong> each Data\n          below each Data's value. This URL will have already added the\n          corresponding Data's Id at the end of it.\n        </p>\n        <Title id=\"APIToken\" level={1}>\n          API userId Token\n        </Title>\n        <p>\n          You can see your unique <strong>UserId Token</strong> on your\n          project's page header, shown as <strong>Show UserID token</strong>\n        </p>\n        <p>\n          You will need to use this <strong>UserId Token</strong> with every\n          request you do with your API's endpoints.\n        </p>\n        <p>\n          Use <strong>userId : *your user id*</strong> as part of the request\n          body when using your API.\n        </p>\n        <p>\n          Your <strong>userId is PRIVATE</strong> and should be always be kept\n          hidden.\n        </p>\n        <Title id=\"API\" level={1}>\n          Using API\n        </Title>\n        <p>\n          There are <strong>two</strong> ways you can get an API endpoint:\n        </p>\n        <p>\n          The <strong>first way</strong> is to get it directly from the\n          dashboard (below each Project, Model, Element or Data descriptions are\n          shown the <strong>API endpoints</strong> available for them)\n        </p>\n        <p>\n          The <strong>second way</strong> is to build it yourself using the Id's\n          of your components:\n        </p>\n\n        <Tabs defaultActiveKey=\"1\">\n          <TabPane tab=\"Projects\" key=\"1\">\n            <Title level={4}>Get All projects</Title>\n            <p>\n              <strong>Request Type: </strong>\n              https://vicaty-api.herokuapp.com/user/project\n            </p>\n            <p>\n              <strong>Request Route: </strong>POST\n            </p>\n            <p>\n              <strong>Request Body: </strong>\n              {\"userId : <your user Id>\"}\n            </p>\n            <hr\n              style={{\n                backgroundColor: \"#D3D3D3\",\n                height: \"1px\",\n                border: \"none\",\n              }}\n            />\n            <Title level={4}>Get Project</Title>\n            <p>\n              <strong>Request Type: </strong>\n              {`https://vicaty-api.herokuapp.com/user/project/<projectId>`}\n            </p>\n            <p>\n              <strong>Request Route: </strong>POST\n            </p>\n            <p>\n              <strong>Request Body: </strong>\n              {\"userId : <your user Id>\"}\n            </p>\n            <hr\n              style={{\n                backgroundColor: \"#D3D3D3\",\n                height: \"1px\",\n                border: \"none\",\n              }}\n            />\n          </TabPane>\n          <TabPane tab=\"Models\" key=\"2\">\n            <Title level={4}>Get Model</Title>\n            <p>\n              <strong>Request Type: </strong>\n              {`https://vicaty-api.herokuapp.com/user/createdModel/<modelId>`}\n            </p>\n            <p>\n              <strong>Request Route: </strong>POST\n            </p>\n            <p>\n              <strong>Request Body: </strong>\n              {\"userId : <your user Id>\"}\n            </p>\n            <hr\n              style={{\n                backgroundColor: \"#D3D3D3\",\n                height: \"1px\",\n                border: \"none\",\n              }}\n            />\n            <Title level={4}>Get All Project's elements</Title>\n            <p>\n              <strong>Request Type: </strong>\n              {`https://vicaty-api.herokuapp.com/user/element/getAll/<modelId>`}\n            </p>\n            <p>\n              <strong>Request Route: </strong>POST\n            </p>\n            <p>\n              <strong>Request Body: </strong>\n              {\"userId : <your user Id>\"}\n            </p>\n            <hr\n              style={{\n                backgroundColor: \"#D3D3D3\",\n                height: \"1px\",\n                border: \"none\",\n              }}\n            />\n          </TabPane>\n          <TabPane tab=\"Elements\" key=\"3\">\n            <Title level={4}>Get Element</Title>\n            <p>\n              <strong>Request Type: </strong>\n              {`https://vicaty-api.herokuapp.com/user/element/getSingle/<modelId>/<elementName>`}\n            </p>\n            <p>\n              <strong>Request Route: </strong>POST\n            </p>\n            <p>\n              <strong>Request Body: </strong>\n              {\"userId : <your user Id>\"}\n            </p>\n            <hr\n              style={{\n                backgroundColor: \"#D3D3D3\",\n                height: \"1px\",\n                border: \"none\",\n              }}\n            />\n            <Title level={4}>Create Element</Title>\n            <p>\n              <strong>Request Type: </strong>\n              {`https://vicaty-api.herokuapp.com/user/element/create/<modelId>`}\n            </p>\n            <p>\n              <strong>Request Route: </strong>POST\n            </p>\n            <p>\n              <strong>Request Body: </strong>\n              {\n                \"userId : <your user Id> || elementName: <your new element Name>\"\n              }\n            </p>\n            <hr\n              style={{\n                backgroundColor: \"#D3D3D3\",\n                height: \"1px\",\n                border: \"none\",\n              }}\n            />\n            <Title level={4}>Delete Element</Title>\n            <p>\n              <strong>Request Type: </strong>\n              {`https://vicaty-api.herokuapp.com/user/element/delete/<modelId>/<elementName>`}\n            </p>\n            <p>\n              <strong>Request Route: </strong>POST\n            </p>\n            <p>\n              <strong>Request Body: </strong>\n              {\"userId : <your user Id>\"}\n            </p>\n            <hr\n              style={{\n                backgroundColor: \"#D3D3D3\",\n                height: \"1px\",\n                border: \"none\",\n              }}\n            />\n          </TabPane>\n          <TabPane tab=\"Data\" key=\"4\">\n            <Title level={4}>Add Data</Title>\n            <p>\n              <strong>Request Type: </strong>\n              {`https://vicaty-api.herokuapp.com/user/element/addSingle/<modelId>/<elementName>`}\n            </p>\n            <p>\n              <strong>Request Route: </strong>POST\n            </p>\n            <p>\n              <strong>Request Body: </strong>\n              {\"userId : <your user Id> || value: <your data value>\"}\n            </p>\n            <hr\n              style={{\n                backgroundColor: \"#D3D3D3\",\n                height: \"1px\",\n                border: \"none\",\n              }}\n            />\n            <Title level={4}>Update Data</Title>\n            <p>\n              <strong>Request Type: </strong>\n              {`https://vicaty-api.herokuapp.com/user/element/updateSingle/<modelId>/<elementName>/<dataId>`}\n            </p>\n            <p>\n              <strong>Request Route: </strong>POST\n            </p>\n            <p>\n              <strong>Request Body: </strong>\n              {\"userId : <your user Id> || value: <your new data value>\"}\n            </p>\n            <hr\n              style={{\n                backgroundColor: \"#D3D3D3\",\n                height: \"1px\",\n                border: \"none\",\n              }}\n            />\n            <Title level={4}>Delete Data</Title>\n            <p>\n              <strong>Request Type: </strong>\n              {`https://vicaty-api.herokuapp.com/user/element/deleteSingle/<modelId>/<elementName>/<dataId>`}\n            </p>\n            <p>\n              <strong>Request Route: </strong>POST\n            </p>\n            <p>\n              <strong>Request Body: </strong>\n              {\"userId : <your user Id>\"}\n            </p>\n            <hr\n              style={{\n                backgroundColor: \"#D3D3D3\",\n                height: \"1px\",\n                border: \"none\",\n              }}\n            />\n          </TabPane>\n        </Tabs>\n      </div>\n    </Modal>\n  );\n};\n\nexport default Documentation;\n","import React, { useContext, useState } from \"react\";\nimport {\n  ApartmentOutlined,\n  FileOutlined,\n  LogoutOutlined,\n  LoginOutlined,\n  UserAddOutlined,\n  SendOutlined,\n} from \"@ant-design/icons\";\nimport { Layout, Menu } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport { Context } from \"../context\";\nimport { logoutP } from \"../services/auth\";\nimport Documentation from \"./Documentation\";\nconst { Header, Content, Footer } = Layout;\nconst LayoutApp = ({ children }) => {\n  const { user, logout } = useContext(Context);\n  const [helpModalState, setHelpModalState] = useState(false);\n\n  function handleHelpModal() {\n    setHelpModalState(!helpModalState);\n  }\n  async function setlogout() {\n    await logoutP();\n    logout();\n  }\n\n  return (\n    <Layout\n      className=\"layout\"\n      style={{\n        marginBottom: \"50px\",\n        overflow: \"auto\",\n      }}>\n      <Documentation\n        helpModalState={helpModalState}\n        handleHelpModal={handleHelpModal}\n      />\n      <Header>\n        <Menu\n          theme=\"light\"\n          style={{ width: \"100vw\", position: \"absolute\", right: \"0\" }}\n          mode=\"horizontal\">\n          <Menu.Item key=\"1\">\n            <Link to=\"/\">\n              <SendOutlined\n                style={{ color: \"#364D78\", marginLeft: \"5px\" }}\n                rotate=\"90\"\n              />\n              Home\n            </Link>\n          </Menu.Item>\n          <Menu.Item onClick={handleHelpModal} key=\"6\">\n            <FileOutlined />\n            Documentation\n          </Menu.Item>\n\n          {user ? (\n            <>\n              <Menu.Item key=\"5\">\n                <Link to=\"/profile\">\n                  <ApartmentOutlined />\n                  {user.username.toUpperCase()}'s Projects\n                </Link>\n              </Menu.Item>\n              <Menu.Item onClick={setlogout} key=\"4\">\n                <LogoutOutlined />\n                Logout\n              </Menu.Item>\n            </>\n          ) : (\n            <>\n              <Menu.Item key=\"2\">\n                <Link to=\"/login\">\n                  <LoginOutlined /> Login\n                </Link>\n              </Menu.Item>\n              <Menu.Item key=\"3\">\n                <Link to=\"/signup\">\n                  <UserAddOutlined /> Signup\n                </Link>\n              </Menu.Item>\n            </>\n          )}\n        </Menu>\n      </Header>\n      <Content style={{ wordBreak: \"break-all\" }}>{children}</Content>\n      <Footer\n        style={{\n          textAlign: \"center\",\n          backgroundColor: \"white\",\n          color: \"black\",\n          height: \"50px\",\n          position: \"fixed\",\n          bottom: \"0\",\n          paddingBottom: \"40px\",\n          width: \"100vw\",\n        }}>\n        ©2020 Edgar V. C.\n      </Footer>\n    </Layout>\n  );\n};\n\nexport default LayoutApp;\n","import React, { useContext } from \"react\";\nimport { Form, Input, Button, Typography, notification } from \"antd\";\nimport { signup } from \"../services/auth\";\nimport { Redirect } from \"react-router-dom\";\nimport { Context } from \"../context\";\nimport { UserAddOutlined } from \"@ant-design/icons\";\nconst { Title } = Typography;\n\nconst Signup = ({ history }) => {\n  const [form] = Form.useForm();\n  const { user } = useContext(Context);\n  const openNotificationWithIcon = (type) => {\n    notification[type]({\n      message: \"ERROR\",\n      description: \"Username already exists\",\n    });\n  };\n\n  async function onFinish(values) {\n    const user = await signup(values);\n    if (!user.data) {\n      openNotificationWithIcon(`warning`);\n    } else {\n      history.push(\"/login\");\n    }\n  }\n\n  return !user ? (\n    <Form\n      style={{ margin: \"40px 50px\" }}\n      layout=\"vertical\"\n      form={form}\n      onFinish={onFinish}>\n      <Title level={1}>\n        <UserAddOutlined /> Create Account\n      </Title>\n\n      <Form.Item\n        label=\"User Name\"\n        name=\"username\"\n        rules={[{ required: true, message: \"Please input your user name!\" }]}>\n        <Input />\n      </Form.Item>\n      <Form.Item\n        label=\"E-mail\"\n        name=\"email\"\n        rules={[{ required: true, message: \"Please input your user name!\" }]}>\n        <Input />\n      </Form.Item>\n      <Form.Item\n        label=\"Password\"\n        name=\"password\"\n        rules={[{ required: true, message: \"Please input your password!\" }]}>\n        <Input.Password />\n      </Form.Item>\n\n      <Form.Item>\n        <Button\n          style={{\n            marginTop: \"15px\",\n            backgroundColor: \"#364d79\",\n            color: \"white\",\n            borderRadius: \"10px\",\n          }}\n          block\n          htmlType=\"submit\">\n          SIGNUP\n        </Button>\n      </Form.Item>\n    </Form>\n  ) : (\n    <Redirect to=\"/profile\" />\n  );\n};\n\nexport default Signup;\n","import React, { useContext } from \"react\";\nimport { Form, Input, Button, Typography, notification } from \"antd\";\nimport { login } from \"../services/auth\";\nimport { Redirect } from \"react-router-dom\";\nimport { Context } from \"../context\";\nimport { LoginOutlined } from \"@ant-design/icons\";\n\nconst { Title } = Typography;\n\nconst Signup = ({ history }) => {\n  const [form] = Form.useForm();\n  const { user, loginUser } = useContext(Context);\n  const openNotificationWithIcon = (type) => {\n    notification[type]({\n      message: \"ERROR\",\n      description: \"Wrong Username or Password\",\n    });\n  };\n\n  async function onFinish(values) {\n    const user = await login(values);\n    if (!user) {\n      openNotificationWithIcon(`warning`);\n    } else {\n      loginUser(user);\n      history.push(\"/profile\");\n    }\n  }\n\n  return !user ? (\n    <Form\n      style={{ margin: \"40px 50px\" }}\n      layout=\"vertical\"\n      form={form}\n      onFinish={onFinish}>\n      <Title level={1}>\n        <LoginOutlined /> LOGIN\n      </Title>\n      <Form.Item\n        label=\"User Name\"\n        name=\"username\"\n        rules={[{ required: true, message: \"Please input your user name!\" }]}>\n        <Input />\n      </Form.Item>\n      <Form.Item\n        type=\"password\"\n        label=\"Password\"\n        name=\"password\"\n        rules={[{ required: true, message: \"Please input your password!\" }]}>\n        <Input.Password />\n      </Form.Item>\n\n      <Form.Item>\n        <Button\n          style={{\n            marginTop: \"15px\",\n            backgroundColor: \"#364d79\",\n            color: \"white\",\n            borderRadius: \"10px\",\n          }}\n          block\n          htmlType=\"submit\">\n          LOGIN\n        </Button>\n      </Form.Item>\n    </Form>\n  ) : (\n    <Redirect to=\"/profile\" />\n  );\n};\n\nexport default Signup;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Typography, Carousel, Image } from \"antd\";\nimport {\n  ApartmentOutlined,\n  UserAddOutlined,\n  HeartOutlined,\n  FieldTimeOutlined,\n  CodeOutlined,\n  SendOutlined,\n} from \"@ant-design/icons\";\nconst contentStyle = {\n  height: \"350px\",\n  fontSize: \"2rem\",\n  color: \"#fff\",\n  lineHeight: \"310px\",\n  textAlign: \"center\",\n  background: \"linear-gradient(90deg, #364d79 0%, white 220%)\",\n};\nconst { Title, Text } = Typography;\nconst Home = () => {\n  return (\n    <center>\n      <div style={{ wordBreak: \"normal\" }}>\n        <Title style={{ fontSize: \"5rem\", margin: \"2rem 0 1rem 0\" }} level={1}>\n          Vicaty{\" \"}\n          <span\n            style={{\n              fontSize: \"3.2rem\",\n              color: \"darkGray\",\n              position: \"relative\",\n              right: \"53px\",\n              top: \"37px\",\n            }}>\n            Vicaty {` `}{\" \"}\n            <SendOutlined\n              style={{ color: \"#364D78\", marginLeft: \"5px\" }}\n              rotate=\"90\"\n            />\n          </span>\n        </Title>\n        <br />\n        <br />\n        <br />\n        <Text style={{ color: \"gray\", fontSize: \"1.1rem\" }}>\n          A Headless CMS made with <HeartOutlined />\n        </Text>\n        <Carousel style={{ marginTop: \"2rem\" }} autoplay effect=\"fade\">\n          <div>\n            <h3 style={contentStyle}>\n              <ApartmentOutlined style={{ color: \"white\" }} /> {`  `}\n              Easy to Use\n            </h3>\n          </div>\n          <div>\n            <h3 style={contentStyle}>\n              <FieldTimeOutlined style={{ color: \"white\" }} /> {`  `}\n              Modify data fast\n            </h3>\n          </div>\n          <div>\n            <h3 style={contentStyle}>\n              <CodeOutlined style={{ color: \"white\" }} /> {`  `}\n              API's without coding\n            </h3>\n          </div>\n          <div>\n            <h3 style={contentStyle}>\n              {\" \"}\n              Made with love <HeartOutlined block style={{ color: \"white\" }} />\n            </h3>\n          </div>\n        </Carousel>\n\n        <div style={{ padding: \"0 7%\" }}>\n          <Title\n            style={{\n              fontSize: \"3.5rem\",\n              marginTop: \"2rem\",\n            }}\n            level={1}>\n            <ApartmentOutlined /> Easy to use{\" \"}\n            <span\n              style={{\n                fontSize: \"2.2rem\",\n                color: \"darkGray\",\n              }}>\n              Easy to use\n            </span>\n          </Title>\n          <br />\n          <br />\n          <br />\n          <Title\n            style={{\n              fontSize: \"2rem\",\n              color: \"#50648A\",\n            }}\n            level={1}>\n            Plan your project and start building it immediately!{\" \"}\n          </Title>\n          <Title\n            style={{\n              fontSize: \"2rem\",\n              color: \"#50648A\",\n            }}\n            level={1}>\n            with intuitive work flow and easy access documentation{\" \"}\n          </Title>\n          <Image\n            style={{ margin: \"30px 10%\", width: \"100%\" }}\n            src=\"/docImgs/tree2d.png\"\n          />\n          <Title\n            style={{\n              fontSize: \"3.5rem\",\n              marginTop: \"8rem\",\n            }}\n            level={1}>\n            <FieldTimeOutlined /> Modify data within seconds{\" \"}\n            <span\n              style={{\n                fontSize: \"2.2rem\",\n                color: \"darkGray\",\n              }}>\n              Modify data within seconds\n            </span>\n          </Title>\n          <br />\n          <br />\n          <br />\n          <Title\n            style={{\n              fontSize: \"2rem\",\n              color: \"#50648A\",\n            }}\n            level={1}>\n            Vicaty allows you to create, modify and delete data{\" \"}\n          </Title>\n          <Title\n            style={{\n              fontSize: \"2rem\",\n              color: \"#50648A\",\n            }}\n            level={1}>\n            directly from the dashboard or using your API's endpoints{\" \"}\n          </Title>\n          <Image\n            style={{ margin: \"30px 10%\", width: \"100%\" }}\n            src=\"/docImgs/dinnerModel.png\"\n          />\n          <Title\n            style={{\n              fontSize: \"3.5rem\",\n              marginTop: \"8rem\",\n            }}\n            level={1}>\n            <CodeOutlined /> Build API's without a line of code{\" \"}\n            <span\n              style={{\n                fontSize: \"2.2rem\",\n                color: \"darkGray\",\n              }}>\n              Build API's without a line of code\n            </span>\n          </Title>\n          <br />\n          <br />\n          <br />\n\n          <Title\n            style={{\n              fontSize: \"2rem\",\n              color: \"#50648A\",\n            }}\n            level={1}>\n            Access all your information everywhere with your API's endpoints{\" \"}\n          </Title>\n          <Title\n            style={{\n              fontSize: \"2rem\",\n              color: \"#50648A\",\n            }}\n            level={1}>\n            What are you waiting for?{\" \"}\n          </Title>\n          <br />\n          <br />\n          <br />\n          <Title\n            style={{\n              fontSize: \"4.2rem\",\n              color: \"#50648A\",\n            }}\n            level={1}>\n            <Link to=\"/signup\" style={{ color: \"#364D78\" }}>\n              <UserAddOutlined /> Join Now!\n            </Link>\n          </Title>\n          <br />\n          <br />\n          <br />\n        </div>\n      </div>\n    </center>\n  );\n};\n\nexport default Home;\n","import axios from \"axios\";\nlet baseURL = \"http://localhost:3000/user\";\nprocess.env.NODE_ENV === \"production\"\n  ? (baseURL = \"https://vicaty.herokuapp.com/user\")\n  : (baseURL = \"http://localhost:3000/user\");\n\nconst userService = axios.create({\n  baseURL,\n  withCredentials: true,\n});\nuserService.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  (error) => {\n    return error;\n  }\n);\n\nexport const viewProjects = async () => {\n  const projects = await userService.get(\"/\");\n  return projects;\n};\nexport const createProject = async ({ projectName }) => {\n  const newProject = await userService.post(\"/\", {\n    projectName,\n  });\n  return newProject;\n};\nexport const deleteProject = async (projectId) => {\n  console.log(`iddddd`, projectId);\n  const message = await userService.delete(`/project/${projectId}`);\n  console.log(`messageee`, message);\n  return message;\n};\nexport const createModel = async (createdModelName, projectId, description) => {\n  const newModel = await userService.post(`/model/${projectId}`, {\n    createdModelName,\n    description,\n  });\n  return newModel;\n};\n\nexport const viewProject = async (projectId) => {\n  const project = await userService.get(`/project/${projectId}`);\n  return project;\n};\n\nexport const editProject = async (projectId, projectName) => {\n  const project = await userService.put(`/project/${projectId}`, {\n    projectName,\n  });\n  return project;\n};\n\nexport const duplicateProject = async (projectId, projectName) => {\n  const project = await userService.post(`/duplicateProject/${projectId}`, {\n    projectName,\n  });\n  return project;\n};\n\nexport const viewModel = async (modelId) => {\n  const model = await userService.get(`/model/${modelId}`);\n  return model;\n};\n\nexport const editModel = async (modelId, createdModelName, description) => {\n  const model = await userService.put(`/model/${modelId}`, {\n    createdModelName,\n    description,\n  });\n  return model;\n};\nexport const deleteCreatedModel = async (modelId) => {\n  const message = await userService.delete(`/model/${modelId}`);\n  return message;\n};\n","import React from \"react\";\nimport { Modal, Spin } from \"antd\";\nconst LoadingModal = ({ loadingModal, handleLoadingModalFalse }) => {\n  return (\n    <Modal\n      title=\"Loading... Please wait\"\n      visible={loadingModal}\n      onOk={handleLoadingModalFalse}\n      onCancel={handleLoadingModalFalse}\n      okButtonProps={{ hidden: true }}\n      cancelButtonProps={{ hidden: true }}>\n      <Spin size=\"large\" />\n    </Modal>\n  );\n};\n\nexport default LoadingModal;\n","import React from \"react\";\nimport { Button, Input, Form, Modal } from \"antd\";\n\nconst CreateProjectFormModal = ({\n  modalState,\n  handleModal,\n  form,\n  onFinish,\n  loadingModal,\n}) => {\n  return (\n    <Modal\n      title=\"Create new Project Schema\"\n      visible={modalState}\n      onOk={handleModal}\n      onCancel={handleModal}>\n      <Form layout=\"vertical\" form={form} onFinish={onFinish}>\n        <Form.Item\n          label=\"Project Schema name\"\n          name=\"projectName\"\n          rules={[{ required: true, message: \"Please input project\" }]}>\n          <Input />\n        </Form.Item>\n\n        <Form.Item>\n          <Button\n            style={{\n              marginTop: \"15px\",\n              backgroundColor: \"#638165\",\n              color: \"white\",\n              borderRadius: \"10px\",\n            }}\n            block\n            htmlType=\"submit\">\n            Submit\n          </Button>\n          {loadingModal ? \"this could take a while, please wait\" : \"\"}\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n};\n\nexport default CreateProjectFormModal;\n","import React from \"react\";\nimport { Button, Input, Form, Modal } from \"antd\";\n\nconst UpdateProjectFormModal = ({\n  updateModalState,\n  handleUpdateModal,\n  updateForm,\n  onFinishUpdate,\n  projectToUpdate,\n  loadingModal,\n}) => {\n  return (\n    <Modal\n      title=\"Update Project Schema's name\"\n      visible={updateModalState}\n      onOk={handleUpdateModal}\n      onCancel={handleUpdateModal}>\n      <Form layout=\"vertical\" form={updateForm} onFinish={onFinishUpdate}>\n        <Form.Item\n          initialValue={projectToUpdate.projectName}\n          label=\"Project Schema name\"\n          name=\"projectName\"\n          rules={[{ required: true, message: \"Please input project's name\" }]}>\n          <Input />\n        </Form.Item>\n\n        <Form.Item>\n          <Button\n            style={{\n              marginTop: \"15px\",\n              backgroundColor: \"#364d79\",\n              color: \"white\",\n              borderRadius: \"10px\",\n            }}\n            block\n            htmlType=\"submit\">\n            Submit\n          </Button>\n          {loadingModal ? \"this could take a while, please wait\" : \"\"}\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n};\n\nexport default UpdateProjectFormModal;\n","import React from \"react\";\nimport { Button, Input, Form, Modal } from \"antd\";\n\nconst DuplicateProjectFormModal = ({\n  projectToDuplicate,\n  duplicationModalState,\n  handleDuplicationModal,\n  duplicateForm,\n  onFinishDuplication,\n  loadingModal,\n}) => {\n  return (\n    <Modal\n      title={`Duplicate Project from ${projectToDuplicate.projectName}`}\n      visible={duplicationModalState}\n      onOk={handleDuplicationModal}\n      onCancel={handleDuplicationModal}>\n      <Form\n        layout=\"vertical\"\n        form={duplicateForm}\n        onFinish={onFinishDuplication}>\n        <Form.Item\n          initialValue={projectToDuplicate.projectName}\n          label=\"New Project name\"\n          name=\"projectName\"\n          rules={[{ required: true, message: \"Please input project's name\" }]}>\n          <Input />\n        </Form.Item>\n\n        <Form.Item>\n          <Button\n            style={{\n              marginTop: \"15px\",\n              backgroundColor: \"#638165\",\n              color: \"white\",\n              borderRadius: \"10px\",\n            }}\n            block\n            htmlType=\"submit\">\n            Duplicate\n          </Button>\n          {loadingModal ? \"this could take a while, please wait\" : \"\"}\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n};\n\nexport default DuplicateProjectFormModal;\n","import React from \"react\";\nimport { Button, Modal } from \"antd\";\n\nconst DeleteProjectFormModal = ({\n  projectDeleteModal,\n  handleDeleteProject,\n  deleteProjectConfirmed,\n  loadingModal,\n}) => {\n  return (\n    <Modal\n      title=\"Are you sure you want to delete this Project?\"\n      visible={projectDeleteModal}\n      onOk={handleDeleteProject}\n      onCancel={handleDeleteProject}>\n      <Button\n        style={{\n          margin: \"15px 0\",\n          backgroundColor: \"red\",\n          color: \"white\",\n        }}\n        block\n        onClick={() => {\n          deleteProjectConfirmed();\n        }}>\n        DELETE\n      </Button>\n      {loadingModal ? \"this could take a while, please wait\" : \"\"}\n    </Modal>\n  );\n};\n\nexport default DeleteProjectFormModal;\n","import React from \"react\";\nimport { ApartmentOutlined } from \"@ant-design/icons\";\n\nimport { Button, Typography, Collapse } from \"antd\";\nconst { Title } = Typography;\nconst { Panel } = Collapse;\nconst ProjectsHeader = ({ user, handleModal }) => {\n  return (\n    <div\n      style={{\n        width: \"100vw\",\n        background: \"linear-gradient(90deg, #364d79 0%, white 220%)\",\n        padding: \"30px 15vw\",\n        color: \"white\",\n        borderRadius: \"3px\",\n      }}>\n      <Title style={{ color: \"white\" }} level={1}>\n        <ApartmentOutlined /> Projects Schemas\n      </Title>\n      <Title style={{ color: \"white\" }} level={3}>\n        Main Content of your API\n      </Title>\n      <Collapse\n        style={{\n          marginBottom: \"15px\",\n        }}>\n        <Panel header=\"Show UserID token\" key=\"1\">\n          <p>\n            <strong>USER ID :</strong> {user._id}\n          </p>\n        </Panel>\n      </Collapse>\n      <Collapse\n        style={{\n          background: \"linear-gradient(90deg, white 0%, #364d79 220%)\",\n          marginBottom: \"15px\",\n        }}>\n        <Panel header=\"Show API endpoint to fetch all Projects\" key=\"1\">\n          <p>\n            <strong>Route :</strong>{\" \"}\n            https://vicaty-api.herokuapp.com/user/project\n          </p>\n          <p>\n            <strong>Request Type :</strong> POST\n          </p>\n          <p>\n            <strong>Request Body :</strong> userId : *your user Id*\n          </p>\n        </Panel>\n      </Collapse>\n\n      <h3 style={{ color: \"white\" }}>\n        Here you can see all of your existing projects schemas. Don't have any?\n        click below to create a new one!\n      </h3>\n\n      <Button\n        style={{\n          margin: \"15px 0\",\n          color: \"#364d79\",\n        }}\n        onClick={handleModal}>\n        Create New Project Schema!\n      </Button>\n    </div>\n  );\n};\n\nexport default ProjectsHeader;\n","import React from \"react\";\nimport { AppstoreOutlined } from \"@ant-design/icons\";\nimport { Link } from \"react-router-dom\";\n\nimport { Button, Card, Row, Col, Collapse } from \"antd\";\nconst { Panel } = Collapse;\n\nconst ProjectsBody = ({\n  projects,\n  updateForm,\n  setProjectToUpdateF,\n  handleUpdateModal,\n  duplicateForm,\n  setProjectToDuplicateF,\n  handleDuplicationModal,\n  setProjectF,\n  handleDeleteProject,\n}) => {\n  return (\n    <div style={{ margin: \"20px\" }}>\n      <Row gutter={[16, 16]}>\n        {projects?.map((project) => {\n          return (\n            <Col key={project._id} xs={24} sm={24} md={12} lg={8}>\n              <Card\n                title={\n                  <>\n                    <AppstoreOutlined /> {` `}\n                    {project.projectName}\n                  </>\n                }\n                bordered={false}>\n                <Button\n                  style={{\n                    margin: \"15px 0\",\n                    backgroundColor: \"white\",\n                    color: \"#364d79\",\n                  }}\n                  onClick={async () => {\n                    await updateForm.resetFields();\n                    await setProjectToUpdateF(project.projectName, project._id);\n                    handleUpdateModal();\n                  }}\n                  block>\n                  Update Project's name\n                </Button>\n                <Button\n                  style={{\n                    margin: \"15px 0\",\n                    backgroundColor: \"white\",\n                    color: \"#364d79\",\n                  }}\n                  onClick={async () => {\n                    await duplicateForm.resetFields();\n                    await setProjectToDuplicateF(\n                      project.projectName,\n                      project._id\n                    );\n                    handleDuplicationModal();\n                  }}\n                  block>\n                  Duplicate Project\n                </Button>\n\n                <p>\n                  <strong>Project id:</strong> {project._id}\n                </p>\n                <p>\n                  <strong>Creation date:</strong>{\" \"}\n                  {project.created_at.slice(0, 10)}\n                </p>\n                <p>\n                  <strong>Last updated:</strong>{\" \"}\n                  {project.updated_at.slice(0, 10)}\n                </p>\n                <Collapse\n                  style={{\n                    background:\n                      \"linear-gradient(90deg, white 0%, #364d79 300%)\",\n                    marginBottom: \"15px\",\n                  }}>\n                  <Panel header=\"API endpoint to fetch project\" key=\"1\">\n                    <p>\n                      <strong>Route :</strong>{\" \"}\n                      https://vicaty-api.herokuapp.com/user/project/\n                      {project._id}\n                    </p>\n                    <p>\n                      <strong>Request Type :</strong> POST\n                    </p>\n                    <p>\n                      <strong>Request Body :</strong> userId : *your user Id*\n                    </p>\n                  </Panel>\n                </Collapse>\n                <Button\n                  style={{\n                    margin: \"15px 0\",\n                    backgroundColor: \"#364d79\",\n                    color: \"white\",\n                  }}\n                  block>\n                  <Link to={`/project/${project.projectName}/${project._id}`}>\n                    Go to project\n                  </Link>\n                </Button>\n                <Button\n                  style={{\n                    margin: \"15px 0\",\n                    backgroundColor: \"red\",\n                    color: \"white\",\n                  }}\n                  block\n                  onClick={() => {\n                    setProjectF(project._id);\n                    handleDeleteProject();\n                  }}>\n                  DELETE\n                </Button>\n              </Card>\n            </Col>\n          );\n        })}\n      </Row>\n    </div>\n  );\n};\n\nexport default ProjectsBody;\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { Form } from \"antd\";\nimport {\n  viewProjects,\n  createProject,\n  deleteProject,\n  editProject,\n  duplicateProject,\n} from \"../services/backend\";\nimport { Context } from \"../context\";\nimport LoadingModal from \"../components/LoadingModal\";\nimport CreateProjectFormModal from \"../components/Profile/CreateProjectFormModal\";\nimport UpdateProjectFormModal from \"../components/Profile/UpdateProjectFormModal\";\nimport DuplicateProjectFormModal from \"../components/Profile/DuplicateProjectFormModal\";\nimport DeleteProjectFormModal from \"../components/Profile/DeleteProjectFormModal\";\nimport ProjectsHeader from \"../components/Profile/ProjectsHeader\";\nimport ProjectsBody from \"../components/Profile/ProjectsBody\";\n\nconst Profile = () => {\n  const { user } = useContext(Context);\n  const [projects, setProjects] = useState(null);\n  const [fetchedProjects, setFetchedProjects] = useState(false);\n  const [form] = Form.useForm();\n  const [updateForm] = Form.useForm();\n  const [duplicateForm] = Form.useForm();\n  const [modalState, setModalState] = useState(false);\n  const [projectDeleteModal, setProjectDeleteModal] = useState(false);\n  const [updateModalState, setUpdateModalState] = useState(false);\n  const [projectToDelete, setProjectToDelete] = useState(null);\n  const [projectToUpdate, setProjectToUpdate] = useState(`null`);\n  const [duplicationModalState, setDuplicationModalState] = useState(false);\n  const [projectToDuplicate, setProjectToDuplicate] = useState(`null`);\n  const [loadingModal, setLoadingModal] = useState(false);\n\n  //load data function -----------------------------------------------------------------------------------\n  useEffect(() => {\n    const getProjects = async () => {\n      await handleLoadingModalTrue();\n\n      const { data } = await viewProjects();\n      setProjects(data);\n      await handleLoadingModalFalse();\n\n      if (fetchedProjects === false) {\n        setFetchedProjects(true);\n      }\n    };\n    getProjects();\n  }, [fetchedProjects]);\n  //Create Project functions -----------------------------------------------------------------------------------\n  async function onFinish(values) {\n    await handleLoadingModalTrue();\n\n    await createProject(values);\n    await handleLoadingModalFalse();\n\n    setFetchedProjects(false);\n    form.resetFields();\n    handleModal();\n  }\n\n  function handleModal() {\n    setModalState(!modalState);\n  }\n  //Delete Project functions -----------------------------------------------------------------------------------\n\n  function handleDeleteProject() {\n    setProjectDeleteModal(!projectDeleteModal);\n  }\n  function setProjectF(projectId) {\n    setProjectToDelete(projectId);\n  }\n  async function deleteProjectConfirmed() {\n    await handleLoadingModalTrue();\n\n    await deleteProject(projectToDelete);\n    await handleLoadingModalFalse();\n\n    setFetchedProjects(false);\n    handleDeleteProject();\n  }\n\n  //Update Project functions -----------------------------------------------------------------------------------\n\n  function setProjectToUpdateF(projectName, projectId) {\n    setProjectToUpdate({ projectName: projectName, projectId: projectId });\n  }\n  function handleUpdateModal() {\n    setUpdateModalState(!updateModalState);\n    updateForm.resetFields();\n  }\n  async function onFinishUpdate(values) {\n    await handleLoadingModalTrue();\n\n    await editProject(projectToUpdate.projectId, values.projectName);\n    await handleLoadingModalFalse();\n\n    updateForm.resetFields();\n    handleUpdateModal();\n    setFetchedProjects(false);\n  }\n\n  //duplication functions -----------------------------------------------------------------------------------\n  function setProjectToDuplicateF(projectName, projectId) {\n    setProjectToDuplicate({ projectName: projectName, projectId: projectId });\n  }\n\n  function handleDuplicationModal() {\n    setDuplicationModalState(!duplicationModalState);\n    duplicateForm.resetFields();\n  }\n\n  async function onFinishDuplication(values) {\n    await handleLoadingModalTrue();\n\n    await duplicateProject(projectToDuplicate.projectId, values.projectName);\n    await handleLoadingModalFalse();\n\n    duplicateForm.resetFields();\n    handleDuplicationModal();\n    setFetchedProjects(false);\n  }\n  //loading modal -----------------------------------------------------------------------------------\n  async function handleLoadingModalTrue() {\n    await setLoadingModal(true);\n  }\n  async function handleLoadingModalFalse() {\n    await setLoadingModal(false);\n  }\n\n  return user ? (\n    <div>\n      <center>\n        <LoadingModal\n          loadingModal={loadingModal}\n          handleLoadingModalFalse={handleLoadingModalFalse}\n        />\n        <CreateProjectFormModal\n          modalState={modalState}\n          handleModal={handleModal}\n          form={form}\n          onFinish={onFinish}\n          loadingModal={loadingModal}\n        />\n        <UpdateProjectFormModal\n          updateModalState={updateModalState}\n          handleUpdateModal={handleUpdateModal}\n          updateForm={updateForm}\n          onFinishUpdate={onFinishUpdate}\n          projectToUpdate={projectToUpdate}\n          loadingModal={loadingModal}\n        />\n        <DuplicateProjectFormModal\n          projectToDuplicate={projectToDuplicate}\n          duplicationModalState={duplicationModalState}\n          handleDuplicationModal={handleDuplicationModal}\n          duplicateForm={duplicateForm}\n          onFinishDuplication={onFinishDuplication}\n          loadingModal={loadingModal}\n        />\n        <DeleteProjectFormModal\n          projectDeleteModal={projectDeleteModal}\n          handleDeleteProject={handleDeleteProject}\n          deleteProjectConfirmed={deleteProjectConfirmed}\n          loadingModal={loadingModal}\n        />\n        <ProjectsHeader user={user} handleModal={handleModal} />\n        <ProjectsBody\n          projects={projects}\n          updateForm={updateForm}\n          setProjectToUpdateF={setProjectToUpdateF}\n          handleUpdateModal={handleUpdateModal}\n          duplicateForm={duplicateForm}\n          setProjectToDuplicateF={setProjectToDuplicateF}\n          handleDuplicationModal={handleDuplicationModal}\n          setProjectF={setProjectF}\n          handleDeleteProject={handleDeleteProject}\n        />\n      </center>\n    </div>\n  ) : (\n    <Redirect to=\"/\" />\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\n\nimport { Button, Input, Form, Modal } from \"antd\";\n\nconst CreateModelFormModal = ({\n  modalState,\n  handleModal,\n  form,\n  onFinish,\n  loadingModal,\n}) => {\n  return (\n    <Modal\n      title=\"Create new Model\"\n      visible={modalState}\n      onOk={handleModal}\n      onCancel={handleModal}>\n      <Form layout=\"vertical\" form={form} onFinish={onFinish}>\n        <Form.Item\n          label=\"Model name\"\n          name=\"createdModelName\"\n          rules={[{ required: true, message: \"Please input model name\" }]}>\n          <Input />\n        </Form.Item>\n        <Form.Item\n          label=\"Model description or value\"\n          name=\"description\"\n          rules={[\n            {\n              required: true,\n              message: \"Please input model value or description\",\n            },\n          ]}>\n          <Input />\n        </Form.Item>\n\n        <Form.Item>\n          <Button\n            style={{\n              marginTop: \"15px\",\n              backgroundColor: \"#364d79\",\n              color: \"white\",\n              borderRadius: \"10px\",\n            }}\n            block\n            htmlType=\"submit\">\n            Submit\n          </Button>\n          {loadingModal ? \"this could take a while, please wait\" : \"\"}\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n};\n\nexport default CreateModelFormModal;\n","import React from \"react\";\n\nimport { Button, Input, Form, Modal } from \"antd\";\n\nconst UpdateModelFormModal = ({\n  modelUpdateModal,\n  handleModelUpdateModal,\n  updateModelForm,\n  onFinishUpdate,\n  modelToUpdate,\n  loadingModal,\n}) => {\n  return (\n    <Modal\n      title=\"Update Model\"\n      visible={modelUpdateModal}\n      onOk={handleModelUpdateModal}\n      onCancel={handleModelUpdateModal}>\n      <Form layout=\"vertical\" form={updateModelForm} onFinish={onFinishUpdate}>\n        <Form.Item\n          initialValue={modelToUpdate.modelName}\n          label=\"Model name\"\n          name=\"modelName\"\n          rules={[{ required: true, message: \"Please input model's name\" }]}>\n          <Input />\n        </Form.Item>\n        <Form.Item\n          initialValue={modelToUpdate.description}\n          label=\"Model description\"\n          name=\"description\"\n          rules={[\n            {\n              required: true,\n              message: \"Please input model's description\",\n            },\n          ]}>\n          <Input />\n        </Form.Item>\n\n        <Form.Item>\n          <Button\n            style={{\n              marginTop: \"15px\",\n              backgroundColor: \"#638165\",\n              color: \"white\",\n              borderRadius: \"10px\",\n            }}\n            block\n            htmlType=\"submit\">\n            Submit\n          </Button>\n          {loadingModal ? \"this could take a while, please wait\" : \"\"}\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n};\n\nexport default UpdateModelFormModal;\n","import React from \"react\";\n\nimport { Button, Modal } from \"antd\";\n\nconst DeleteModelFormModal = ({\n  modelDeleteModal,\n  handleDeleteModal,\n  deleteModelConfirmed,\n  loadingModal,\n}) => {\n  return (\n    <Modal\n      title=\"Are you sure you want to delete this Model?\"\n      visible={modelDeleteModal}\n      onOk={handleDeleteModal}\n      onCancel={handleDeleteModal}>\n      <Button\n        style={{\n          margin: \"15px 0\",\n          backgroundColor: \"red\",\n          color: \"white\",\n        }}\n        block\n        onClick={() => {\n          deleteModelConfirmed();\n        }}>\n        DELETE\n      </Button>\n      {loadingModal ? \"this could take a while, please wait\" : \"\"}\n    </Modal>\n  );\n};\n\nexport default DeleteModelFormModal;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { ApartmentOutlined, AppstoreOutlined } from \"@ant-design/icons\";\nimport { Button, Typography, Collapse, Breadcrumb } from \"antd\";\nconst { Title } = Typography;\nconst { Panel } = Collapse;\nconst ModelsHeader = ({ props, handleModal }) => {\n  return (\n    <div\n      style={{\n        width: \"100vw\",\n        padding: \"30px 15vw\",\n        background: \"linear-gradient(90deg, #364d79 0%, white 220%)\",\n        color: \"white\",\n      }}>\n      <Breadcrumb style={{ position: \"relative\", bottom: \"20px\" }} separator=\"\">\n        <Breadcrumb.Item>\n          <Link style={{ color: \"white\" }} to=\"/profile\">\n            <ApartmentOutlined style={{ color: \"white\" }} /> Projects\n          </Link>\n        </Breadcrumb.Item>\n        <span style={{ color: \"white\" }}>{`   >   `}</span>\n        <Breadcrumb.Item>\n          <Link\n            style={{ color: \"white\" }}\n            to={`/project/${props.match.params.projectName}/${props.match.params.projectId}`}>\n            <AppstoreOutlined style={{ color: \"white\" }} />\n            {` `}\n            {props.match.params.projectName}\n          </Link>\n        </Breadcrumb.Item>\n      </Breadcrumb>\n      <Title style={{ color: \"white\" }} level={1}>\n        <AppstoreOutlined /> {props.match.params.projectName}\n      </Title>\n      <Title style={{ color: \"white\" }} level={3}>\n        PROJECT Id: {props.match.params.projectId}\n      </Title>\n\n      <h3 style={{ color: \"white\" }}>\n        Here you can see all your {`  `}\n        <span style={{ fontSize: \"1.8rem\", fontWeight: \"bold\" }}>models</span>\n        {\"  \"}\n        corresponding to the\n        {props.match.params.projectName} project. click below to create a new\n        one!\n      </h3>\n      <Button\n        style={{\n          margin: \"15px 0\",\n          backgroundColor: \"white\",\n          color: \"#364d79\",\n        }}\n        onClick={handleModal}\n        block>\n        Create New Model!\n      </Button>\n      <Collapse\n        style={{\n          background: \"linear-gradient(90deg, white 0%, #364d79 220%)\",\n          marginBottom: \"15px\",\n        }}>\n        <Panel header=\"Show API endpoint to fetch Project\" key=\"1\">\n          <p>\n            <strong>Route :</strong>{\" \"}\n            https://vicaty-api.herokuapp.com/user/project/\n            {props.match.params.projectId}\n          </p>\n          <p>\n            <strong>Request Type :</strong> POST\n          </p>\n          <p>\n            <strong>Request Body :</strong> userId : *your user Id*\n          </p>\n        </Panel>\n      </Collapse>\n    </div>\n  );\n};\n\nexport default ModelsHeader;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { BlockOutlined } from \"@ant-design/icons\";\nimport { Button, Card, Row, Col, Collapse } from \"antd\";\nconst { Panel } = Collapse;\nconst ModelsBody = ({\n  project,\n  updateModelForm,\n  setModelToUpdateF,\n  handleModelUpdateModal,\n  props,\n  loadingModal,\n  setModelF,\n  handleDeleteModal,\n}) => {\n  return (\n    <div style={{ margin: \"20px\" }}>\n      <Row gutter={[16, 16]}>\n        {project[0].createdModels.map((model) => {\n          return (\n            <Col key={model._id} xs={24} sm={24} md={12} lg={8}>\n              <Card\n                key={model._id}\n                title={\n                  <>\n                    <BlockOutlined />\n                    {` `}\n                    {model.createdModelName}\n                  </>\n                }\n                bordered={true}\n                style={{\n                  marginBottom: \"40px\",\n                  borderTop: \"3px solid #364d79\",\n                }}>\n                <p>\n                  <strong>Model description:</strong> {model.description}\n                </p>\n                <Button\n                  style={{\n                    margin: \"15px 0\",\n                    backgroundColor: \"white\",\n                    color: \"#364d79\",\n                    width: \"100%\",\n                  }}\n                  onClick={async () => {\n                    await updateModelForm.resetFields();\n                    await setModelToUpdateF(\n                      model.createdModelName,\n                      model._id,\n                      model.description\n                    );\n                    handleModelUpdateModal();\n                  }}\n                  block>\n                  Update Model's name and description\n                </Button>\n                <p>\n                  <strong>Model id:</strong> {model._id}\n                </p>\n                <p>\n                  <strong>Creation date:</strong>{\" \"}\n                  {model.created_at.slice(0, 10)}\n                </p>\n                <p>\n                  <strong>Last updated:</strong> {model.updated_at.slice(0, 10)}\n                </p>\n                <Collapse\n                  style={{\n                    background:\n                      \"linear-gradient(90deg, white 0%, #364d79 220%)\",\n                    marginBottom: \"15px\",\n                  }}>\n                  <Panel header=\"Show API to fetch this model\" key=\"1\">\n                    <p>\n                      <strong>Route :</strong>{\" \"}\n                      https://vicaty-api.herokuapp.com/user/createdModel/\n                      {model._id}\n                    </p>\n                    <p>\n                      <strong>Request Type :</strong> POST\n                    </p>\n                    <p>\n                      <strong>Request Body :</strong> userId : *your user Id*\n                    </p>\n                  </Panel>\n                </Collapse>\n                <Button\n                  style={{\n                    width: \"100%\",\n                    margin: \"15px 0\",\n                    backgroundColor: \"#364d79\",\n                    color: \"white\",\n                  }}>\n                  <Link\n                    to={`/model/${model.createdModelName}/${model._id}/${props.match.params.projectName}/${props.match.params.projectId}`}>\n                    Go to model\n                  </Link>\n                </Button>\n                <Button\n                  style={{\n                    width: \"100%\",\n                    margin: \"15px 0\",\n                    backgroundColor: \"red\",\n                    color: \"white\",\n                  }}\n                  onClick={() => {\n                    setModelF(model._id);\n                    handleDeleteModal();\n                  }}>\n                  DELETE\n                </Button>\n                {loadingModal ? \"this could take a while, please wait\" : \"\"}\n              </Card>\n            </Col>\n          );\n        })}\n      </Row>\n    </div>\n  );\n};\n\nexport default ModelsBody;\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport {} from \"@ant-design/icons\";\nimport { Form, Spin } from \"antd\";\nimport {\n  viewProject,\n  createModel,\n  deleteCreatedModel,\n  editModel,\n} from \"../services/backend\";\nimport { Context } from \"../context\";\nimport LoadingModal from \"../components/LoadingModal\";\nimport CreateModelFormModal from \"../components/Projects/CreateModelFormModal\";\nimport UpdateModelFormModal from \"../components/Projects/UpdateModelFormModal\";\nimport DeleteModelFormModal from \"../components/Projects/DeleteModelFormModal\";\nimport ModelsHeader from \"../components/Projects/ModelsHeader\";\nimport ModelsBody from \"../components/Projects/ModelsBody\";\n\nconst Project = (props) => {\n  const { user } = useContext(Context);\n  const [project, setProject] = useState(null);\n  const [form] = Form.useForm();\n  const [updateModelForm] = Form.useForm();\n  const [fetchedProject, setFetchedProject] = useState(false);\n  const [modalState, setModalState] = useState(false);\n  const [modelDeleteModal, setModelDeleteModal] = useState(false);\n  const [modelToDelete, setModelToDelete] = useState(null);\n  const [modelUpdateModal, setModelUpdateModal] = useState(false);\n  const [modelToUpdate, setModelToUpdate] = useState(false);\n  const [loadingModal, setLoadingModal] = useState(false);\n\n  //load data functions ----------------------------------------------------------------------------------\n  useEffect(() => {\n    const getProject = async () => {\n      await handleLoadingModalTrue();\n      const { data } = await viewProject(props.match.params.projectId);\n      setProject(data);\n      await handleLoadingModalFalse();\n      if (fetchedProject === false) {\n        setFetchedProject(true);\n      }\n    };\n    getProject();\n  }, [fetchedProject]);\n\n  //Create Model functions ----------------------------------------------------------------------------------\n  async function onFinish({ createdModelName, description }) {\n    await handleLoadingModalTrue();\n    await createModel(\n      createdModelName,\n      props.match.params.projectId,\n      description\n    );\n    await handleLoadingModalFalse();\n    setFetchedProject(false);\n    handleModal();\n  }\n\n  function handleModal() {\n    setModalState(!modalState);\n  }\n  //Delete Model functions ----------------------------------------------------------------------------------\n\n  function handleDeleteModal() {\n    setModelDeleteModal(!modelDeleteModal);\n  }\n  function setModelF(modelId) {\n    setModelToDelete(modelId);\n  }\n  async function deleteModelConfirmed() {\n    await handleLoadingModalTrue();\n    await deleteCreatedModel(modelToDelete);\n    await handleLoadingModalFalse();\n    setFetchedProject(false);\n    handleDeleteModal();\n  }\n  //Update Model functions ----------------------------------------------------------------------------------\n\n  function setModelToUpdateF(modelName, modelId, description) {\n    setModelToUpdate({\n      modelName: modelName,\n      modelId: modelId,\n      description: description,\n    });\n  }\n  function handleModelUpdateModal() {\n    setModelUpdateModal(!modelUpdateModal);\n    updateModelForm.resetFields();\n  }\n  async function onFinishUpdate(values) {\n    await handleLoadingModalTrue();\n    await editModel(\n      modelToUpdate.modelId,\n      values.modelName,\n      values.description\n    );\n    await handleLoadingModalFalse();\n\n    updateModelForm.resetFields();\n    handleModelUpdateModal();\n    setFetchedProject(false);\n  }\n\n  //loading modal --------------------------------------------------------------------------------------\n  async function handleLoadingModalTrue() {\n    await setLoadingModal(true);\n  }\n  async function handleLoadingModalFalse() {\n    await setLoadingModal(false);\n  }\n\n  return user ? (\n    project ? (\n      <div>\n        <center>\n          <LoadingModal\n            loadingModal={loadingModal}\n            handleLoadingModalFalse={handleLoadingModalFalse}\n          />\n          <CreateModelFormModal\n            modalState={modalState}\n            handleModal={handleModal}\n            form={form}\n            onFinish={onFinish}\n            loadingModal={loadingModal}\n          />\n          <UpdateModelFormModal\n            modelUpdateModal={modelUpdateModal}\n            handleModelUpdateModal={handleModelUpdateModal}\n            updateModelForm={updateModelForm}\n            onFinishUpdate={onFinishUpdate}\n            modelToUpdate={modelToUpdate}\n            loadingModal={loadingModal}\n          />\n          <DeleteModelFormModal\n            modelDeleteModal={modelDeleteModal}\n            handleDeleteModal={handleDeleteModal}\n            deleteModelConfirmed={deleteModelConfirmed}\n            loadingModal={loadingModal}\n          />\n          <ModelsHeader props={props} handleModal={handleModal} />\n          <ModelsBody\n            project={project}\n            updateModelForm={updateModelForm}\n            setModelToUpdateF={setModelToUpdateF}\n            handleModelUpdateModal={handleModelUpdateModal}\n            props={props}\n            loadingModal={loadingModal}\n            setModelF={setModelF}\n            handleDeleteModal={handleDeleteModal}\n          />\n        </center>\n      </div>\n    ) : (\n      <p style={{ textAlign: \"center\", fontSize: \"3rem\" }}>\n        Loading... <Spin size=\"large\" />{\" \"}\n      </p>\n    )\n  ) : (\n    <Redirect to=\"/\" />\n  );\n};\n\nexport default Project;\n","import axios from \"axios\";\nlet baseURL = \"http://localhost:3000/user\";\nprocess.env.NODE_ENV === \"production\"\n  ? (baseURL = \"https://vicaty-api.herokuapp.com/user\")\n  : (baseURL = \"http://localhost:3002/user\");\n\nconst userService = axios.create({\n  baseURL,\n  withCredentials: false,\n});\nuserService.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  (error) => {\n    return error;\n  }\n);\n\nexport const createElement = async (elementName, modelId, userId) => {\n  const updatedModel = await userService.post(`/element/create/${modelId}`, {\n    userId,\n    elementName,\n  });\n  return updatedModel;\n};\nexport const deleteElement = async (elementName, modelId, userId) => {\n  const updatedModel = await userService.post(\n    `/element/delete/${modelId}/${elementName}`,\n    {\n      userId,\n    }\n  );\n  return updatedModel;\n};\n\nexport const addSingle = async ({ data }, modelId, elementName, userId) => {\n  const updatedElement = await userService.post(\n    `/element/addSingle/${modelId}/${elementName}`,\n    {\n      userId,\n      value: data,\n    }\n  );\n  return updatedElement;\n};\n\nexport const deleteSingleData = async (\n  modelId,\n  elementName,\n  dataId,\n  userId\n) => {\n  const updatedElement = await userService.post(\n    `/element/deleteSingle/${modelId}/${elementName}/${dataId}`,\n    {\n      userId,\n    }\n  );\n  return updatedElement;\n};\n\nexport const getElement = async (elementName, modelId, userId) => {\n  const element = await userService.post(\n    `/element/getSingle/${modelId}/${elementName}`,\n    {\n      userId,\n    }\n  );\n  return element;\n};\n\nexport const updateSingle = async (\n  modelId,\n  elementName,\n  dataId,\n  { data: value },\n  userId\n) => {\n  const updatedElement = await userService.put(\n    `/element/updateSingle/${modelId}/${elementName}/${dataId}`,\n    {\n      userId,\n      value,\n    }\n  );\n  return updatedElement;\n};\n","import React from \"react\";\n\nimport { Button, Input, Form, Modal } from \"antd\";\n\nconst CreateElementFormModal = ({\n  modalState,\n  handleModal,\n  form,\n  onFinish,\n  loadingModal,\n}) => {\n  return (\n    <Modal\n      title=\"Create new Element\"\n      visible={modalState}\n      onOk={handleModal}\n      onCancel={handleModal}>\n      <Form layout=\"vertical\" form={form} onFinish={onFinish}>\n        <Form.Item\n          label=\"Element name\"\n          name=\"elementName\"\n          rules={[{ required: true, message: \"Please input element name\" }]}>\n          <Input />\n        </Form.Item>\n\n        <Form.Item>\n          <Button\n            style={{\n              marginTop: \"15px\",\n              backgroundColor: \"#638165\",\n              color: \"white\",\n              borderRadius: \"10px\",\n            }}\n            block\n            htmlType=\"submit\">\n            Submit\n          </Button>\n          {loadingModal ? \"this could take a while, please wait\" : \"\"}\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n};\n\nexport default CreateElementFormModal;\n","import React from \"react\";\nimport {\n  ApartmentOutlined,\n  AppstoreOutlined,\n  BlockOutlined,\n} from \"@ant-design/icons\";\nimport { Button, Typography, Collapse, Breadcrumb } from \"antd\";\nimport { Link } from \"react-router-dom\";\nconst { Title } = Typography;\nconst { Panel } = Collapse;\n\nconst ElementsHeader = ({ props, handleModal }) => {\n  return (\n    <div\n      style={{\n        width: \"100vw\",\n        padding: \"30px 15vw\",\n\n        background: \"linear-gradient(90deg, #364d79 0%, white 220%)\",\n        color: \"white\",\n      }}>\n      <Breadcrumb style={{ position: \"relative\", bottom: \"20px\" }} separator=\"\">\n        <Breadcrumb.Item>\n          <Link style={{ color: \"white\" }} to=\"/profile\">\n            <ApartmentOutlined style={{ color: \"white\" }} /> Projects\n          </Link>\n        </Breadcrumb.Item>\n        <span style={{ color: \"white\" }}>{`   >   `}</span>\n        <Breadcrumb.Item>\n          <Link\n            style={{ color: \"white\" }}\n            to={`/project/${props.match.params.projectName}/${props.match.params.projectId}`}>\n            <AppstoreOutlined style={{ color: \"white\" }} />\n            {` `}\n            {props.match.params.projectName}\n          </Link>\n        </Breadcrumb.Item>\n        <span style={{ color: \"white\" }}>{`   >   `}</span>\n        <Breadcrumb.Item>\n          <BlockOutlined style={{ color: \"white\" }} />\n          <span style={{ color: \"white\" }}>\n            {` `}\n            {props.match.params.modelName}\n          </span>\n        </Breadcrumb.Item>\n      </Breadcrumb>\n      <Title style={{ color: \"white\" }} level={1}>\n        <BlockOutlined /> {props.match.params.modelName}\n      </Title>\n      <Title style={{ color: \"white\" }} level={3}>\n        MODEL Id: {props.match.params.modelId}\n      </Title>\n\n      <h3 style={{ color: \"white\" }}>\n        Here you can see all your {`  `}\n        <span style={{ fontSize: \"1.8rem\", fontWeight: \"bold\" }}>elements</span>\n        {`  `} corresponding to the {props.match.params.modelName} model. Click\n        below to create a new one!\n      </h3>\n      <Button\n        style={{\n          margin: \"15px 0\",\n          backgroundColor: \"white\",\n          color: \"#364d79\",\n        }}\n        onClick={handleModal}\n        block>\n        Create New Element!\n      </Button>\n      <Collapse\n        style={{\n          background: \"linear-gradient(90deg, white 0%, #364d79 300%)\",\n          marginBottom: \"15px\",\n        }}>\n        <Panel header=\"API endpoints\" key=\"1\">\n          <Title level={5}>Get Model </Title>\n          <p>\n            <strong>Route :</strong>{\" \"}\n            https://vicaty-api.herokuapp.com/user/createdModel/\n            {props.match.params.modelId}\n          </p>\n          <p>\n            <strong>Request Type :</strong> POST\n          </p>\n          <p>\n            <strong>Request Body :</strong> userId : *your user Id*\n          </p>\n          <hr />\n          <Title level={5}>Create Element </Title>\n          <p>\n            <strong>Route :</strong>{\" \"}\n            https://vicaty-api.herokuapp.com/user/element/create/\n            {props.match.params.modelId}\n          </p>\n          <p>\n            <strong>Request Type :</strong> POST\n          </p>\n          <p>\n            <strong>Request Body :</strong> userId : *your user Id* ||\n            elementName: *your new element Name*\n          </p>\n        </Panel>\n      </Collapse>\n    </div>\n  );\n};\n\nexport default ElementsHeader;\n","import React from \"react\";\n\nimport { Button, Input, Form, Modal } from \"antd\";\nconst DataCreateFormModal = ({\n  dataCreationModal,\n  handleDataCreationModal,\n  dataForm,\n  onFinishData,\n  loadingModal,\n}) => {\n  return (\n    <Modal\n      title=\"Add data\"\n      visible={dataCreationModal}\n      onOk={handleDataCreationModal}\n      onCancel={handleDataCreationModal}>\n      <Form layout=\"vertical\" form={dataForm} onFinish={onFinishData}>\n        <Form.Item\n          label=\"Data value\"\n          name=\"data\"\n          rules={[\n            {\n              required: true,\n              message: \"Please input data\",\n            },\n          ]}>\n          <Input />\n        </Form.Item>\n\n        <Form.Item>\n          <Button\n            style={{\n              marginTop: \"15px\",\n              backgroundColor: \"#638165\",\n              color: \"white\",\n              borderRadius: \"10px\",\n            }}\n            htmlType=\"submit\"\n            block>\n            Add Data\n          </Button>\n          {loadingModal ? \"this could take a while, please wait\" : \"\"}\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n};\n\nexport default DataCreateFormModal;\n","import React from \"react\";\n\nimport { Button, Typography, Modal } from \"antd\";\nconst { Title } = Typography;\n\nconst DataDeleteFormModal = ({\n  deleteModalState,\n  handleDeleteElementModal,\n  deleteWithConfirmation,\n  loadingModal,\n}) => {\n  return (\n    <Modal\n      title=\"Delete Data\"\n      visible={deleteModalState}\n      onOk={handleDeleteElementModal}\n      onCancel={handleDeleteElementModal}>\n      <Title level={2}>Are you sure you want to delete this entry?</Title>\n      <Button\n        style={{\n          marginTop: \"15px\",\n          backgroundColor: \"red\",\n          color: \"white\",\n          borderRadius: \"10px\",\n        }}\n        onClick={deleteWithConfirmation}\n        block>\n        DELETE\n      </Button>\n      {loadingModal ? \"this could take a while, please wait\" : \"\"}\n    </Modal>\n  );\n};\n\nexport default DataDeleteFormModal;\n","import React from \"react\";\n\nimport { Button, Typography, Modal } from \"antd\";\nconst { Title } = Typography;\n\nconst ElementDeleteFormModal = ({\n  elementDeleteModal,\n  handleElementDeletionModal,\n  elementToDelete,\n  confirmDeleteElement,\n  loadingModal,\n}) => {\n  return (\n    <Modal\n      title=\"Delete Element\"\n      visible={elementDeleteModal}\n      onOk={handleElementDeletionModal}\n      onCancel={handleElementDeletionModal}>\n      <Title level={2}>\n        Are you sure you want to delete this element ({elementToDelete}) ?\n      </Title>\n      <Button\n        style={{\n          marginTop: \"15px\",\n          backgroundColor: \"red\",\n          color: \"white\",\n          borderRadius: \"10px\",\n        }}\n        onClick={confirmDeleteElement}\n        block>\n        DELETE\n      </Button>\n      {loadingModal ? \"this could take a while, please wait\" : \"\"}\n    </Modal>\n  );\n};\n\nexport default ElementDeleteFormModal;\n","import React from \"react\";\n\nimport { Button, Typography, Input, Form, Modal } from \"antd\";\nconst { Title } = Typography;\n\nconst DataUpdateFormModal = ({\n  dataUpdateModal,\n  handleDataUpdateModal,\n  dataValue,\n  updateDataForm,\n  onFinishUpdateData,\n  loadingModal,\n}) => {\n  return (\n    <Modal\n      title=\"Update Data\"\n      visible={dataUpdateModal}\n      onOk={handleDataUpdateModal}\n      onCancel={handleDataUpdateModal}>\n      <Title level={3}>\n        Current value:\n        <span\n          style={{\n            fontSize: \"1.1rem\",\n            color: \"#696969\",\n            marginLeft: \"10px\",\n          }}>\n          {dataValue}\n        </span>\n      </Title>\n      <Form\n        layout=\"vertical\"\n        form={updateDataForm}\n        onFinish={onFinishUpdateData}>\n        <Form.Item\n          label=\"Input new value:\"\n          name=\"data\"\n          rules={[\n            {\n              required: true,\n              message: \"Please input data\",\n            },\n          ]}>\n          <Input />\n        </Form.Item>\n\n        <Form.Item>\n          <Button\n            style={{\n              marginTop: \"15px\",\n              backgroundColor: \"#638165\",\n              color: \"white\",\n              borderRadius: \"10px\",\n            }}\n            htmlType=\"submit\"\n            block>\n            Update\n          </Button>\n          {loadingModal ? \"this could take a while, please wait\" : \"\"}\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n};\n\nexport default DataUpdateFormModal;\n","import React from \"react\";\nimport { BorderOutlined, FileTextOutlined } from \"@ant-design/icons\";\nimport { Button, Typography, Card, Row, Col, Collapse } from \"antd\";\nconst { Title } = Typography;\nconst { Panel } = Collapse;\nconst ElementsBody = ({\n  model,\n  props,\n  updateElementModal,\n  handleDataUpdateModal,\n  deleteElementModal,\n  handleDataCreationModal,\n  setElementNameF,\n  setElementToDeleteF,\n  handleElementDeletionModal,\n}) => {\n  return (\n    <Row gutter={[16, 16]}>\n      {model[0].elements.map((element) => {\n        let currentElement = Object.entries(element)[0][0];\n        return (\n          <Col\n            key={Object.entries(element)[0][0]}\n            xs={24}\n            sm={24}\n            md={12}\n            lg={8}\n            style={{ width: \"100%\" }}>\n            <Card\n              title={\n                <>\n                  <BorderOutlined />\n                  {` `} element name: {Object.entries(element)[0][0]}\n                </>\n              }\n              bordered={true}>\n              <Collapse\n                style={{\n                  background: \"linear-gradient(90deg, white 0%, #364d79 300%)\",\n                  marginBottom: \"15px\",\n                }}>\n                <Panel header=\"API endpoints for this element\" key=\"1\">\n                  <hr />\n                  <Title level={5}>Get Element </Title>\n                  <p>\n                    <strong>Route :</strong>{\" \"}\n                    https://vicaty-api.herokuapp.com/user/element/getSingle/\n                    {props.match.params.modelId}/\n                    {Object.entries(element)[0][0].replace(/ /g, \"%20\")}\n                  </p>\n                  <p>\n                    <strong>Request Type :</strong> POST\n                  </p>\n                  <p>\n                    <strong>Request Body :</strong> userId : *your user Id*\n                  </p>\n                  <hr />\n                  <Title level={5}>Delete Element </Title>\n                  <p>\n                    <strong>Route :</strong>{\" \"}\n                    https://vicaty-api.herokuapp.com/user/element/delete/\n                    {props.match.params.modelId}/\n                    {Object.entries(element)[0][0].replace(/ /g, \"%20\")}\n                  </p>\n                  <p>\n                    <strong>Request Type :</strong> POST\n                  </p>\n                  <p>\n                    <strong>Request Body :</strong> userId : *your user Id*\n                  </p>\n                  <hr />\n                  <Title level={5}>Add Data</Title>\n                  <p>\n                    <strong>Route :</strong>{\" \"}\n                    https://vicaty-api.herokuapp.com/user/element/addSingle/\n                    {props.match.params.modelId}/\n                    {Object.entries(element)[0][0].replace(/ /g, \"%20\")}\n                  </p>\n                  <p>\n                    <strong>Request Type :</strong> POST\n                  </p>\n                  <p>\n                    <strong>Request Body :</strong> userId : *your user ||\n                    value: *your new data value*\n                  </p>\n                </Panel>\n              </Collapse>\n              <Button\n                style={{ backgroundColor: \"#364D78\", color: \"white\" }}\n                onClick={() => {\n                  handleDataCreationModal();\n                  setElementNameF(Object.entries(element)[0][0]);\n                }}>\n                Add Data\n              </Button>\n              <Button\n                style={{\n                  backgroundColor: \"red\",\n                  color: \"white\",\n                  marginBottom: \"20px\",\n                }}\n                onClick={() => {\n                  setElementToDeleteF(Object.entries(element)[0][0]);\n                  handleElementDeletionModal();\n                }}>\n                Delete Element\n              </Button>\n              <Collapse>\n                <Panel\n                  header={\n                    <>\n                      <FileTextOutlined />\n                      {` `} Show data\n                    </>\n                  }\n                  key=\"1\">\n                  {Object.entries(element)[0][1].data.map((entry) => {\n                    return (\n                      <Card\n                        title={\n                          <Title level={5}>\n                            <FileTextOutlined /> Data ID: {entry.id}\n                          </Title>\n                        }\n                        bordered={true}\n                        style={{\n                          width: \"100%\",\n                          borderTop: \"1px solid #364D78\",\n                        }}\n                        key={entry.id}>\n                        <Collapse\n                          style={{\n                            background:\n                              \"linear-gradient(90deg, white 0%, #364d79 300%)\",\n                            marginBottom: \"15px\",\n                          }}>\n                          <Panel header=\"API endpoints for this data\" key=\"1\">\n                            <hr />\n                            <Title level={5}>Delete Data </Title>\n                            <p>\n                              <strong>Route :</strong>{\" \"}\n                              https://vicaty-api.herokuapp.com/user/element/deleteSingle/\n                              {props.match.params.modelId}/\n                              {Object.entries(element)[0][0].replace(\n                                / /g,\n                                \"%20\"\n                              )}\n                              /{entry.id}\n                            </p>\n                            <p>\n                              <strong>Request Type :</strong> POST\n                            </p>\n                            <p>\n                              <strong>Request Body :</strong> userId : *your\n                              user Id*\n                            </p>\n                            <hr />\n                            <Title level={5}>Update Data</Title>\n                            <p>\n                              <strong>Route :</strong>{\" \"}\n                              https://vicaty-api.herokuapp.com/user/element/updateSingle/\n                              {props.match.params.modelId}/\n                              {Object.entries(element)[0][0].replace(\n                                / /g,\n                                \"%20\"\n                              )}\n                              /{entry.id}\n                            </p>\n                            <p>\n                              <strong>Request Type :</strong> PUT\n                            </p>\n                            <p>\n                              <strong>Request Body :</strong> userId : *your\n                              user || value: *your new data value*\n                            </p>\n                          </Panel>\n                        </Collapse>\n                        <Title level={5}>Data value:</Title>{\" \"}\n                        <p> {entry.value} </p>\n                        <Button\n                          style={{\n                            margin: \"15px 0\",\n                            backgroundColor: \"#364D78\",\n                            color: \"white\",\n                          }}\n                          onClick={() => {\n                            updateElementModal(\n                              currentElement,\n                              entry.id,\n                              entry.value\n                            );\n                            handleDataUpdateModal();\n                          }}>\n                          Modify\n                        </Button>\n                        <Button\n                          style={{\n                            margin: \"15px 0\",\n                            backgroundColor: \"red\",\n                            color: \"white\",\n                          }}\n                          onClick={async () => {\n                            deleteElementModal(currentElement, entry.id);\n                          }}>\n                          Delete\n                        </Button>\n                      </Card>\n                    );\n                  })}\n                </Panel>\n              </Collapse>\n            </Card>\n          </Col>\n        );\n      })}\n    </Row>\n  );\n};\n\nexport default ElementsBody;\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nimport { Form, notification, Spin } from \"antd\";\nimport { viewModel } from \"../services/backend\";\nimport {\n  addSingle,\n  createElement,\n  deleteSingleData,\n  updateSingle,\n  deleteElement,\n} from \"../services/api\";\nimport { Context } from \"../context\";\nimport LoadingModal from \"../components/LoadingModal\";\nimport CreateElementFormModal from \"../components/Models/CreateElementFormModal\";\nimport ElementsHeader from \"../components/Models/ElementsHeader\";\nimport DataCreateFormModal from \"../components/Models/DataCreateFormModal\";\nimport DataDeleteFormModal from \"../components/Models/DataDeleteFormModal\";\nimport ElementDeleteFormModal from \"../components/Models/ElementDeleteFormModal\";\nimport DataUpdateFormModal from \"../components/Models/DataUpdateFormModal\";\nimport ElementsBody from \"../components/Models/ElementsBody\";\n\nconst Model = (props) => {\n  const { user } = useContext(Context);\n  const [model, setModel] = useState(null);\n  const [form] = Form.useForm();\n  const [dataForm] = Form.useForm();\n  const [updateDataForm] = Form.useForm();\n  const [fetchedModel, setFetchedModel] = useState(false);\n  const [modalState, setModalState] = useState(false);\n  const [dataCreationModal, setDataCreationModal] = useState(false);\n  const [elementName, setElementName] = useState(null);\n  const [deleteModalState, setDeleteModalState] = useState(false);\n  const [valueId, setValueId] = useState(null);\n  const [dataUpdateModal, setDataUpdateModal] = useState(false);\n  const [dataValue, setDataValue] = useState(null);\n  const [loadingModal, setLoadingModal] = useState(false);\n\n  const [elementToDelete, setElementToDelete] = useState(null);\n  const [elementDeleteModal, setElementDeleteModal] = useState(false);\n\n  //Repeated name Error notification -----------------------------------------------------------------\n  const openNotificationWithIcon = (type) => {\n    notification[type]({\n      message: \"ERROR\",\n      description:\n        \"An element already exists with that name. Element's names must be unique\",\n    });\n  };\n  //load data function ------------------------------------------------------------------\n  useEffect(() => {\n    const getModel = async () => {\n      await handleLoadingModalTrue();\n\n      const { data } = await viewModel(props.match.params.modelId);\n      setModel([data]);\n      await handleLoadingModalFalse();\n\n      if (fetchedModel === false) {\n        setFetchedModel(true);\n      }\n    };\n    getModel();\n  }, [fetchedModel]);\n\n  //Create Element functions ------------------------------------------------------------------\n  async function onFinish({ elementName }) {\n    await handleLoadingModalTrue();\n\n    const newElem = await createElement(\n      elementName,\n      props.match.params.modelId,\n      user._id\n    );\n    if (!newElem.data) {\n      await handleLoadingModalFalse();\n\n      openNotificationWithIcon(`warning`);\n    } else {\n      await handleLoadingModalFalse();\n\n      form.resetFields();\n      setFetchedModel(false);\n      handleModal();\n    }\n  }\n\n  function handleModal() {\n    setModalState(!modalState);\n    form.resetFields();\n  }\n\n  //Delete Element functions ------------------------------------------------------------------\n\n  function handleElementDeletionModal() {\n    setElementDeleteModal(!elementDeleteModal);\n  }\n\n  function setElementToDeleteF(elementName) {\n    setElementToDelete(elementName);\n  }\n\n  async function confirmDeleteElement() {\n    await handleLoadingModalTrue();\n    await deleteElement(elementToDelete, props.match.params.modelId, user._id);\n    await handleLoadingModalFalse();\n    setFetchedModel(false);\n    handleElementDeletionModal();\n  }\n  // Data Creation functions ------------------------------------------------------------------\n  function handleDataCreationModal() {\n    setDataCreationModal(!dataCreationModal);\n    dataForm.resetFields();\n  }\n  async function onFinishData(value) {\n    await handleLoadingModalTrue();\n\n    await addSingle(value, props.match.params.modelId, elementName, user._id);\n    await handleLoadingModalFalse();\n\n    setFetchedModel(false);\n    dataForm.resetFields();\n    handleDataCreationModal();\n  }\n  //Delete Data functions ------------------------------------------------------------------\n\n  async function deleteElementModal(elementNameN, valueIdN) {\n    await setElementName(elementNameN);\n    await setValueId(valueIdN);\n    handleDeleteElementModal();\n  }\n\n  async function setElementNameF(elementNameN) {\n    setElementName(elementNameN);\n  }\n\n  function handleDeleteElementModal() {\n    setDeleteModalState(!deleteModalState);\n    form.resetFields();\n  }\n  async function deleteWithConfirmation() {\n    await handleLoadingModalTrue();\n    await deleteSingleData(\n      props.match.params.modelId,\n      elementName,\n      valueId,\n      user._id\n    );\n    await handleLoadingModalFalse();\n    setFetchedModel(false);\n    form.resetFields();\n\n    handleDeleteElementModal();\n  }\n  //Update Data functions ------------------------------------------------------------------\n\n  async function updateElementModal(elementNameN, valueIdN, dataValue) {\n    await setElementName(elementNameN);\n    await setValueId(valueIdN);\n    await setDataValue(dataValue);\n  }\n  function handleDataUpdateModal() {\n    setDataUpdateModal(!dataUpdateModal);\n    updateDataForm.resetFields();\n  }\n  async function onFinishUpdateData(value) {\n    await handleLoadingModalTrue();\n    await updateSingle(\n      props.match.params.modelId,\n      elementName,\n      valueId,\n      value,\n      user._id\n    );\n    await handleLoadingModalFalse();\n    setFetchedModel(false);\n    handleDataUpdateModal();\n  }\n\n  //loading modal ------------------------------------------------------------------\n  async function handleLoadingModalTrue() {\n    await setLoadingModal(true);\n  }\n  async function handleLoadingModalFalse() {\n    await setLoadingModal(false);\n  }\n\n  return user ? (\n    model ? (\n      <div>\n        <center>\n          <LoadingModal\n            loadingModal={loadingModal}\n            handleLoadingModalFalse={handleLoadingModalFalse}\n          />\n          <CreateElementFormModal\n            modalState={modalState}\n            handleModal={handleModal}\n            form={form}\n            onFinish={onFinish}\n            loadingModal={loadingModal}\n          />\n\n          <ElementDeleteFormModal\n            elementDeleteModal={elementDeleteModal}\n            handleElementDeletionModal={handleElementDeletionModal}\n            elementToDelete={elementToDelete}\n            confirmDeleteElement={confirmDeleteElement}\n            loadingModal={loadingModal}\n          />\n          <DataCreateFormModal\n            dataCreationModal={dataCreationModal}\n            handleDataCreationModal={handleDataCreationModal}\n            dataForm={dataForm}\n            onFinishData={onFinishData}\n            loadingModal={loadingModal}\n          />\n          <DataDeleteFormModal\n            deleteModalState={deleteModalState}\n            handleDeleteElementModal={handleDeleteElementModal}\n            deleteWithConfirmation={deleteWithConfirmation}\n            loadingModal={loadingModal}\n          />\n          <DataUpdateFormModal\n            dataUpdateModal={dataUpdateModal}\n            handleDataUpdateModal={handleDataUpdateModal}\n            dataValue={dataValue}\n            updateDataForm={updateDataForm}\n            onFinishUpdateData={onFinishUpdateData}\n            loadingModal={loadingModal}\n          />\n          <ElementsHeader props={props} handleModal={handleModal} />\n          <div style={{ margin: \"20px\" }}>\n            <ElementsBody\n              model={model}\n              props={props}\n              updateElementModal={updateElementModal}\n              handleDataUpdateModal={handleDataUpdateModal}\n              deleteElementModal={deleteElementModal}\n              handleDataCreationModal={handleDataCreationModal}\n              setElementNameF={setElementNameF}\n              setElementToDeleteF={setElementToDeleteF}\n              handleElementDeletionModal={handleElementDeletionModal}\n            />\n          </div>\n        </center>\n      </div>\n    ) : (\n      <p style={{ textAlign: \"center\", fontSize: \"3rem\" }}>\n        Loading... <Spin size=\"large\" />{\" \"}\n      </p>\n    )\n  ) : (\n    <Redirect to=\"/\" />\n  );\n};\n\nexport default Model;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport LayoutApp from \"./components/LayoutApp\";\nimport Signup from \"./pages/Signup\";\nimport Login from \"./pages/Login\";\nimport Home from \"./pages/Home\";\nimport Profile from \"./pages/Profile\";\nimport Project from \"./pages/Project\";\nimport Model from \"./pages/Model\";\n\nconst router = () => {\n  return (\n    <Router>\n      <LayoutApp>\n        <Switch>\n          <Route component={Home} path=\"/\" exact />\n          <Route component={Login} path=\"/login\" />\n          <Route component={Signup} path=\"/signup\" />\n          <Route component={Profile} path=\"/profile\" />\n          <Route component={Project} path=\"/project/:projectName/:projectId\" />\n          <Route\n            component={Model}\n            path=\"/model/:modelName/:modelId/:projectName/:projectId\"\n          />\n        </Switch>\n      </LayoutApp>\n    </Router>\n  );\n};\n\nexport default router;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Router from \"./router.js\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"antd/dist/antd.css\";\nimport OurProvider from \"./context\";\n\nReactDOM.render(\n  // <React.StrictMode>\n  <OurProvider>\n    <Router />\n  </OurProvider>,\n  // </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}