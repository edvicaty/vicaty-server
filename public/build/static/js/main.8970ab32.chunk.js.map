{"version":3,"sources":["services/auth.js","context.js","components/LayoutApp.js","pages/Signup.js","pages/Login.js","pages/Home.js","services/backend.js","pages/Profile.js","pages/Project.js","services/api.js","pages/Model.js","router.js","serviceWorker.js","index.js"],"names":["baseURL","authService","axios","create","withCredentials","interceptors","response","use","error","signup","a","username","email","password","post","user","login","userData","data","getCurrentUser","get","logoutP","Context","createContext","OurProvider","children","useState","setuser","loginUser","useEffect","getSession","Provider","value","logout","Header","Layout","Content","Footer","LayoutApp","useContext","className","style","height","overflow","theme","width","position","right","mode","Item","key","to","onClick","textAlign","backgroundColor","color","marginTop","bottom","paddingBottom","Title","Typography","Signup","Text","history","Form","useForm","form","openNotificationWithIcon","type","notification","message","description","values","push","layout","onFinish","level","label","name","rules","required","Password","borderRadius","block","htmlType","contentStyle","lineHeight","background","Home","marginBottom","autoplay","userService","viewProjects","projects","createProject","projectName","newProject","deleteProject","projectId","console","log","delete","createModel","createdModelName","newModel","viewProject","project","editProject","put","duplicateProject","viewModel","modelId","model","editModel","deleteCreatedModel","Profile","setProjects","fetchedProjects","setFetchedProjects","updateForm","duplicateForm","modalState","setModalState","projectDeleteModal","setProjectDeleteModal","updateModalState","setUpdateModalState","projectToDelete","setProjectToDelete","projectToUpdate","setProjectToUpdate","duplicationModalState","setDuplicationModalState","projectToDuplicate","setProjectToDuplicate","resetFields","handleModal","handleDeleteProject","handleUpdateModal","handleDuplicationModal","getProjects","title","visible","onOk","onCancel","initialValue","margin","paddingLeft","paddingRight","toUpperCase","_id","gutter","map","xs","sm","md","lg","bordered","created_at","slice","updated_at","Panel","Collapse","Project","props","setProject","updateModelForm","fetchedProject","setFetchedProject","modelDeleteModal","setModelDeleteModal","modelToDelete","setModelToDelete","modelUpdateModal","setModelUpdateModal","modelToUpdate","setModelToUpdate","match","params","handleDeleteModal","handleModelUpdateModal","getProject","modelName","deleteModelConfirmed","createdModels","borderTop","header","Object","entries","api","object","reqType","route","body","createElement","elementName","userId","updatedModel","addSingle","updatedElement","deleteSingleData","dataId","updateSingle","Model","setModel","dataForm","updateDataForm","fetchedModel","setFetchedModel","dataCreationModal","setDataCreationModal","setElementName","deleteModalState","setDeleteModalState","valueId","setValueId","dataUpdateModal","setDataUpdateModal","dataValue","setDataValue","handleDataCreationModal","elementNameN","deleteElementModal","valueIdN","handleDeleteElementModal","handleDataUpdateModal","getModel","fontSize","marginLeft","elements","element","currentElement","setElementNameF","entry","id","updateElementModal","router","component","path","exact","Login","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"sSACIA,EAAU,6BAETA,EAAU,oCAGf,IAAMC,EAAcC,IAAMC,OAAO,CAC/BH,UACAI,iBAAiB,IAGnBH,EAAYI,aAAaC,SAASC,KAChC,SAACD,GACC,OAAOA,KAET,SAACE,GACC,OAAOA,KAIJ,IAAMC,EAAM,uCAAG,mCAAAC,EAAA,6DAASC,EAAT,EAASA,SAAUC,EAAnB,EAAmBA,MAAOC,EAA1B,EAA0BA,SAA1B,SACDZ,EAAYa,KAAK,UAAW,CAC7CH,WACAE,WACAD,UAJkB,cACdG,EADc,yBAMbA,GANa,2CAAH,sDASNC,EAAK,uCAAG,WAAOC,GAAP,iBAAAP,EAAA,sEACUT,EAAYa,KAAK,SAAUG,GADrC,uBACLF,EADK,EACXG,KADW,kBAEZH,GAFY,2CAAH,sDAKLI,EAAc,uCAAG,8BAAAT,EAAA,sEACCT,EAAYmB,IAAI,gBADjB,uBACdL,EADc,EACpBG,KADoB,kBAErBH,GAFqB,2CAAH,qDAKdM,EAAO,uCAAG,sBAAAX,EAAA,sEACfT,EAAYmB,IAAI,WADD,2CAAH,qDCpCPE,EAAUC,0BAER,SAASC,EAAT,GAAoC,IAAbC,EAAY,EAAZA,SAAY,EACxBC,mBAAS,MADe,mBACzCX,EADyC,KACnCY,EADmC,KAahD,SAASC,EAAUb,GACjBY,EAAQZ,GAMV,OAjBAc,qBAAU,WAAM,4CACd,8BAAAnB,EAAA,sEACyBS,IADzB,iBAEE,QADQJ,EADV,EACUA,YACR,IAAIA,OAAJ,EAAIA,EAAMJ,WACRiB,EAAUb,GAHd,4CADc,uBAAC,WAAD,wBAOde,KACC,IAUD,kBAACR,EAAQS,SAAT,CACEC,MAAO,CACLjB,OACAa,YACAK,OATN,WACEN,EAAQ,SAULF,G,IC1BCS,EAA4BC,IAA5BD,OAAQE,EAAoBD,IAApBC,QAASC,EAAWF,IAAXE,OAwEVC,EAvEG,SAAC,GAAkB,IAAhBb,EAAe,EAAfA,SAAe,EACTc,qBAAWjB,GAA5BP,EAD0B,EAC1BA,KAAMkB,EADoB,EACpBA,OADoB,4CAGlC,sBAAAvB,EAAA,sEACQW,IADR,OAEEY,IAFF,4CAHkC,sBAUlC,OACE,kBAAC,IAAD,CACEO,UAAU,SACVC,MAAO,CACLC,OAAQ,QAERC,SAAU,SAEZ,kBAACT,EAAD,KACE,kBAAC,IAAD,CACEU,MAAM,QACNH,MAAO,CAAEI,MAAO,QAASC,SAAU,WAAYC,MAAO,KACtDC,KAAK,cACL,kBAAC,IAAKC,KAAN,CAAWC,IAAI,KACb,kBAAC,IAAD,CAAMC,GAAG,KAAT,SAGDpC,EACC,oCACE,kBAAC,IAAKkC,KAAN,CAAWC,IAAI,KACb,kBAAC,IAAD,CAAMC,GAAG,YAAT,YAEF,kBAAC,IAAKF,KAAN,CAAWG,QAhCW,2CAgCSF,IAAI,KAAnC,WAKF,oCACE,kBAAC,IAAKD,KAAN,CAAWC,IAAI,KACb,kBAAC,IAAD,CAAMC,GAAG,UAAT,UAEF,kBAAC,IAAKF,KAAN,CAAWC,IAAI,KACb,kBAAC,IAAD,CAAMC,GAAG,WAAT,cAMV,kBAACf,EAAD,KACE,6BACA,6BACCX,GAEH,kBAACY,EAAD,CACEI,MAAO,CACLY,UAAW,SACXC,gBAAiB,QACjBC,MAAO,QACPC,UAAW,OACXd,OAAQ,OACRI,SAAU,QACVW,OAAQ,IACRC,cAAe,OACfb,MAAO,UAVX,0B,4CCvDEc,EAAgBC,IAAhBD,MAgEOE,GAhESD,IAATE,KAEA,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAAc,EACfC,IAAKC,UAAbC,EADuB,oBAEtBnD,EAASwB,qBAAWjB,GAApBP,KACFoD,EAA2B,SAACC,GAChCC,IAAaD,GAAM,CACjBE,QAAS,QACTC,YAAa,6BANa,4CAU9B,WAAwBC,GAAxB,SAAA9D,EAAA,sEACqBD,EAAO+D,GAD5B,cAEYtD,KAGR6C,EAAQU,KAAK,UAFbN,EAAyB,WAH7B,4CAV8B,sBAmB9B,OAAQpD,EAuCN,kBAAC,IAAD,CAAUoC,GAAG,aAtCb,kBAAC,IAAD,CAAMuB,OAAO,WAAWR,KAAMA,EAAMS,SApBR,6CAqB1B,kBAAChB,EAAD,CAAOiB,MAAO,GAAd,kBAEA,kBAAC,IAAK3B,KAAN,CACE4B,MAAM,YACNC,KAAK,WACLC,MAAO,CAAC,CAAEC,UAAU,EAAMV,QAAS,kCACnC,kBAAC,IAAD,OAEF,kBAAC,IAAKrB,KAAN,CACE4B,MAAM,SACNC,KAAK,QACLC,MAAO,CAAC,CAAEC,UAAU,EAAMV,QAAS,kCACnC,kBAAC,IAAD,OAEF,kBAAC,IAAKrB,KAAN,CACE4B,MAAM,WACNC,KAAK,WACLC,MAAO,CAAC,CAAEC,UAAU,EAAMV,QAAS,iCACnC,kBAAC,IAAMW,SAAP,OAGF,kBAAC,IAAKhC,KAAN,KACE,kBAAC,IAAD,CAEER,MAAO,CACLe,UAAW,OACXF,gBAAiB,UACjBC,MAAO,QACP2B,aAAc,QAEhBC,OAAK,EACLC,SAAS,UATX,cC5CAzB,EAAgBC,IAAhBD,MA2DOE,GA3DSD,IAATE,KAEA,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAAc,EACfC,IAAKC,UAAbC,EADuB,sBAEF3B,qBAAWjB,GAA/BP,EAFsB,EAEtBA,KAAMa,EAFgB,EAEhBA,UACRuC,EAA2B,SAACC,GAChCC,IAAaD,GAAM,CACjBE,QAAS,QACTC,YAAa,gCANa,4CAU9B,WAAwBC,GAAxB,eAAA9D,EAAA,sEACqBM,EAAMwD,GAD3B,QACQzD,EADR,SAKIa,EAAUb,GACVgD,EAAQU,KAAK,aAHbN,EAAyB,WAH7B,4CAV8B,sBAoB9B,OAAQpD,EAiCN,kBAAC,IAAD,CAAUoC,GAAG,aAhCb,kBAAC,IAAD,CAAMuB,OAAO,WAAWR,KAAMA,EAAMS,SArBR,6CAsB1B,kBAAC,EAAD,CAAOC,MAAO,GAAd,SACA,kBAAC,IAAK3B,KAAN,CACE4B,MAAM,YACNC,KAAK,WACLC,MAAO,CAAC,CAAEC,UAAU,EAAMV,QAAS,kCACnC,kBAAC,IAAD,OAEF,kBAAC,IAAKrB,KAAN,CACEmB,KAAK,WACLS,MAAM,WACNC,KAAK,WACLC,MAAO,CAAC,CAAEC,UAAU,EAAMV,QAAS,iCACnC,kBAAC,IAAMW,SAAP,OAGF,kBAAC,IAAKhC,KAAN,KACE,kBAAC,IAAD,CAEER,MAAO,CACLe,UAAW,OACXF,gBAAiB,UACjBC,MAAO,QACP2B,aAAc,QAEhBC,OAAK,EACLC,SAAS,UATX,a,SC3CFC,EAAe,CACnB3C,OAAQ,QACRa,MAAO,OACP+B,WAAY,QACZjC,UAAW,SACXkC,WAAY,kDAEN5B,EAAgBC,IAAhBD,MAAOG,EAASF,IAATE,KA+BA0B,EA9BF,WACX,OACE,6BACE,oCACE,gCACE,yBAAK/C,MAAO,CAAEI,MAAO,OAAQ4C,aAAc,SACzC,kBAAC,EAAD,CAAOb,MAAO,GAAd,WACA,kBAAC,EAAD,wCAEF,kBAAC,IAAD,CAAUc,UAAQ,GAChB,6BACE,wBAAIjD,MAAO4C,GAAX,gBAEF,6BACE,wBAAI5C,MAAO4C,GAAX,+BAEF,6BACE,wBAAI5C,MAAO4C,GAAX,uCAEF,6BACE,wBAAI5C,MAAO4C,GAAX,qBAIN,gC,kCClCJrF,EAAU,6BAETA,EAAU,oCAGf,IAAM2F,EAAczF,IAAMC,OAAO,CAC/BH,UACAI,iBAAiB,IAEnBuF,EAAYtF,aAAaC,SAASC,KAChC,SAACD,GACC,OAAOA,KAET,SAACE,GACC,OAAOA,KAIJ,IAAMoF,EAAY,uCAAG,4BAAAlF,EAAA,sEACHiF,EAAYvE,IAAI,KADb,cACpByE,EADoB,yBAEnBA,GAFmB,2CAAH,qDAIZC,EAAa,uCAAG,+BAAApF,EAAA,6DAASqF,EAAT,EAASA,YAAT,SACFJ,EAAY7E,KAAK,IAAK,CAC7CiF,gBAFyB,cACrBC,EADqB,yBAIpBA,GAJoB,2CAAH,sDAMbC,EAAa,uCAAG,WAAOC,GAAP,eAAAxF,EAAA,6DAC3ByF,QAAQC,IAAR,SAAsBF,GADK,SAELP,EAAYU,OAAZ,mBAA+BH,IAF1B,cAErB5B,EAFqB,OAG3B6B,QAAQC,IAAR,YAAyB9B,GAHE,kBAIpBA,GAJoB,2CAAH,sDAMbgC,EAAW,uCAAG,WAAOC,EAAkBL,EAAW3B,GAApC,eAAA7D,EAAA,sEACFiF,EAAY7E,KAAZ,iBAA2BoF,GAAa,CAC7DK,mBACAhC,gBAHuB,cACnBiC,EADmB,yBAKlBA,GALkB,2CAAH,0DAQXC,EAAW,uCAAG,WAAOP,GAAP,eAAAxF,EAAA,sEACHiF,EAAYvE,IAAZ,mBAA4B8E,IADzB,cACnBQ,EADmB,yBAElBA,GAFkB,2CAAH,sDAKXC,GAAW,uCAAG,WAAOT,EAAWH,GAAlB,eAAArF,EAAA,sEACHiF,EAAYiB,IAAZ,mBAA4BV,GAAa,CAC7DH,gBAFuB,cACnBW,EADmB,yBAIlBA,GAJkB,2CAAH,wDAOXG,GAAgB,uCAAG,WAAOX,EAAWH,GAAlB,eAAArF,EAAA,sEACRiF,EAAY7E,KAAZ,4BAAsCoF,GAAa,CACvEH,gBAF4B,cACxBW,EADwB,yBAIvBA,GAJuB,2CAAH,wDAOhBI,GAAS,uCAAG,WAAOC,GAAP,eAAArG,EAAA,sEACHiF,EAAYvE,IAAZ,iBAA0B2F,IADvB,cACjBC,EADiB,yBAEhBA,GAFgB,2CAAH,sDAKTC,GAAS,uCAAG,WAAOF,EAASR,EAAkBhC,GAAlC,eAAA7D,EAAA,sEACHiF,EAAYiB,IAAZ,iBAA0BG,GAAW,CACvDR,mBACAhC,gBAHqB,cACjByC,EADiB,yBAKhBA,GALgB,2CAAH,0DAOTE,GAAkB,uCAAG,WAAOH,GAAP,eAAArG,EAAA,sEACViF,EAAYU,OAAZ,iBAA6BU,IADnB,cAC1BzC,EAD0B,yBAEzBA,GAFyB,2CAAH,sDC3DvBX,GAAgBC,IAAhBD,MA6UOwD,IA7USvD,IAATE,KAEC,WAAO,IAAD,EACQvB,qBAAWjB,GAA/BP,EADY,EACZA,KADY,KACNa,UACkBF,mBAAS,OAFrB,mBAEbmE,EAFa,KAEHuB,EAFG,OAG0B1F,oBAAS,GAHnC,mBAGb2F,EAHa,KAGIC,EAHJ,OAILtD,IAAKC,UAAbC,EAJa,sBAKCF,IAAKC,UAAnBsD,EALa,sBAMIvD,IAAKC,UAAtBuD,EANa,sBAOgB9F,oBAAS,GAPzB,mBAOb+F,EAPa,KAODC,EAPC,OAQgChG,oBAAS,GARzC,mBAQbiG,EARa,KAQOC,EARP,OAS4BlG,oBAAS,GATrC,mBASbmG,EATa,KASKC,EATL,OAU0BpG,mBAAS,MAVnC,mBAUbqG,EAVa,KAUIC,EAVJ,OAW0BtG,mBAAS,QAXnC,mBAWbuG,EAXa,KAWIC,EAXJ,QAasCxG,oBAAS,GAb/C,qBAabyG,GAba,MAaUC,GAbV,SAcgC1G,mBAAS,QAdzC,qBAcb2G,GAda,MAcOC,GAdP,oDA2BpB,WAAwB9D,GAAxB,SAAA9D,EAAA,sDACEoF,EAActB,GACd8C,GAAmB,GACnBpD,EAAKqE,cACLC,KAJF,4CA3BoB,sBAkCpB,SAASA,KACPd,GAAeD,GAGjB,SAASgB,KACPb,GAAuBD,GAazB,SAASe,KACPZ,GAAqBD,GACrBN,EAAWgB,cAeb,SAASI,KACPP,IAA0BD,IAC1BX,EAAce,cAvEI,8CA0EpB,WAAmC/D,GAAnC,SAAA9D,EAAA,sEACQmG,GAAiBwB,GAAmBnC,UAAW1B,EAAOuB,aAD9D,OAEEyB,EAAce,cACdI,KACArB,GAAmB,GAJrB,4CA1EoB,sBAgBpBzF,qBAAU,YACS,uCAAG,8BAAAnB,EAAA,sEACKkF,IADL,gBACV1E,EADU,EACVA,KACRkG,EAAYlG,IACY,IAApBmG,GACFC,GAAmB,GAJH,2CAAH,qDAOjBsB,KACC,CAACvB,IAsEJ,OAAOtG,EACL,6BACE,gCACE,kBAAC,IAAD,CACE8H,MAAM,4BACNC,QAASrB,EACTsB,KAAMP,GACNQ,SAAUR,IACV,kBAAC,IAAD,CAAM9D,OAAO,WAAWR,KAAMA,EAAMS,SAvGxB,8CAwGV,kBAAC,IAAK1B,KAAN,CACE4B,MAAM,sBACNC,KAAK,cACLC,MAAO,CAAC,CAAEC,UAAU,EAAMV,QAAS,0BACnC,kBAAC,IAAD,OAGF,kBAAC,IAAKrB,KAAN,KACE,kBAAC,IAAD,CACER,MAAO,CACLe,UAAW,OACXF,gBAAiB,UACjBC,MAAO,QACP2B,aAAc,QAEhBC,OAAK,EACLC,SAAS,UARX,aAcN,kBAAC,IAAD,CACEyD,MAAM,+BACNC,QAASjB,EACTkB,KAAML,GACNM,SAAUN,IACV,kBAAC,IAAD,CAAMhE,OAAO,WAAWR,KAAMqD,EAAY5C,SA3ElD,SAAwBH,GAGtBmC,GAAYsB,EAAgB/B,UAAW1B,EAAOuB,aAC9CwB,EAAWgB,cACXG,KACApB,GAAmB,KAsEX,kBAAC,IAAKrE,KAAN,CACEgG,aAAchB,EAAgBlC,YAC9BlB,MAAM,sBACNC,KAAK,cACLC,MAAO,CACL,CAAEC,UAAU,EAAMV,QAAS,iCAE7B,kBAAC,IAAD,OAGF,kBAAC,IAAKrB,KAAN,KACE,kBAAC,IAAD,CACER,MAAO,CACLe,UAAW,OACXF,gBAAiB,UACjBC,MAAO,QACP2B,aAAc,QAEhBC,OAAK,EACLC,SAAS,UARX,aAcN,kBAAC,IAAD,CACEyD,MAAK,iCAA4BR,GAAmBtC,aACpD+C,QAASX,GACTY,KAAMJ,GACNK,SAAUL,IACV,kBAAC,IAAD,CACEjE,OAAO,WACPR,KAAMsD,EACN7C,SArKU,8CAsKV,kBAAC,IAAK1B,KAAN,CACEgG,aAAcZ,GAAmBtC,YACjClB,MAAM,mBACNC,KAAK,cACLC,MAAO,CACL,CAAEC,UAAU,EAAMV,QAAS,iCAE7B,kBAAC,IAAD,OAGF,kBAAC,IAAKrB,KAAN,KACE,kBAAC,IAAD,CACER,MAAO,CACLe,UAAW,OACXF,gBAAiB,UACjBC,MAAO,QACP2B,aAAc,QAEhBC,OAAK,EACLC,SAAS,UARX,gBAcN,kBAAC,IAAD,CACEyD,MAAM,gDACNC,QAASnB,EACToB,KAAMN,GACNO,SAAUP,IACV,kBAAC,IAAD,CACEhG,MAAO,CACLyG,OAAQ,SACR5F,gBAAiB,MACjBC,MAAO,SAET4B,OAAK,EACL/B,QAAS,WA9JD6C,EAAc8B,GAC9BT,GAAmB,GACnBmB,OAqJM,WAaF,yBACEhG,MAAO,CACLI,MAAO,QACPsG,YAAa,OACbC,aAAc,OACd5F,UAAW,OACX+B,WAAY,iDAEZhC,MAAO,QACP2B,aAAc,QAEhB,kBAAC,GAAD,CAAOzC,MAAO,CAAEc,MAAO,SAAWqB,MAAO,GACtC7D,EAAKJ,SAAS0I,cADjB,sBAEE,wCAActI,EAAKuI,MAErB,wBAAI7G,MAAO,CAAEc,MAAO,UAApB,4GAIA,kBAAC,IAAD,CACEd,MAAO,CACLyG,OAAQ,SACR5F,gBAAiB,QACjBC,MAAO,WAETH,QAASoF,GACTrD,OAAK,GAPP,+BAWF,yBAAK1C,MAAO,CAAEyG,OAAQ,SACpB,kBAAC,IAAD,CAAKK,OAAQ,CAAC,GAAI,KAAlB,OACG1D,QADH,IACGA,OADH,EACGA,EAAU2D,KAAI,SAAC9C,GACd,OACE,kBAAC,IAAD,CAAKxD,IAAKwD,EAAQ4C,IAAKG,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACjD,kBAAC,IAAD,CACEf,MAAOnC,EAAQX,YACf8D,UAAU,EACVpH,MAAO,CAAEI,MAAO,MAChB,kBAAC,IAAD,CACEJ,MAAO,CACLyG,OAAQ,SACR5F,gBAAiB,QACjBC,MAAO,WAETH,QAAO,sBAAE,sBAAA1C,EAAA,sEACD6G,EAAWgB,cADV,uBA7MAxC,EAgNLW,EAAQX,YAhNUG,EAiNlBQ,EAAQ4C,SAhN9BpB,EAAmB,CAAEnC,YAAaA,EAAaG,UAAWA,IA4M/B,OAMPwC,KANO,iCA7M7B,IAA6B3C,EAAaG,IA6Mb,OAQTf,OAAK,GAdP,yBAiBA,kBAAC,IAAD,CACE1C,MAAO,CACLyG,OAAQ,SACR5F,gBAAiB,QACjBC,MAAO,WAETH,QAAO,sBAAE,sBAAA1C,EAAA,sEACD8G,EAAce,cADb,uBA9MGxC,EAiNRW,EAAQX,YAjNaG,EAkNrBQ,EAAQ4C,SAjN9BhB,GAAsB,CAAEvC,YAAaA,EAAaG,UAAWA,IA6MlC,OAMPyC,KANO,iCA9M7B,IAAgC5C,EAAaG,IA8MhB,OAQTf,OAAK,GAdP,qBAiBA,2BACE,+CADF,IACgCuB,EAAQ4C,KAExC,2BACE,kDAAgC,IAC/B5C,EAAQoD,WAAWC,MAAM,EAAG,KAE/B,2BACE,iDAA+B,IAC9BrD,EAAQsD,WAAWD,MAAM,EAAG,KAE/B,kBAAC,IAAD,CACEtH,MAAO,CACLyG,OAAQ,SACR5F,gBAAiB,UACjBC,MAAO,SAET4B,OAAK,GACL,kBAAC,IAAD,CACEhC,GAAE,mBAAcuD,EAAQX,YAAtB,YAAqCW,EAAQ4C,MADjD,kBAKF,kBAAC,IAAD,CACE7G,MAAO,CACLyG,OAAQ,SACR5F,gBAAiB,MACjBC,MAAO,SAET4B,OAAK,EACL/B,QAAS,WA/Q7B,IAAqB8C,IAgRaQ,EAAQ4C,IA/QxCtB,EAAmB9B,GAgRCuC,OATJ,mBAsBhB,kBAAC,IAAD,CAAUtF,GAAG,Q,UChUTQ,GAAgBC,IAAhBD,MACAsG,IADgBrG,IAATE,KACGoG,KAAVD,OAyVOE,GAvVC,SAACC,GAAW,IAAD,EACG7H,qBAAWjB,GAA/BP,EADiB,EACjBA,KADiB,KACXa,UACgBF,mBAAS,OAFd,mBAElBgF,EAFkB,KAET2D,EAFS,OAGVrG,IAAKC,UAAbC,EAHkB,sBAICF,IAAKC,UAAxBqG,EAJkB,sBAKmB5I,oBAAS,GAL5B,mBAKlB6I,EALkB,KAKFC,EALE,OAMW9I,oBAAS,GANpB,mBAMlB+F,EANkB,KAMNC,EANM,OAOuBhG,oBAAS,GAPhC,mBAOlB+I,EAPkB,KAOAC,EAPA,OAQiBhJ,mBAAS,MAR1B,mBAQlBiJ,EARkB,KAQHC,EARG,OASuBlJ,oBAAS,GAThC,mBASlBmJ,EATkB,KASAC,EATA,OAUiBpJ,oBAAS,GAV1B,mBAUlBqJ,EAVkB,KAUHC,EAVG,iDAyBzB,+BAAAtK,EAAA,sDAA0B6F,EAA1B,EAA0BA,iBAAkBhC,EAA5C,EAA4CA,YAC1C+B,EAAYC,EAAkB6D,EAAMa,MAAMC,OAAOhF,UAAW3B,GAC5DiG,GAAkB,GAClBhC,IAHF,4CAzByB,sBA+BzB,SAASA,IACPd,GAAeD,GAEjB,SAAS0D,IACPT,GAAqBD,GAmBvB,SAASW,IACPN,GAAqBD,GACrBP,EAAgB/B,cA3ClB1G,qBAAU,YACQ,uCAAG,8BAAAnB,EAAA,sEACM+F,EAAY2D,EAAMa,MAAMC,OAAOhF,WADrC,gBACThF,EADS,EACTA,KACRmJ,EAAWnJ,IACY,IAAnBqJ,GACFC,GAAkB,GAJH,2CAAH,qDAOhBa,KACC,CAACd,IAyDJ,OAAOxJ,EACL2F,EACE,6BACE,gCACE,kBAAC,IAAD,CACEmC,MAAM,mBACNC,QAASrB,EACTsB,KAAMP,EACNQ,SAAUR,GACV,kBAAC,IAAD,CAAM9D,OAAO,WAAWR,KAAMA,EAAMS,SAxFrB,6CAyFb,kBAAC,IAAK1B,KAAN,CACE4B,MAAM,aACNC,KAAK,mBACLC,MAAO,CACL,CAAEC,UAAU,EAAMV,QAAS,6BAE7B,kBAAC,IAAD,OAEF,kBAAC,IAAKrB,KAAN,CACE4B,MAAM,6BACNC,KAAK,cACLC,MAAO,CACL,CACEC,UAAU,EACVV,QAAS,6CAGb,kBAAC,IAAD,OAGF,kBAAC,IAAKrB,KAAN,KACE,kBAAC,IAAD,CACER,MAAO,CACLe,UAAW,OACXF,gBAAiB,UACjBC,MAAO,QACP2B,aAAc,QAEhBC,OAAK,EACLC,SAAS,UARX,aAcN,kBAAC,IAAD,CACEyD,MAAM,eACNC,QAAS+B,EACT9B,KAAMqC,EACNpC,SAAUoC,GACV,kBAAC,IAAD,CACE1G,OAAO,WACPR,KAAMoG,EACN3F,SA1EZ,SAAwBH,GACtByC,GAAU8D,EAAchE,QAASvC,EAAO8G,UAAW9G,EAAOD,aAC1D+F,EAAgB/B,cAChB6C,IACAZ,GAAkB,KAuER,kBAAC,IAAKvH,KAAN,CACEgG,aAAc8B,EAAcO,UAC5BzG,MAAM,aACNC,KAAK,YACLC,MAAO,CACL,CAAEC,UAAU,EAAMV,QAAS,+BAE7B,kBAAC,IAAD,OAEF,kBAAC,IAAKrB,KAAN,CACEgG,aAAc8B,EAAcxG,YAC5BM,MAAM,oBACNC,KAAK,cACLC,MAAO,CACL,CACEC,UAAU,EACVV,QAAS,sCAGb,kBAAC,IAAD,OAGF,kBAAC,IAAKrB,KAAN,KACE,kBAAC,IAAD,CACER,MAAO,CACLe,UAAW,OACXF,gBAAiB,UACjBC,MAAO,QACP2B,aAAc,QAEhBC,OAAK,EACLC,SAAS,UARX,aAcN,kBAAC,IAAD,CACEyD,MAAM,8CACNC,QAAS2B,EACT1B,KAAMoC,EACNnC,SAAUmC,GACV,kBAAC,IAAD,CACE1I,MAAO,CACLyG,OAAQ,SACR5F,gBAAiB,MACjBC,MAAO,SAET4B,OAAK,EACL/B,QAAS,YA9IrB,WACE+C,QAAQC,IAAIuE,GACZ,IAAMrG,EAAU4C,GAAmByD,GACnCxE,QAAQC,IAAI9B,GACZkG,GAAkB,GAClBW,IA0IYI,KARJ,WAaF,yBACE9I,MAAO,CACLI,MAAO,QACPsG,YAAa,OACbC,aAAc,OACd5F,UAAW,OACX+B,WAAY,iDAEZhC,MAAO,UAET,kBAAC,GAAD,CAAOd,MAAO,CAAEc,MAAO,SAAWqB,MAAO,GACtCwF,EAAMa,MAAMC,OAAOnF,YADtB,aAGA,kBAAC,GAAD,CAAOtD,MAAO,CAAEc,MAAO,SAAWqB,MAAO,GACtCwF,EAAMa,MAAMC,OAAOnF,YADtB,aAGA,wBAAItD,MAAO,CAAEc,MAAO,UAApB,wDAEG6G,EAAMa,MAAMC,OAAOnF,YAFtB,8CAKA,kBAAC,IAAD,CACEtD,MAAO,CACLyG,OAAQ,SACR5F,gBAAiB,QACjBC,MAAO,WAETH,QAASoF,EACTrD,OAAK,GAPP,sBAWF,yBAAK1C,MAAO,CAAEyG,OAAQ,SACnBxC,EAAQ,GAAG8E,cAAchC,KAAI,SAACxC,GAC7B,OACE,kBAAC,IAAD,CACE9D,IAAK8D,EAAMsC,IACXT,MAAO7B,EAAMT,iBACbsD,UAAU,EACVpH,MAAO,CACLgD,aAAc,OACdgG,UAAW,sBAEb,2BACE,sDADF,IACuCzE,EAAMzC,aAE7C,kBAAC,IAAD,CACE9B,MAAO,CACLyG,OAAQ,SACR5F,gBAAiB,QACjBC,MAAO,UACPV,MAAO,QAETO,QAAO,sBAAE,sBAAA1C,EAAA,sEACD4J,EAAgB/B,cADf,uBAlMA+C,EAqMLtE,EAAMT,iBArMUQ,EAsMhBC,EAAMsC,IAtMmB/E,EAuMzByC,EAAMzC,iBAtM1ByG,EAAiB,CACfM,UAAWA,EACXvE,QAASA,EACTxC,YAAaA,IA8LU,OAOP6G,IAPO,iCAlM3B,IAA2BE,EAAWvE,EAASxC,IAkMpB,OASTY,OAAK,GAhBP,uCAmBA,2BACE,6CADF,IAC8B6B,EAAMsC,KAEpC,2BACE,kDAAgC,IAC/BtC,EAAM8C,WAAWC,MAAM,EAAG,KAE7B,2BACE,iDAA+B,IAC9B/C,EAAMgD,WAAWD,MAAM,EAAG,KAE7B,kBAAC,IAAD,CACEtH,MAAO,CACLI,MAAO,OACPqG,OAAQ,SACR5F,gBAAiB,UACjBC,MAAO,UAET,kBAAC,IAAD,CAAMJ,GAAE,iBAAY6D,EAAMT,iBAAlB,YAAsCS,EAAMsC,MAApD,gBAIF,kBAAC,IAAD,CACE7G,MAAO,CACLI,MAAO,OACPqG,OAAQ,SACR5F,gBAAiB,MACjBC,MAAO,SAETH,QAAS,WArP3B,IAAmB2D,IAsPWC,EAAMsC,IArPlCsB,EAAiB7D,GAsPCoE,MATJ,UAaA,kBAAC,KAAD,CACE1I,MAAO,CACL8C,WACE,mDAEJ,kBAAC0E,GAAD,CAAOyB,OAAO,kBAAkBxI,IAAI,KACjCyI,OAAOC,QAAQ5E,EAAM6E,KAAKrC,KAAI,SAACsC,GAC9B,OACE,kBAAC,IAAD,CACErJ,MAAO,CACL8C,WACE,kDAEJrC,IAAK4I,EAAO,IACZ,2BACE,4BAAQrJ,MAAO,CAAEI,MAAO,SAAxB,qBACqB,KAEpBiJ,EAAO,IAEV,2BACE,4BAAQrJ,MAAO,CAAEI,MAAO,SAAxB,WACW,KAEViJ,EAAO,GAAGC,SAEb,2BACE,4BAAQtJ,MAAO,CAAEI,MAAO,SAAxB,WAAmD,IAClDiJ,EAAO,GAAGE,OAEb,2BACE,4BAAQvJ,MAAO,CAAEI,MAAO,SAAxB,yBACyB,KAExBiJ,EAAO,GAAGG,mBAcnC,sCAGF,kBAAC,IAAD,CAAU9I,GAAG,OC7WbnD,GAAU,6BAETA,GAAU,wCAGf,IAAM2F,GAAczF,IAAMC,OAAO,CAC/BH,WACAI,iBAAiB,IAEnBuF,GAAYtF,aAAaC,SAASC,KAChC,SAACD,GACC,OAAOA,KAET,SAACE,GACC,OAAOA,KAIJ,IAAM0L,GAAa,uCAAG,WAAOC,EAAapF,EAASqF,GAA7B,eAAA1L,EAAA,sEACAiF,GAAY7E,KAAZ,0BAAoCiG,GAAW,CACxEqF,SACAD,gBAHyB,cACrBE,EADqB,yBAKpBA,GALoB,2CAAH,0DAQbC,GAAS,uCAAG,aAAiBvF,EAASoF,EAAaC,GAAvC,iBAAA1L,EAAA,6DAASQ,EAAT,EAASA,KAAT,SACMyE,GAAY7E,KAAZ,6BACLiG,EADK,YACMoF,GACjC,CACEC,SACApK,MAAOd,IALY,cACjBqL,EADiB,yBAQhBA,GARgB,2CAAH,4DAWTC,GAAgB,uCAAG,WAC9BzF,EACAoF,EACAM,EACAL,GAJ8B,eAAA1L,EAAA,sEAMDiF,GAAY7E,KAAZ,gCACFiG,EADE,YACSoF,EADT,YACwBM,GACnD,CACEL,WAT0B,cAMxBG,EANwB,yBAYvBA,GAZuB,2CAAH,4DAyBhBG,GAAY,uCAAG,WAC1B3F,EACAoF,EACAM,EAH0B,EAK1BL,GAL0B,iBAAA1L,EAAA,6DAIlBsB,EAJkB,EAIxBd,KAJwB,SAOGyE,GAAYiB,IAAZ,gCACFG,EADE,YACSoF,EADT,YACwBM,GACnD,CACEL,SACApK,UAXsB,cAOpBuK,EAPoB,yBAcnBA,GAdmB,2CAAH,8DCtCjB5I,GAAgBC,IAAhBD,MACAsG,IADgBrG,IAATE,KACGoG,KAAVD,OA4YO0C,GA3YD,SAACvC,GAAW,IAAD,EACK7H,qBAAWjB,GAA/BP,EADe,EACfA,KADe,KACTa,UACYF,mBAAS,OAFZ,mBAEhBsF,EAFgB,KAET4F,EAFS,OAGR5I,IAAKC,UAAbC,EAHgB,sBAIJF,IAAKC,UAAjB4I,EAJgB,sBAKE7I,IAAKC,UAAvB6I,EALgB,sBAMiBpL,oBAAS,GAN1B,mBAMhBqL,EANgB,KAMFC,EANE,OAOatL,oBAAS,GAPtB,mBAOhB+F,EAPgB,KAOJC,EAPI,OAQ2BhG,oBAAS,GARpC,mBAQhBuL,EARgB,KAQGC,EARH,OASexL,mBAAS,MATxB,mBAShByK,EATgB,KASHgB,EATG,OAUyBzL,oBAAS,GAVlC,mBAUhB0L,EAVgB,KAUEC,EAVF,OAWO3L,mBAAS,MAXhB,mBAWhB4L,EAXgB,KAWPC,EAXO,OAYuB7L,oBAAS,GAZhC,mBAYhB8L,EAZgB,KAYCC,GAZD,QAaW/L,mBAAS,MAbpB,qBAahBgM,GAbgB,MAaLC,GAbK,SAciBjM,mBAAS,MAd1B,qBAejByC,IAfiB,YAeU,SAACC,GAChCC,IAAaD,GAAM,CACjBE,QAAS,QACTC,YACE,+EAnBiB,8CA6DvB,6BAAA7D,EAAA,6DAA0ByL,EAA1B,EAA0BA,YAA1B,SACwBD,GACpBC,EACA/B,EAAMa,MAAMC,OAAOnE,QACnBhG,EAAKuI,KAJT,cAMepI,MAGXgD,EAAKqE,cACLyE,GAAgB,GAChBxE,MAJArE,GAAyB,WAP7B,4CA7DuB,sBA4EvB,SAASqE,KACPd,GAAeD,GACfvD,EAAKqE,cAEP,SAASqF,KACPV,GAAsBD,GACtBJ,EAAStE,cAlFY,8CAoFvB,WAA4BvG,GAA5B,SAAAtB,EAAA,sDACE4L,GAAUtK,EAAOoI,EAAMa,MAAMC,OAAOnE,QAASoF,EAAapL,EAAKuI,KAE/D0D,GAAgB,GAChBH,EAAStE,cACTqF,KALF,4CApFuB,oEA2FvB,WAA+BC,GAA/B,SAAAnN,EAAA,sDACEyM,EAAeU,GADjB,4CA3FuB,+BA8FRC,GA9FQ,mFA8FvB,WAAkCD,EAAcE,GAAhD,SAAArN,EAAA,sEACQyM,EAAeU,GADvB,uBAEQN,EAAWQ,GAFnB,OAGEC,KAHF,4CA9FuB,sBAmGvB,SAASA,KACPX,GAAqBD,GACrBlJ,EAAKqE,cArGgB,8CAoHvB,WAAkCsF,EAAcE,EAAUL,GAA1D,SAAAhN,EAAA,sEACQyM,EAAeU,GADvB,uBAEQN,EAAWQ,GAFnB,uBAGQJ,GAAaD,GAHrB,4CApHuB,sBAyHvB,SAASO,KACPR,IAAoBD,GACpBV,EAAevE,cApGjB1G,qBAAU,YACM,uCAAG,8BAAAnB,EAAA,sEACQoG,GAAUsD,EAAMa,MAAMC,OAAOnE,SADrC,gBACP7F,EADO,EACPA,KACR0L,EAAS,CAAC1L,KAEW,IAAjB6L,GACFC,GAAgB,GALH,2CAAH,qDAQdkB,KACC,CAACnB,IAwHJ,OAAOhM,EACLiG,EACE,6BACE,gCACE,kBAAC,IAAD,CACE6B,MAAM,qBACNC,QAASrB,EACTsB,KAAMP,GACNQ,SAAUR,IACV,kBAAC,IAAD,CAAM9D,OAAO,WAAWR,KAAMA,EAAMS,SAlKvB,8CAmKX,kBAAC,IAAK1B,KAAN,CACE4B,MAAM,eACNC,KAAK,cACLC,MAAO,CACL,CAAEC,UAAU,EAAMV,QAAS,+BAE7B,kBAAC,IAAD,OAGF,kBAAC,IAAKrB,KAAN,KACE,kBAAC,IAAD,CACER,MAAO,CACLe,UAAW,OACXF,gBAAiB,UACjBC,MAAO,QACP2B,aAAc,QAEhBC,OAAK,EACLC,SAAS,UARX,aAcN,yBACE3C,MAAO,CACLI,MAAO,QACPsG,YAAa,OACbC,aAAc,OACd5F,UAAW,OACX+B,WAAY,iDAEZhC,MAAO,UAET,kBAAC,GAAD,CAAOd,MAAO,CAAEc,MAAO,SAAWqB,MAAO,GACtCwF,EAAMa,MAAMC,OAAOI,UADtB,eAGA,wBAAI7I,MAAO,CAAEc,MAAO,UAApB,0DAEG6G,EAAMa,MAAMC,OAAOI,UAFtB,4CAKA,kBAAC,IAAD,CACE7I,MAAO,CACLyG,OAAQ,SACR5F,gBAAiB,QACjBC,MAAO,WAETH,QAASoF,GACTrD,OAAK,GAPP,wBAWF,yBAAK1C,MAAO,CAAEyG,OAAQ,SACpB,kBAAC,IAAD,CAAKK,OAAQ,CAAC,GAAI,KAChB,kBAAC,IAAD,CACEV,MAAM,WACNC,QAASmE,EACTlE,KAAM6E,GACN5E,SAAU4E,IACV,kBAAC,IAAD,CAAMlJ,OAAO,WAAWR,KAAM2I,EAAUlI,SA/N/B,8CAgOP,kBAAC,IAAK1B,KAAN,CACE4B,MAAM,aACNC,KAAK,OACLC,MAAO,CACL,CACEC,UAAU,EACVV,QAAS,uBAGb,kBAAC,IAAD,OAGF,kBAAC,IAAKrB,KAAN,KACE,kBAAC,IAAD,CACER,MAAO,CACLe,UAAW,OACXF,gBAAiB,UACjBC,MAAO,QACP2B,aAAc,QAEhBE,SAAS,UAPX,eAaN,kBAAC,IAAD,CACEyD,MAAM,cACNC,QAASsE,EACTrE,KAAMiF,GACNhF,SAAUgF,IACV,kBAAC,GAAD,CAAOpJ,MAAO,GAAd,+CAGA,kBAAC,IAAD,CACEnC,MAAO,CACLe,UAAW,OACXF,gBAAiB,MACjBC,MAAO,QACP2B,aAAc,QAEhB9B,QAlKhB,WACE+C,QAAQC,IAAR,sBAAmC+F,EAAamB,GAChDd,GACEpC,EAAMa,MAAMC,OAAOnE,QACnBoF,EACAmB,EACAvM,EAAKuI,KAEP0D,GAAgB,GAChB9I,EAAKqE,cAELyF,MAwJc7I,OAAK,GARP,WAYF,kBAAC,IAAD,CACE0D,MAAM,cACNC,QAAS0E,EACTzE,KAAMkF,GACNjF,SAAUiF,IACV,kBAAC,GAAD,CAAOrJ,MAAO,GAAd,iBAEE,0BACEnC,MAAO,CACL0L,SAAU,SACV5K,MAAO,UACP6K,WAAY,SAEbV,KAGL,kBAAC,IAAD,CACEhJ,OAAO,WACPR,KAAM4I,EACNnI,SApKhB,SAA4B3C,GAC1B0K,GACEtC,EAAMa,MAAMC,OAAOnE,QACnBoF,EACAmB,EACAtL,EACAjB,EAAKuI,KAEP0D,GAAgB,GAChBiB,OA4Jc,kBAAC,IAAKhL,KAAN,CACE4B,MAAM,mBACNC,KAAK,OACLC,MAAO,CACL,CACEC,UAAU,EACVV,QAAS,uBAGb,kBAAC,IAAD,OAGF,kBAAC,IAAKrB,KAAN,KACE,kBAAC,IAAD,CACER,MAAO,CACLe,UAAW,OACXF,gBAAiB,UACjBC,MAAO,QACP2B,aAAc,QAEhBE,SAAS,SACTD,OAAK,GARP,aAcL6B,EAAM,GAAGqH,SAAS7E,KAAI,SAAC8E,GACtB,IAAIC,EAAiB5C,OAAOC,QAAQ0C,GAAS,GAAG,GAChD,OACE,kBAAC,IAAD,CACEzF,MAAK,wBAAmB8C,OAAOC,QAAQ0C,GAAS,GAAG,IACnDzE,UAAU,EACVpH,MAAO,CAAEI,MAAO,SAChBK,IAAKyI,OAAOC,QAAQ0C,GAAS,GAAG,IAChC,kBAAC,KAAD,KAGE,kBAAC,GAAD,CAAO5C,OAAO,YAAYxI,IAAI,KAC5B,kBAAC,IAAD,CACEE,QAAS,WACPwK,KA3UH,qCA4UGY,CAAgB7C,OAAOC,QAAQ0C,GAAS,GAAG,MAH/C,YAQA,kBAAC,GAAD,CAAO1J,MAAO,GAAd,kBACC+G,OAAOC,QAAQ0C,GAAS,GAAG,GAAGpN,KAAKsI,KAAI,SAACiF,GACvC,OACE,kBAAC,IAAD,CACE5F,MAAK,mBAAc4F,EAAMC,IACzB7E,UAAU,EACVpH,MAAO,CAAEI,MAAO,QAChBK,IAAKuL,EAAMC,IACVvI,QAAQC,IAAR,cAA2BqI,EAAMzM,OAClC,4CACA,+BAAKyM,EAAMzM,MAAX,KACA,kBAAC,IAAD,CACES,MAAO,CACLyG,OAAQ,SACR5F,gBAAiB,UACjBC,MAAO,SAETH,QAAS,YAlWhB,yCAmWSuL,CACEJ,EACAE,EAAMC,GACND,EAAMzM,OAERiM,OAZJ,UAgBA,kBAAC,IAAD,CACExL,MAAO,CACLyG,OAAQ,SACR5F,gBAAiB,QACjBC,MAAO,OAETH,QAAO,sBAAE,sBAAA1C,EAAA,sDACPoN,GAAmBS,EAAgBE,EAAMC,IADlC,4CANX,wBAwBxB,sCAGF,kBAAC,IAAD,CAAUvL,GAAG,OCvYFyL,GAjBA,WACb,OACE,kBAAC,IAAD,KACE,kBAAC,EAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,UAAWrJ,EAAMsJ,KAAK,IAAIC,OAAK,IACtC,kBAAC,IAAD,CAAOF,UAAWG,EAAOF,KAAK,WAC9B,kBAAC,IAAD,CAAOD,UAAWhL,EAAQiL,KAAK,YAC/B,kBAAC,IAAD,CAAOD,UAAW1H,GAAS2H,KAAK,aAChC,kBAAC,IAAD,CAAOD,UAAW1E,GAAS2E,KAAK,qCAChC,kBAAC,IAAD,CAAOD,UAAWlC,GAAOmC,KAAK,mCCRpBG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASnE,MACvB,2D,OCVNoE,IAASC,OAEP,kBAAC9N,EAAD,KACE,kBAAC,GAAD,OAGF+N,SAASC,eAAe,SDqHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAvP,GACL2F,QAAQ3F,MAAMA,EAAM8D,c","file":"static/js/main.8970ab32.chunk.js","sourcesContent":["import axios from \"axios\";\nlet baseURL = \"http://localhost:3000/auth\";\nprocess.env.NODE_ENV === \"production\"\n  ? (baseURL = \"https://vicaty.herokuapp.com/auth\")\n  : (baseURL = \"http://localhost:3000/auth\");\n\nconst authService = axios.create({\n  baseURL,\n  withCredentials: true,\n});\n\nauthService.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  (error) => {\n    return error;\n  }\n);\n\nexport const signup = async ({ username, email, password }) => {\n  const user = await authService.post(\"/signup\", {\n    username,\n    password,\n    email,\n  });\n  return user;\n};\n\nexport const login = async (userData) => {\n  const { data: user } = await authService.post(\"/login\", userData);\n  return user;\n};\n\nexport const getCurrentUser = async () => {\n  const { data: user } = await authService.get(\"/currentuser\");\n  return user;\n};\n\nexport const logoutP = async () => {\n  await authService.get(\"/logout\");\n};\n\nexport const updatePhoto = async (image) => {\n  await authService.put(\"/photo\", { image });\n};\n","import React, { createContext, useState, useEffect } from \"react\";\nimport { getCurrentUser } from \"./services/auth\";\n\nexport const Context = createContext();\n\nexport default function OurProvider({ children }) {\n  const [user, setuser] = useState(null);\n\n  useEffect(() => {\n    async function getSession() {\n      const { user } = await getCurrentUser();\n      if (user?.username) {\n        loginUser(user);\n      }\n    }\n    getSession();\n  }, []);\n\n  function loginUser(user) {\n    setuser(user);\n  }\n  function logout() {\n    setuser(null);\n  }\n\n  return (\n    <Context.Provider\n      value={{\n        user,\n        loginUser,\n        logout,\n      }}>\n      {children}\n    </Context.Provider>\n  );\n}\n","import React, { useContext } from \"react\";\nimport { Layout, Menu, Breadcrumb } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport { Context } from \"../context\";\nimport { logoutP } from \"../services/auth\";\n\nconst { Header, Content, Footer } = Layout;\nconst LayoutApp = ({ children }) => {\n  const { user, logout } = useContext(Context);\n\n  async function setlogout() {\n    await logoutP();\n    logout();\n  }\n\n  //\n\n  return (\n    <Layout\n      className=\"layout\"\n      style={{\n        height: \"100vh\",\n        // background: \"linear-gradient(90deg, #C1DFC4 0%,  #DEECDD 100%)\",\n        overflow: \"auto\",\n      }}>\n      <Header>\n        <Menu\n          theme=\"light\"\n          style={{ width: \"100vw\", position: \"absolute\", right: \"0\" }}\n          mode=\"horizontal\">\n          <Menu.Item key=\"1\">\n            <Link to=\"/\">Home</Link>\n          </Menu.Item>\n\n          {user ? (\n            <>\n              <Menu.Item key=\"5\">\n                <Link to=\"/profile\">Profile</Link>\n              </Menu.Item>\n              <Menu.Item onClick={setlogout} key=\"4\">\n                Logout\n              </Menu.Item>\n            </>\n          ) : (\n            <>\n              <Menu.Item key=\"2\">\n                <Link to=\"/login\">Login</Link>\n              </Menu.Item>\n              <Menu.Item key=\"3\">\n                <Link to=\"/signup\">Signup</Link>\n              </Menu.Item>\n            </>\n          )}\n        </Menu>\n      </Header>\n      <Content>\n        <br />\n        <br />\n        {children}\n      </Content>\n      <Footer\n        style={{\n          textAlign: \"center\",\n          backgroundColor: \"white\",\n          color: \"black\",\n          marginTop: \"30px\",\n          height: \"50px\",\n          position: \"fixed\",\n          bottom: \"0\",\n          paddingBottom: \"40px\",\n          width: \"100vw\",\n        }}>\n        ©2020 Edgar V. C.\n      </Footer>\n    </Layout>\n  );\n};\n\nexport default LayoutApp;\n","import React, { useContext } from \"react\";\nimport { Form, Input, Button, Cascader, Typography, notification } from \"antd\";\nimport { signup } from \"../services/auth\";\nimport { Redirect } from \"react-router-dom\";\nimport { Context } from \"../context\";\nconst { Title, Text } = Typography;\n\nconst Signup = ({ history }) => {\n  const [form] = Form.useForm();\n  const { user } = useContext(Context);\n  const openNotificationWithIcon = (type) => {\n    notification[type]({\n      message: \"ERROR\",\n      description: \"Username already exists\",\n    });\n  };\n\n  async function onFinish(values) {\n    const user = await signup(values);\n    if (!user.data) {\n      openNotificationWithIcon(`warning`);\n    } else {\n      history.push(\"/login\");\n    }\n  }\n\n  return !user ? (\n    <Form layout=\"vertical\" form={form} onFinish={onFinish}>\n      <Title level={1}>Create Account</Title>\n\n      <Form.Item\n        label=\"User Name\"\n        name=\"username\"\n        rules={[{ required: true, message: \"Please input your user name!\" }]}>\n        <Input />\n      </Form.Item>\n      <Form.Item\n        label=\"E-mail\"\n        name=\"email\"\n        rules={[{ required: true, message: \"Please input your user name!\" }]}>\n        <Input />\n      </Form.Item>\n      <Form.Item\n        label=\"Password\"\n        name=\"password\"\n        rules={[{ required: true, message: \"Please input your password!\" }]}>\n        <Input.Password />\n      </Form.Item>\n\n      <Form.Item>\n        <Button\n          // type=\"primary\"\n          style={{\n            marginTop: \"15px\",\n            backgroundColor: \"#364d79\",\n            color: \"white\",\n            borderRadius: \"10px\",\n          }}\n          block\n          htmlType=\"submit\">\n          SIGNUP\n        </Button>\n      </Form.Item>\n    </Form>\n  ) : (\n    <Redirect to=\"/profile\" />\n  );\n};\n\nexport default Signup;\n","import React, { useContext } from \"react\";\nimport { Form, Input, Button, Cascader, Typography, notification } from \"antd\";\nimport { login } from \"../services/auth\";\nimport { Redirect } from \"react-router-dom\";\nimport { Context } from \"../context\";\n\nconst { Title, Text } = Typography;\n\nconst Signup = ({ history }) => {\n  const [form] = Form.useForm();\n  const { user, loginUser } = useContext(Context);\n  const openNotificationWithIcon = (type) => {\n    notification[type]({\n      message: \"ERROR\",\n      description: \"Wrong Username or Password\",\n    });\n  };\n\n  async function onFinish(values) {\n    const user = await login(values);\n    if (!user) {\n      openNotificationWithIcon(`warning`);\n    } else {\n      loginUser(user);\n      history.push(\"/profile\");\n    }\n  }\n\n  return !user ? (\n    <Form layout=\"vertical\" form={form} onFinish={onFinish}>\n      <Title level={1}>LOGIN</Title>\n      <Form.Item\n        label=\"User Name\"\n        name=\"username\"\n        rules={[{ required: true, message: \"Please input your user name!\" }]}>\n        <Input />\n      </Form.Item>\n      <Form.Item\n        type=\"password\"\n        label=\"Password\"\n        name=\"password\"\n        rules={[{ required: true, message: \"Please input your password!\" }]}>\n        <Input.Password />\n      </Form.Item>\n\n      <Form.Item>\n        <Button\n          // type=\"primary\"\n          style={{\n            marginTop: \"15px\",\n            backgroundColor: \"#364d79\",\n            color: \"white\",\n            borderRadius: \"10px\",\n          }}\n          block\n          htmlType=\"submit\">\n          LOGIN\n        </Button>\n      </Form.Item>\n    </Form>\n  ) : (\n    <Redirect to=\"/profile\" />\n  );\n};\n\nexport default Signup;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Typography, Carousel } from \"antd\";\nconst contentStyle = {\n  height: \"250px\",\n  color: \"#fff\",\n  lineHeight: \"160px\",\n  textAlign: \"center\",\n  background: \"linear-gradient(90deg, #364d79 0%, white 220%)\",\n};\nconst { Title, Text } = Typography;\nconst Home = () => {\n  return (\n    <div>\n      <>\n        <center>\n          <div style={{ width: \"50vw\", marginBottom: \"40px\" }}>\n            <Title level={1}>Vicaty </Title>\n            <Text> An API builder made with love</Text>\n          </div>\n          <Carousel autoplay>\n            <div>\n              <h3 style={contentStyle}>Easy to Use</h3>\n            </div>\n            <div>\n              <h3 style={contentStyle}>Modify data within seconds</h3>\n            </div>\n            <div>\n              <h3 style={contentStyle}>Build API's without a line of code</h3>\n            </div>\n            <div>\n              <h3 style={contentStyle}>Made with love</h3>\n            </div>\n          </Carousel>\n        </center>\n        <br />\n      </>\n    </div>\n  );\n};\n\nexport default Home;\n","import axios from \"axios\";\nlet baseURL = \"http://localhost:3000/user\";\nprocess.env.NODE_ENV === \"production\"\n  ? (baseURL = \"https://vicaty.herokuapp.com/user\")\n  : (baseURL = \"http://localhost:3000/user\");\n\nconst userService = axios.create({\n  baseURL,\n  withCredentials: true,\n});\nuserService.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  (error) => {\n    return error;\n  }\n);\n\nexport const viewProjects = async () => {\n  const projects = await userService.get(\"/\");\n  return projects;\n};\nexport const createProject = async ({ projectName }) => {\n  const newProject = await userService.post(\"/\", {\n    projectName,\n  });\n  return newProject;\n};\nexport const deleteProject = async (projectId) => {\n  console.log(`iddddd`, projectId);\n  const message = await userService.delete(`/project/${projectId}`);\n  console.log(`messageee`, message);\n  return message;\n};\nexport const createModel = async (createdModelName, projectId, description) => {\n  const newModel = await userService.post(`/model/${projectId}`, {\n    createdModelName,\n    description,\n  });\n  return newModel;\n};\n\nexport const viewProject = async (projectId) => {\n  const project = await userService.get(`/project/${projectId}`);\n  return project;\n};\n\nexport const editProject = async (projectId, projectName) => {\n  const project = await userService.put(`/project/${projectId}`, {\n    projectName,\n  });\n  return project;\n};\n\nexport const duplicateProject = async (projectId, projectName) => {\n  const project = await userService.post(`/duplicateProject/${projectId}`, {\n    projectName,\n  });\n  return project;\n};\n\nexport const viewModel = async (modelId) => {\n  const model = await userService.get(`/model/${modelId}`);\n  return model;\n};\n\nexport const editModel = async (modelId, createdModelName, description) => {\n  const model = await userService.put(`/model/${modelId}`, {\n    createdModelName,\n    description,\n  });\n  return model;\n};\nexport const deleteCreatedModel = async (modelId) => {\n  const message = await userService.delete(`/model/${modelId}`);\n  return message;\n};\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { Button, Typography, Input, Card, Row, Col, Form, Modal } from \"antd\";\nimport axios from \"axios\";\nimport { updatePhoto, getCurrentUser } from \"../services/auth\";\nimport {\n  viewProjects,\n  createProject,\n  deleteProject,\n  editProject,\n  duplicateProject,\n} from \"../services/backend\";\nimport { Context } from \"../context\";\nimport { Link } from \"react-router-dom\";\n\nconst { Title, Text } = Typography;\n\nconst Profile = () => {\n  const { user, loginUser } = useContext(Context);\n  const [projects, setProjects] = useState(null);\n  const [fetchedProjects, setFetchedProjects] = useState(false);\n  const [form] = Form.useForm();\n  const [updateForm] = Form.useForm();\n  const [duplicateForm] = Form.useForm();\n  const [modalState, setModalState] = useState(false);\n  const [projectDeleteModal, setProjectDeleteModal] = useState(false);\n  const [updateModalState, setUpdateModalState] = useState(false);\n  const [projectToDelete, setProjectToDelete] = useState(null);\n  const [projectToUpdate, setProjectToUpdate] = useState(`null`);\n\n  const [duplicationModalState, setDuplicationModalState] = useState(false);\n  const [projectToDuplicate, setProjectToDuplicate] = useState(`null`);\n  //load data functions\n  useEffect(() => {\n    const getProjects = async () => {\n      const { data } = await viewProjects();\n      setProjects(data);\n      if (fetchedProjects === false) {\n        setFetchedProjects(true);\n      }\n    };\n    getProjects();\n  }, [fetchedProjects]);\n  //Form functions\n  async function onFinish(values) {\n    createProject(values);\n    setFetchedProjects(false);\n    form.resetFields();\n    handleModal();\n  }\n\n  function handleModal() {\n    setModalState(!modalState);\n  }\n\n  function handleDeleteProject() {\n    setProjectDeleteModal(!projectDeleteModal);\n  }\n  function setProjectF(projectId) {\n    setProjectToDelete(projectId);\n  }\n  function deleteProjectConfirmed() {\n    const message = deleteProject(projectToDelete);\n    setFetchedProjects(false);\n    handleDeleteProject();\n  }\n  function setProjectToUpdateF(projectName, projectId) {\n    setProjectToUpdate({ projectName: projectName, projectId: projectId });\n  }\n  function handleUpdateModal() {\n    setUpdateModalState(!updateModalState);\n    updateForm.resetFields();\n  }\n  function onFinishUpdate(values) {\n    // console.log(`form values`, values);\n    // console.log(`projtouuup`, projectToUpdate);\n    editProject(projectToUpdate.projectId, values.projectName);\n    updateForm.resetFields();\n    handleUpdateModal();\n    setFetchedProjects(false);\n  }\n  //duplication functions\n  function setProjectToDuplicateF(projectName, projectId) {\n    setProjectToDuplicate({ projectName: projectName, projectId: projectId });\n  }\n\n  function handleDuplicationModal() {\n    setDuplicationModalState(!duplicationModalState);\n    duplicateForm.resetFields();\n  }\n\n  async function onFinishDuplication(values) {\n    await duplicateProject(projectToDuplicate.projectId, values.projectName);\n    duplicateForm.resetFields();\n    handleDuplicationModal();\n    setFetchedProjects(false);\n  }\n  //image uploader\n  const uploadImageUrl = async (e) => {\n    const data = new FormData();\n    data.append(\"file\", e.target.files[0]);\n    data.append(\"upload_preset\", \"lab-ironprofile-ahe\");\n    const {\n      data: { secure_url },\n    } = await axios.post(\n      \"https://api.cloudinary.com/v1_1/vicaty/image/upload\",\n      data\n    );\n    await updatePhoto(secure_url);\n    const { user } = await getCurrentUser();\n    loginUser(user);\n  };\n  return user ? (\n    <div>\n      <center>\n        <Modal\n          title=\"Create new Project Schema\"\n          visible={modalState}\n          onOk={handleModal}\n          onCancel={handleModal}>\n          <Form layout=\"vertical\" form={form} onFinish={onFinish}>\n            <Form.Item\n              label=\"Project Schema name\"\n              name=\"projectName\"\n              rules={[{ required: true, message: \"Please input project\" }]}>\n              <Input />\n            </Form.Item>\n\n            <Form.Item>\n              <Button\n                style={{\n                  marginTop: \"15px\",\n                  backgroundColor: \"#638165\",\n                  color: \"white\",\n                  borderRadius: \"10px\",\n                }}\n                block\n                htmlType=\"submit\">\n                Submit\n              </Button>\n            </Form.Item>\n          </Form>\n        </Modal>\n        <Modal\n          title=\"Update Project Schema's name\"\n          visible={updateModalState}\n          onOk={handleUpdateModal}\n          onCancel={handleUpdateModal}>\n          <Form layout=\"vertical\" form={updateForm} onFinish={onFinishUpdate}>\n            <Form.Item\n              initialValue={projectToUpdate.projectName}\n              label=\"Project Schema name\"\n              name=\"projectName\"\n              rules={[\n                { required: true, message: \"Please input project's name\" },\n              ]}>\n              <Input />\n            </Form.Item>\n\n            <Form.Item>\n              <Button\n                style={{\n                  marginTop: \"15px\",\n                  backgroundColor: \"#364d79\",\n                  color: \"white\",\n                  borderRadius: \"10px\",\n                }}\n                block\n                htmlType=\"submit\">\n                Submit\n              </Button>\n            </Form.Item>\n          </Form>\n        </Modal>\n        <Modal\n          title={`Duplicate Project from ${projectToDuplicate.projectName}`}\n          visible={duplicationModalState}\n          onOk={handleDuplicationModal}\n          onCancel={handleDuplicationModal}>\n          <Form\n            layout=\"vertical\"\n            form={duplicateForm}\n            onFinish={onFinishDuplication}>\n            <Form.Item\n              initialValue={projectToDuplicate.projectName}\n              label=\"New Project name\"\n              name=\"projectName\"\n              rules={[\n                { required: true, message: \"Please input project's name\" },\n              ]}>\n              <Input />\n            </Form.Item>\n\n            <Form.Item>\n              <Button\n                style={{\n                  marginTop: \"15px\",\n                  backgroundColor: \"#638165\",\n                  color: \"white\",\n                  borderRadius: \"10px\",\n                }}\n                block\n                htmlType=\"submit\">\n                Duplicate\n              </Button>\n            </Form.Item>\n          </Form>\n        </Modal>\n        <Modal\n          title=\"Are you sure you want to delete this Project?\"\n          visible={projectDeleteModal}\n          onOk={handleDeleteProject}\n          onCancel={handleDeleteProject}>\n          <Button\n            style={{\n              margin: \"15px 0\",\n              backgroundColor: \"red\",\n              color: \"white\",\n            }}\n            block\n            onClick={() => {\n              deleteProjectConfirmed();\n            }}>\n            DELETE\n          </Button>\n        </Modal>\n        <div\n          style={{\n            width: \"100vw\",\n            paddingLeft: \"15vw\",\n            paddingRight: \"15vw\",\n            marginTop: \"15px\",\n            background: \"linear-gradient(90deg, #364d79 0%, white 220%)\",\n\n            color: \"white\",\n            borderRadius: \"3px\",\n          }}>\n          <Title style={{ color: \"white\" }} level={1}>\n            {user.username.toUpperCase()}'s Projects SCHEMAS\n            <p>USER ID : {user._id}</p>\n          </Title>\n          <h3 style={{ color: \"white\" }}>\n            Here you can see all of your existing projects schemas. Don't have\n            any? click below to create a new one!\n          </h3>\n          <Button\n            style={{\n              margin: \"15px 0\",\n              backgroundColor: \"white\",\n              color: \"#364d79\",\n            }}\n            onClick={handleModal}\n            block>\n            Create New Project Schema!\n          </Button>\n        </div>\n        <div style={{ margin: \"20px\" }}>\n          <Row gutter={[16, 16]}>\n            {projects?.map((project) => {\n              return (\n                <Col key={project._id} xs={24} sm={24} md={12} lg={8}>\n                  <Card\n                    title={project.projectName}\n                    bordered={false}\n                    style={{ width: 300 }}>\n                    <Button\n                      style={{\n                        margin: \"15px 0\",\n                        backgroundColor: \"white\",\n                        color: \"#364d79\",\n                      }}\n                      onClick={async () => {\n                        await updateForm.resetFields();\n                        await setProjectToUpdateF(\n                          project.projectName,\n                          project._id\n                        );\n                        handleUpdateModal();\n                      }}\n                      block>\n                      Update Project's name\n                    </Button>\n                    <Button\n                      style={{\n                        margin: \"15px 0\",\n                        backgroundColor: \"white\",\n                        color: \"#364d79\",\n                      }}\n                      onClick={async () => {\n                        await duplicateForm.resetFields();\n                        await setProjectToDuplicateF(\n                          project.projectName,\n                          project._id\n                        );\n                        handleDuplicationModal();\n                      }}\n                      block>\n                      Duplicate Project\n                    </Button>\n                    <p>\n                      <strong>Project id:</strong> {project._id}\n                    </p>\n                    <p>\n                      <strong>Creation date:</strong>{\" \"}\n                      {project.created_at.slice(0, 10)}\n                    </p>\n                    <p>\n                      <strong>Last updated:</strong>{\" \"}\n                      {project.updated_at.slice(0, 10)}\n                    </p>\n                    <Button\n                      style={{\n                        margin: \"15px 0\",\n                        backgroundColor: \"#364d79\",\n                        color: \"white\",\n                      }}\n                      block>\n                      <Link\n                        to={`/project/${project.projectName}/${project._id}`}>\n                        Go to project\n                      </Link>\n                    </Button>\n                    <Button\n                      style={{\n                        margin: \"15px 0\",\n                        backgroundColor: \"red\",\n                        color: \"white\",\n                      }}\n                      block\n                      onClick={() => {\n                        setProjectF(project._id);\n                        handleDeleteProject();\n                      }}>\n                      DELETE\n                    </Button>\n                  </Card>\n                </Col>\n              );\n            })}\n          </Row>\n        </div>\n      </center>\n    </div>\n  ) : (\n    <Redirect to=\"/\" />\n  );\n};\n\nexport default Profile;\n{\n  /* <img\n          style={{\n            width: \"300px\",\n            height: \"300px\",\n            borderRadius: \"50%\",\n            objectFit: \"cover\",\n          }}\n          src={user.image}\n          alt=\"profile-picture\"\n        /> \n        <input\n          type=\"file\"\n          name=\"image\"\n          id=\"image\"\n          onChange={uploadImageUrl}\n        />\n        */\n}\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport {\n  Button,\n  Typography,\n  Input,\n  Card,\n  Row,\n  Col,\n  Form,\n  Modal,\n  Collapse,\n} from \"antd\";\nimport axios from \"axios\";\nimport { updatePhoto, getCurrentUser } from \"../services/auth\";\nimport {\n  viewProject,\n  createModel,\n  deleteCreatedModel,\n  editModel,\n} from \"../services/backend\";\nimport { Context } from \"../context\";\nimport { Link } from \"react-router-dom\";\n\nconst { Title, Text } = Typography;\nconst { Panel } = Collapse;\n\nconst Project = (props) => {\n  const { user, loginUser } = useContext(Context);\n  const [project, setProject] = useState(null);\n  const [form] = Form.useForm();\n  const [updateModelForm] = Form.useForm();\n  const [fetchedProject, setFetchedProject] = useState(false);\n  const [modalState, setModalState] = useState(false);\n  const [modelDeleteModal, setModelDeleteModal] = useState(false);\n  const [modelToDelete, setModelToDelete] = useState(null);\n  const [modelUpdateModal, setModelUpdateModal] = useState(false);\n  const [modelToUpdate, setModelToUpdate] = useState(false);\n\n  //load data functions\n  useEffect(() => {\n    const getProject = async () => {\n      const { data } = await viewProject(props.match.params.projectId);\n      setProject(data);\n      if (fetchedProject === false) {\n        setFetchedProject(true);\n      }\n    };\n    getProject();\n  }, [fetchedProject]);\n\n  //Form functions\n  async function onFinish({ createdModelName, description }) {\n    createModel(createdModelName, props.match.params.projectId, description);\n    setFetchedProject(false);\n    handleModal();\n  }\n\n  function handleModal() {\n    setModalState(!modalState);\n  }\n  function handleDeleteModal() {\n    setModelDeleteModal(!modelDeleteModal);\n  }\n  function setModelF(modelId) {\n    setModelToDelete(modelId);\n  }\n  function deleteModelConfirmed() {\n    console.log(modelToDelete);\n    const message = deleteCreatedModel(modelToDelete);\n    console.log(message);\n    setFetchedProject(false);\n    handleDeleteModal();\n  }\n  function setModelToUpdateF(modelName, modelId, description) {\n    setModelToUpdate({\n      modelName: modelName,\n      modelId: modelId,\n      description: description,\n    });\n  }\n  function handleModelUpdateModal() {\n    setModelUpdateModal(!modelUpdateModal);\n    updateModelForm.resetFields();\n  }\n  function onFinishUpdate(values) {\n    editModel(modelToUpdate.modelId, values.modelName, values.description);\n    updateModelForm.resetFields();\n    handleModelUpdateModal();\n    setFetchedProject(false);\n  }\n  //image uploader\n  const uploadImageUrl = async (e) => {\n    const data = new FormData();\n    data.append(\"file\", e.target.files[0]);\n    data.append(\"upload_preset\", \"lab-ironprofile-ahe\");\n    const {\n      data: { secure_url },\n    } = await axios.post(\n      \"https://api.cloudinary.com/v1_1/vicaty/image/upload\",\n      data\n    );\n    await updatePhoto(secure_url);\n    const { user } = await getCurrentUser();\n    loginUser(user);\n  };\n  return user ? (\n    project ? (\n      <div>\n        <center>\n          <Modal\n            title=\"Create new Model\"\n            visible={modalState}\n            onOk={handleModal}\n            onCancel={handleModal}>\n            <Form layout=\"vertical\" form={form} onFinish={onFinish}>\n              <Form.Item\n                label=\"Model name\"\n                name=\"createdModelName\"\n                rules={[\n                  { required: true, message: \"Please input model name\" },\n                ]}>\n                <Input />\n              </Form.Item>\n              <Form.Item\n                label=\"Model description or value\"\n                name=\"description\"\n                rules={[\n                  {\n                    required: true,\n                    message: \"Please input model value or description\",\n                  },\n                ]}>\n                <Input />\n              </Form.Item>\n\n              <Form.Item>\n                <Button\n                  style={{\n                    marginTop: \"15px\",\n                    backgroundColor: \"#364d79\",\n                    color: \"white\",\n                    borderRadius: \"10px\",\n                  }}\n                  block\n                  htmlType=\"submit\">\n                  Submit\n                </Button>\n              </Form.Item>\n            </Form>\n          </Modal>\n          <Modal\n            title=\"Update Model\"\n            visible={modelUpdateModal}\n            onOk={handleModelUpdateModal}\n            onCancel={handleModelUpdateModal}>\n            <Form\n              layout=\"vertical\"\n              form={updateModelForm}\n              onFinish={onFinishUpdate}>\n              <Form.Item\n                initialValue={modelToUpdate.modelName}\n                label=\"Model name\"\n                name=\"modelName\"\n                rules={[\n                  { required: true, message: \"Please input model's name\" },\n                ]}>\n                <Input />\n              </Form.Item>\n              <Form.Item\n                initialValue={modelToUpdate.description}\n                label=\"Model description\"\n                name=\"description\"\n                rules={[\n                  {\n                    required: true,\n                    message: \"Please input model's description\",\n                  },\n                ]}>\n                <Input />\n              </Form.Item>\n\n              <Form.Item>\n                <Button\n                  style={{\n                    marginTop: \"15px\",\n                    backgroundColor: \"#638165\",\n                    color: \"white\",\n                    borderRadius: \"10px\",\n                  }}\n                  block\n                  htmlType=\"submit\">\n                  Submit\n                </Button>\n              </Form.Item>\n            </Form>\n          </Modal>\n          <Modal\n            title=\"Are you sure you want to delete this Model?\"\n            visible={modelDeleteModal}\n            onOk={handleDeleteModal}\n            onCancel={handleDeleteModal}>\n            <Button\n              style={{\n                margin: \"15px 0\",\n                backgroundColor: \"red\",\n                color: \"white\",\n              }}\n              block\n              onClick={() => {\n                deleteModelConfirmed();\n              }}>\n              DELETE\n            </Button>\n          </Modal>\n          <div\n            style={{\n              width: \"100vw\",\n              paddingLeft: \"15vw\",\n              paddingRight: \"15vw\",\n              marginTop: \"15px\",\n              background: \"linear-gradient(90deg, #364d79 0%, white 220%)\",\n\n              color: \"white\",\n            }}>\n            <Title style={{ color: \"white\" }} level={1}>\n              {props.match.params.projectName}'s MODELS\n            </Title>\n            <Title style={{ color: \"white\" }} level={3}>\n              {props.match.params.projectName}'s MODELS\n            </Title>\n            <h3 style={{ color: \"white\" }}>\n              Here you can see all your models corresponding to the\n              {props.match.params.projectName} project. click below to create a\n              new one!\n            </h3>\n            <Button\n              style={{\n                margin: \"15px 0\",\n                backgroundColor: \"white\",\n                color: \"#364d79\",\n              }}\n              onClick={handleModal}\n              block>\n              Create New Model!\n            </Button>\n          </div>\n          <div style={{ margin: \"20px\" }}>\n            {project[0].createdModels.map((model) => {\n              return (\n                <Card\n                  key={model._id}\n                  title={model.createdModelName}\n                  bordered={true}\n                  style={{\n                    marginBottom: \"40px\",\n                    borderTop: \"3px solid #364d79\",\n                  }}>\n                  <p>\n                    <strong>Model description:</strong> {model.description}\n                  </p>\n                  <Button\n                    style={{\n                      margin: \"15px 0\",\n                      backgroundColor: \"white\",\n                      color: \"#364d79\",\n                      width: \"40vw\",\n                    }}\n                    onClick={async () => {\n                      await updateModelForm.resetFields();\n                      await setModelToUpdateF(\n                        model.createdModelName,\n                        model._id,\n                        model.description\n                      );\n                      handleModelUpdateModal();\n                    }}\n                    block>\n                    Update Model's name and description\n                  </Button>\n                  <p>\n                    <strong>Model id:</strong> {model._id}\n                  </p>\n                  <p>\n                    <strong>Creation date:</strong>{\" \"}\n                    {model.created_at.slice(0, 10)}\n                  </p>\n                  <p>\n                    <strong>Last updated:</strong>{\" \"}\n                    {model.updated_at.slice(0, 10)}\n                  </p>\n                  <Button\n                    style={{\n                      width: \"30vw\",\n                      margin: \"15px 0\",\n                      backgroundColor: \"#364d79\",\n                      color: \"white\",\n                    }}>\n                    <Link to={`/model/${model.createdModelName}/${model._id}`}>\n                      Go to model\n                    </Link>\n                  </Button>\n                  <Button\n                    style={{\n                      width: \"30vw\",\n                      margin: \"15px 0\",\n                      backgroundColor: \"red\",\n                      color: \"white\",\n                    }}\n                    onClick={() => {\n                      setModelF(model._id);\n                      handleDeleteModal();\n                    }}>\n                    DELETE\n                  </Button>\n                  <Collapse\n                    style={{\n                      background:\n                        \"linear-gradient(90deg, white 0%, #364d79 220%)\",\n                    }}>\n                    <Panel header=\"API's endpoints\" key=\"1\">\n                      {Object.entries(model.api).map((object) => {\n                        return (\n                          <Card\n                            style={{\n                              background:\n                                \"linear-gradient(90deg, white 0%, #364d79 220%)\",\n                            }}\n                            key={object[0]}>\n                            <p>\n                              <strong style={{ width: \"100%\" }}>\n                                Endpoint function:{\" \"}\n                              </strong>\n                              {object[0]}\n                            </p>\n                            <p>\n                              <strong style={{ width: \"100%\" }}>\n                                Request:{\" \"}\n                              </strong>\n                              {object[1].reqType}\n                            </p>\n                            <p>\n                              <strong style={{ width: \"100%\" }}>Route: </strong>{\" \"}\n                              {object[1].route}\n                            </p>\n                            <p>\n                              <strong style={{ width: \"100%\" }}>\n                                Request body elements:{\" \"}\n                              </strong>\n                              {object[1].body}\n                            </p>\n                          </Card>\n                        );\n                      })}\n                    </Panel>\n                  </Collapse>\n                </Card>\n              );\n            })}\n          </div>\n        </center>\n      </div>\n    ) : (\n      <p>Loading</p>\n    )\n  ) : (\n    <Redirect to=\"/\" />\n  );\n};\n\nexport default Project;\n","import axios from \"axios\";\nlet baseURL = \"http://localhost:3000/user\";\nprocess.env.NODE_ENV === \"production\"\n  ? (baseURL = \"https://vicaty-api.herokuapp.com/user\")\n  : (baseURL = \"http://localhost:3002/user\");\n\nconst userService = axios.create({\n  baseURL,\n  withCredentials: false,\n});\nuserService.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  (error) => {\n    return error;\n  }\n);\n\nexport const createElement = async (elementName, modelId, userId) => {\n  const updatedModel = await userService.post(`/element/create/${modelId}`, {\n    userId,\n    elementName,\n  });\n  return updatedModel;\n};\n\nexport const addSingle = async ({ data }, modelId, elementName, userId) => {\n  const updatedElement = await userService.post(\n    `/element/addSingle/${modelId}/${elementName}`,\n    {\n      userId,\n      value: data,\n    }\n  );\n  return updatedElement;\n};\n\nexport const deleteSingleData = async (\n  modelId,\n  elementName,\n  dataId,\n  userId\n) => {\n  const updatedElement = await userService.post(\n    `/element/deleteSingle/${modelId}/${elementName}/${dataId}`,\n    {\n      userId,\n    }\n  );\n  return updatedElement;\n};\n\nexport const getElement = async (elementName, modelId, userId) => {\n  const element = await userService.post(\n    `/element/getSingle/${modelId}/${elementName}`,\n    {\n      userId,\n    }\n  );\n  return element;\n};\n\nexport const updateSingle = async (\n  modelId,\n  elementName,\n  dataId,\n  { data: value },\n  userId\n) => {\n  const updatedElement = await userService.put(\n    `/element/updateSingle/${modelId}/${elementName}/${dataId}`,\n    {\n      userId,\n      value,\n    }\n  );\n  return updatedElement;\n};\n","import React, { useContext, useState, useEffect, useRef } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport {\n  Button,\n  Typography,\n  Input,\n  Card,\n  Row,\n  Col,\n  Form,\n  Modal,\n  Collapse,\n  notification,\n} from \"antd\";\nimport axios from \"axios\";\nimport { updatePhoto, getCurrentUser } from \"../services/auth\";\nimport { viewModel, getElement } from \"../services/backend\";\nimport {\n  addSingle,\n  createElement,\n  deleteSingleData,\n  updateSingle,\n} from \"../services/api\";\nimport { Context } from \"../context\";\nimport { Link } from \"react-router-dom\";\nconst { Title, Text } = Typography;\nconst { Panel } = Collapse;\nconst Model = (props) => {\n  const { user, loginUser } = useContext(Context);\n  const [model, setModel] = useState(null);\n  const [form] = Form.useForm();\n  const [dataForm] = Form.useForm();\n  const [updateDataForm] = Form.useForm();\n  const [fetchedModel, setFetchedModel] = useState(false);\n  const [modalState, setModalState] = useState(false);\n  const [dataCreationModal, setDataCreationModal] = useState(false);\n  const [elementName, setElementName] = useState(null);\n  const [deleteModalState, setDeleteModalState] = useState(false);\n  const [valueId, setValueId] = useState(null);\n  const [dataUpdateModal, setDataUpdateModal] = useState(false);\n  const [dataValue, setDataValue] = useState(null);\n  const [newDataValue, setNewDataValue] = useState(null);\n  const openNotificationWithIcon = (type) => {\n    notification[type]({\n      message: \"ERROR\",\n      description:\n        \"An element already exists with that name. Element's names must be unique\",\n    });\n  };\n  //load data functions\n  useEffect(() => {\n    const getModel = async () => {\n      const { data } = await viewModel(props.match.params.modelId);\n      setModel([data]);\n\n      if (fetchedModel === false) {\n        setFetchedModel(true);\n      }\n    };\n    getModel();\n  }, [fetchedModel]);\n  //\n  //\n  //\n  //\n  //   console.log(`modeeeeeel`, model);\n  //TODO: complete edit and delete\n  if (model) {\n    //TODO voy aqui, these are the necessary Routes for Mapping data as JSX\n    //TODO: put elements[i] index as key to search for it\n    // console.log(`namee`, Object.entries(model[0].elements[0])[0][0]); //name of the element as String, ELEMENTS[i] INDEX IS IMPORTANT\n    // console.log(`arrToMap`, model[0].elements); //name of the element as String, ELEMENTS[i] INDEX IS IMPORTANT\n    // console.log(`dataa`, Object.entries(model[0].elements[0])[0][1].data); //data (values of elements) as array of objects\n    // console.log(\n    //   `valuee`,\n    //   Object.entries(model[0].elements[0])[0][1].data[0].value\n    // );\n    //value of element as String (or primitive data)\n    // console.log(\n    //   `data. knowing element's name and elements index IS IMPORTANT`,\n    //   model[0].elements[0].testElement1Edg.data\n    // ); //name of the element as String\n  }\n  //\n  //\n  //\n  //\n  //Form functions\n  async function onFinish({ elementName }) {\n    const newElem = await createElement(\n      elementName,\n      props.match.params.modelId,\n      user._id\n    );\n    if (!newElem.data) {\n      openNotificationWithIcon(`warning`);\n    } else {\n      form.resetFields();\n      setFetchedModel(false);\n      handleModal();\n    }\n  }\n\n  function handleModal() {\n    setModalState(!modalState);\n    form.resetFields();\n  }\n  function handleDataCreationModal() {\n    setDataCreationModal(!dataCreationModal);\n    dataForm.resetFields();\n  }\n  async function onFinishData(value) {\n    addSingle(value, props.match.params.modelId, elementName, user._id);\n\n    setFetchedModel(false);\n    dataForm.resetFields();\n    handleDataCreationModal();\n  }\n  async function setElementNameF(elementNameN) {\n    setElementName(elementNameN);\n  }\n  async function deleteElementModal(elementNameN, valueIdN) {\n    await setElementName(elementNameN);\n    await setValueId(valueIdN);\n    handleDeleteElementModal();\n  }\n  function handleDeleteElementModal() {\n    setDeleteModalState(!deleteModalState);\n    form.resetFields();\n  }\n  function deleteWithConfirmation() {\n    console.log(`element to deleteee`, elementName, valueId);\n    deleteSingleData(\n      props.match.params.modelId,\n      elementName,\n      valueId,\n      user._id\n    );\n    setFetchedModel(false);\n    form.resetFields();\n\n    handleDeleteElementModal();\n  }\n  async function updateElementModal(elementNameN, valueIdN, dataValue) {\n    await setElementName(elementNameN);\n    await setValueId(valueIdN);\n    await setDataValue(dataValue);\n  }\n  function handleDataUpdateModal() {\n    setDataUpdateModal(!dataUpdateModal);\n    updateDataForm.resetFields();\n  }\n  function onFinishUpdateData(value) {\n    updateSingle(\n      props.match.params.modelId,\n      elementName,\n      valueId,\n      value,\n      user._id\n    );\n    setFetchedModel(false);\n    handleDataUpdateModal();\n  }\n  //get elements\n  //image uploader\n  const uploadImageUrl = async (e) => {\n    const data = new FormData();\n    data.append(\"file\", e.target.files[0]);\n    data.append(\"upload_preset\", \"lab-ironprofile-ahe\");\n    const {\n      data: { secure_url },\n    } = await axios.post(\n      \"https://api.cloudinary.com/v1_1/vicaty/image/upload\",\n      data\n    );\n\n    await updatePhoto(secure_url);\n    const { user } = await getCurrentUser();\n    loginUser(user);\n  };\n  return user ? (\n    model ? (\n      <div>\n        <center>\n          <Modal\n            title=\"Create new Element\"\n            visible={modalState}\n            onOk={handleModal}\n            onCancel={handleModal}>\n            <Form layout=\"vertical\" form={form} onFinish={onFinish}>\n              <Form.Item\n                label=\"Element name\"\n                name=\"elementName\"\n                rules={[\n                  { required: true, message: \"Please input element name\" },\n                ]}>\n                <Input />\n              </Form.Item>\n\n              <Form.Item>\n                <Button\n                  style={{\n                    marginTop: \"15px\",\n                    backgroundColor: \"#638165\",\n                    color: \"white\",\n                    borderRadius: \"10px\",\n                  }}\n                  block\n                  htmlType=\"submit\">\n                  Submit\n                </Button>\n              </Form.Item>\n            </Form>\n          </Modal>\n          <div\n            style={{\n              width: \"100vw\",\n              paddingLeft: \"15vw\",\n              paddingRight: \"15vw\",\n              marginTop: \"15px\",\n              background: \"linear-gradient(90deg, #364d79 0%, white 220%)\",\n\n              color: \"white\",\n            }}>\n            <Title style={{ color: \"white\" }} level={1}>\n              {props.match.params.modelName}'s ELEMENTS\n            </Title>\n            <h3 style={{ color: \"white\" }}>\n              Here you can see all your elements corresponding to the\n              {props.match.params.modelName} model. click below to create a new\n              one!\n            </h3>\n            <Button\n              style={{\n                margin: \"15px 0\",\n                backgroundColor: \"white\",\n                color: \"#364d79\",\n              }}\n              onClick={handleModal}\n              block>\n              Create New Element!\n            </Button>\n          </div>\n          <div style={{ margin: \"20px\" }}>\n            <Row gutter={[16, 16]}>\n              <Modal\n                title=\"Add data\"\n                visible={dataCreationModal}\n                onOk={handleDataCreationModal}\n                onCancel={handleDataCreationModal}>\n                <Form layout=\"vertical\" form={dataForm} onFinish={onFinishData}>\n                  <Form.Item\n                    label=\"Data value\"\n                    name=\"data\"\n                    rules={[\n                      {\n                        required: true,\n                        message: \"Please input data\",\n                      },\n                    ]}>\n                    <Input />\n                  </Form.Item>\n\n                  <Form.Item>\n                    <Button\n                      style={{\n                        marginTop: \"15px\",\n                        backgroundColor: \"#638165\",\n                        color: \"white\",\n                        borderRadius: \"10px\",\n                      }}\n                      htmlType=\"submit\">\n                      Add Data\n                    </Button>\n                  </Form.Item>\n                </Form>\n              </Modal>\n              <Modal\n                title=\"Delete Data\"\n                visible={deleteModalState}\n                onOk={handleDeleteElementModal}\n                onCancel={handleDeleteElementModal}>\n                <Title level={2}>\n                  Are you sure you want to delete this entry?\n                </Title>\n                <Button\n                  style={{\n                    marginTop: \"15px\",\n                    backgroundColor: \"red\",\n                    color: \"white\",\n                    borderRadius: \"10px\",\n                  }}\n                  onClick={deleteWithConfirmation}\n                  block>\n                  DELETE\n                </Button>\n              </Modal>\n              <Modal\n                title=\"Update Data\"\n                visible={dataUpdateModal}\n                onOk={handleDataUpdateModal}\n                onCancel={handleDataUpdateModal}>\n                <Title level={3}>\n                  Current value:\n                  <span\n                    style={{\n                      fontSize: \"1.1rem\",\n                      color: \"#696969\",\n                      marginLeft: \"10px\",\n                    }}>\n                    {dataValue}\n                  </span>\n                </Title>\n                <Form\n                  layout=\"vertical\"\n                  form={updateDataForm}\n                  onFinish={onFinishUpdateData}>\n                  <Form.Item\n                    label=\"Input new value:\"\n                    name=\"data\"\n                    rules={[\n                      {\n                        required: true,\n                        message: \"Please input data\",\n                      },\n                    ]}>\n                    <Input />\n                  </Form.Item>\n\n                  <Form.Item>\n                    <Button\n                      style={{\n                        marginTop: \"15px\",\n                        backgroundColor: \"#638165\",\n                        color: \"white\",\n                        borderRadius: \"10px\",\n                      }}\n                      htmlType=\"submit\"\n                      block>\n                      Update\n                    </Button>\n                  </Form.Item>\n                </Form>\n              </Modal>\n              {model[0].elements.map((element) => {\n                let currentElement = Object.entries(element)[0][0];\n                return (\n                  <Card\n                    title={`element name: ${Object.entries(element)[0][0]}`}\n                    bordered={false}\n                    style={{ width: \"100vw\" }}\n                    key={Object.entries(element)[0][0]}>\n                    <Collapse\n                    //   onChange={showData}\n                    >\n                      <Panel header=\"Show Data\" key=\"1\">\n                        <Button\n                          onClick={() => {\n                            handleDataCreationModal();\n                            setElementNameF(Object.entries(element)[0][0]);\n                          }}>\n                          Add Data\n                        </Button>\n\n                        <Title level={3}>Existing Data:</Title>\n                        {Object.entries(element)[0][1].data.map((entry) => {\n                          return (\n                            <Card\n                              title={`data id: ${entry.id}`}\n                              bordered={false}\n                              style={{ width: \"100%\" }}\n                              key={entry.id}>\n                              {console.log(`data valuee`, entry.value)}\n                              <p> data value: </p>\n                              <p> {entry.value} </p>\n                              <Button\n                                style={{\n                                  margin: \"15px 0\",\n                                  backgroundColor: \"#638165\",\n                                  color: \"white\",\n                                }}\n                                onClick={() => {\n                                  updateElementModal(\n                                    currentElement,\n                                    entry.id,\n                                    entry.value\n                                  );\n                                  handleDataUpdateModal();\n                                }}>\n                                Modify\n                              </Button>\n                              <Button\n                                style={{\n                                  margin: \"15px 0\",\n                                  backgroundColor: \"white\",\n                                  color: \"red\",\n                                }}\n                                onClick={async () => {\n                                  deleteElementModal(currentElement, entry.id);\n                                }}>\n                                Delete\n                              </Button>\n                            </Card>\n                          );\n                        })}\n                      </Panel>\n                    </Collapse>\n                  </Card>\n                );\n              })}\n            </Row>\n          </div>\n        </center>\n      </div>\n    ) : (\n      <p>Loading</p>\n    )\n  ) : (\n    <Redirect to=\"/\" />\n  );\n};\n\nexport default Model;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport LayoutApp from \"./components/LayoutApp\";\nimport Signup from \"./pages/Signup\";\nimport Login from \"./pages/Login\";\nimport Home from \"./pages/Home\";\nimport Profile from \"./pages/Profile\";\nimport Project from \"./pages/Project\";\nimport Model from \"./pages/Model\";\n\nconst router = () => {\n  return (\n    <Router>\n      <LayoutApp>\n        <Switch>\n          <Route component={Home} path=\"/\" exact />\n          <Route component={Login} path=\"/login\" />\n          <Route component={Signup} path=\"/signup\" />\n          <Route component={Profile} path=\"/profile\" />\n          <Route component={Project} path=\"/project/:projectName/:projectId\" />\n          <Route component={Model} path=\"/model/:modelName/:modelId\" />\n        </Switch>\n      </LayoutApp>\n    </Router>\n  );\n};\n\nexport default router;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Router from \"./router.js\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"antd/dist/antd.css\";\nimport OurProvider from \"./context\";\n\nReactDOM.render(\n  // <React.StrictMode>\n  <OurProvider>\n    <Router />\n  </OurProvider>,\n  // </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}